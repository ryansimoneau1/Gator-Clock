

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Feb 23 17:27:20 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16LF1826
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42     0000                     
    43                           ; Generated 06/07/2023 GMT
    44                           ; 
    45                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16LF1826 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     0011                     	;# 
    92     0012                     	;# 
    93     0015                     	;# 
    94     0016                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001C                     	;# 
   102     001E                     	;# 
   103     001F                     	;# 
   104     008C                     	;# 
   105     008D                     	;# 
   106     0091                     	;# 
   107     0092                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009B                     	;# 
   116     009C                     	;# 
   117     009D                     	;# 
   118     009E                     	;# 
   119     010C                     	;# 
   120     010D                     	;# 
   121     0111                     	;# 
   122     0112                     	;# 
   123     0113                     	;# 
   124     0114                     	;# 
   125     0115                     	;# 
   126     0116                     	;# 
   127     0117                     	;# 
   128     0118                     	;# 
   129     0119                     	;# 
   130     011A                     	;# 
   131     011B                     	;# 
   132     011D                     	;# 
   133     011E                     	;# 
   134     018C                     	;# 
   135     018D                     	;# 
   136     0191                     	;# 
   137     0191                     	;# 
   138     0192                     	;# 
   139     0193                     	;# 
   140     0193                     	;# 
   141     0193                     	;# 
   142     0194                     	;# 
   143     0195                     	;# 
   144     0196                     	;# 
   145     0199                     	;# 
   146     019A                     	;# 
   147     019B                     	;# 
   148     019B                     	;# 
   149     019B                     	;# 
   150     019B                     	;# 
   151     019C                     	;# 
   152     019C                     	;# 
   153     019D                     	;# 
   154     019E                     	;# 
   155     019F                     	;# 
   156     020C                     	;# 
   157     020D                     	;# 
   158     0211                     	;# 
   159     0211                     	;# 
   160     0212                     	;# 
   161     0212                     	;# 
   162     0213                     	;# 
   163     0213                     	;# 
   164     0214                     	;# 
   165     0214                     	;# 
   166     0215                     	;# 
   167     0215                     	;# 
   168     0215                     	;# 
   169     0216                     	;# 
   170     0216                     	;# 
   171     0217                     	;# 
   172     0217                     	;# 
   173     0291                     	;# 
   174     0291                     	;# 
   175     0292                     	;# 
   176     0293                     	;# 
   177     0294                     	;# 
   178     0295                     	;# 
   179     0295                     	;# 
   180     0296                     	;# 
   181     0394                     	;# 
   182     0395                     	;# 
   183     0396                     	;# 
   184     039A                     	;# 
   185     039C                     	;# 
   186     039D                     	;# 
   187     039E                     	;# 
   188     039F                     	;# 
   189     0FE4                     	;# 
   190     0FE5                     	;# 
   191     0FE6                     	;# 
   192     0FE7                     	;# 
   193     0FE8                     	;# 
   194     0FE9                     	;# 
   195     0FEA                     	;# 
   196     0FEB                     	;# 
   197     0FED                     	;# 
   198     0FEE                     	;# 
   199     0FEF                     	;# 
   200     0000                     	;# 
   201     0001                     	;# 
   202     0002                     	;# 
   203     0003                     	;# 
   204     0004                     	;# 
   205     0005                     	;# 
   206     0006                     	;# 
   207     0007                     	;# 
   208     0008                     	;# 
   209     0009                     	;# 
   210     000A                     	;# 
   211     000B                     	;# 
   212     000C                     	;# 
   213     000D                     	;# 
   214     0011                     	;# 
   215     0012                     	;# 
   216     0015                     	;# 
   217     0016                     	;# 
   218     0016                     	;# 
   219     0017                     	;# 
   220     0018                     	;# 
   221     0019                     	;# 
   222     001A                     	;# 
   223     001B                     	;# 
   224     001C                     	;# 
   225     001E                     	;# 
   226     001F                     	;# 
   227     008C                     	;# 
   228     008D                     	;# 
   229     0091                     	;# 
   230     0092                     	;# 
   231     0095                     	;# 
   232     0096                     	;# 
   233     0097                     	;# 
   234     0098                     	;# 
   235     0099                     	;# 
   236     009A                     	;# 
   237     009B                     	;# 
   238     009B                     	;# 
   239     009C                     	;# 
   240     009D                     	;# 
   241     009E                     	;# 
   242     010C                     	;# 
   243     010D                     	;# 
   244     0111                     	;# 
   245     0112                     	;# 
   246     0113                     	;# 
   247     0114                     	;# 
   248     0115                     	;# 
   249     0116                     	;# 
   250     0117                     	;# 
   251     0118                     	;# 
   252     0119                     	;# 
   253     011A                     	;# 
   254     011B                     	;# 
   255     011D                     	;# 
   256     011E                     	;# 
   257     018C                     	;# 
   258     018D                     	;# 
   259     0191                     	;# 
   260     0191                     	;# 
   261     0192                     	;# 
   262     0193                     	;# 
   263     0193                     	;# 
   264     0193                     	;# 
   265     0194                     	;# 
   266     0195                     	;# 
   267     0196                     	;# 
   268     0199                     	;# 
   269     019A                     	;# 
   270     019B                     	;# 
   271     019B                     	;# 
   272     019B                     	;# 
   273     019B                     	;# 
   274     019C                     	;# 
   275     019C                     	;# 
   276     019D                     	;# 
   277     019E                     	;# 
   278     019F                     	;# 
   279     020C                     	;# 
   280     020D                     	;# 
   281     0211                     	;# 
   282     0211                     	;# 
   283     0212                     	;# 
   284     0212                     	;# 
   285     0213                     	;# 
   286     0213                     	;# 
   287     0214                     	;# 
   288     0214                     	;# 
   289     0215                     	;# 
   290     0215                     	;# 
   291     0215                     	;# 
   292     0216                     	;# 
   293     0216                     	;# 
   294     0217                     	;# 
   295     0217                     	;# 
   296     0291                     	;# 
   297     0291                     	;# 
   298     0292                     	;# 
   299     0293                     	;# 
   300     0294                     	;# 
   301     0295                     	;# 
   302     0295                     	;# 
   303     0296                     	;# 
   304     0394                     	;# 
   305     0395                     	;# 
   306     0396                     	;# 
   307     039A                     	;# 
   308     039C                     	;# 
   309     039D                     	;# 
   310     039E                     	;# 
   311     039F                     	;# 
   312     0FE4                     	;# 
   313     0FE5                     	;# 
   314     0FE6                     	;# 
   315     0FE7                     	;# 
   316     0FE8                     	;# 
   317     0FE9                     	;# 
   318     0FEA                     	;# 
   319     0FEB                     	;# 
   320     0FED                     	;# 
   321     0FEE                     	;# 
   322     0FEF                     	;# 
   323     0000                     	;# 
   324     0001                     	;# 
   325     0002                     	;# 
   326     0003                     	;# 
   327     0004                     	;# 
   328     0005                     	;# 
   329     0006                     	;# 
   330     0007                     	;# 
   331     0008                     	;# 
   332     0009                     	;# 
   333     000A                     	;# 
   334     000B                     	;# 
   335     000C                     	;# 
   336     000D                     	;# 
   337     0011                     	;# 
   338     0012                     	;# 
   339     0015                     	;# 
   340     0016                     	;# 
   341     0016                     	;# 
   342     0017                     	;# 
   343     0018                     	;# 
   344     0019                     	;# 
   345     001A                     	;# 
   346     001B                     	;# 
   347     001C                     	;# 
   348     001E                     	;# 
   349     001F                     	;# 
   350     008C                     	;# 
   351     008D                     	;# 
   352     0091                     	;# 
   353     0092                     	;# 
   354     0095                     	;# 
   355     0096                     	;# 
   356     0097                     	;# 
   357     0098                     	;# 
   358     0099                     	;# 
   359     009A                     	;# 
   360     009B                     	;# 
   361     009B                     	;# 
   362     009C                     	;# 
   363     009D                     	;# 
   364     009E                     	;# 
   365     010C                     	;# 
   366     010D                     	;# 
   367     0111                     	;# 
   368     0112                     	;# 
   369     0113                     	;# 
   370     0114                     	;# 
   371     0115                     	;# 
   372     0116                     	;# 
   373     0117                     	;# 
   374     0118                     	;# 
   375     0119                     	;# 
   376     011A                     	;# 
   377     011B                     	;# 
   378     011D                     	;# 
   379     011E                     	;# 
   380     018C                     	;# 
   381     018D                     	;# 
   382     0191                     	;# 
   383     0191                     	;# 
   384     0192                     	;# 
   385     0193                     	;# 
   386     0193                     	;# 
   387     0193                     	;# 
   388     0194                     	;# 
   389     0195                     	;# 
   390     0196                     	;# 
   391     0199                     	;# 
   392     019A                     	;# 
   393     019B                     	;# 
   394     019B                     	;# 
   395     019B                     	;# 
   396     019B                     	;# 
   397     019C                     	;# 
   398     019C                     	;# 
   399     019D                     	;# 
   400     019E                     	;# 
   401     019F                     	;# 
   402     020C                     	;# 
   403     020D                     	;# 
   404     0211                     	;# 
   405     0211                     	;# 
   406     0212                     	;# 
   407     0212                     	;# 
   408     0213                     	;# 
   409     0213                     	;# 
   410     0214                     	;# 
   411     0214                     	;# 
   412     0215                     	;# 
   413     0215                     	;# 
   414     0215                     	;# 
   415     0216                     	;# 
   416     0216                     	;# 
   417     0217                     	;# 
   418     0217                     	;# 
   419     0291                     	;# 
   420     0291                     	;# 
   421     0292                     	;# 
   422     0293                     	;# 
   423     0294                     	;# 
   424     0295                     	;# 
   425     0295                     	;# 
   426     0296                     	;# 
   427     0394                     	;# 
   428     0395                     	;# 
   429     0396                     	;# 
   430     039A                     	;# 
   431     039C                     	;# 
   432     039D                     	;# 
   433     039E                     	;# 
   434     039F                     	;# 
   435     0FE4                     	;# 
   436     0FE5                     	;# 
   437     0FE6                     	;# 
   438     0FE7                     	;# 
   439     0FE8                     	;# 
   440     0FE9                     	;# 
   441     0FEA                     	;# 
   442     0FEB                     	;# 
   443     0FED                     	;# 
   444     0FEE                     	;# 
   445     0FEF                     	;# 
   446     0000                     	;# 
   447     0001                     	;# 
   448     0002                     	;# 
   449     0003                     	;# 
   450     0004                     	;# 
   451     0005                     	;# 
   452     0006                     	;# 
   453     0007                     	;# 
   454     0008                     	;# 
   455     0009                     	;# 
   456     000A                     	;# 
   457     000B                     	;# 
   458     000C                     	;# 
   459     000D                     	;# 
   460     0011                     	;# 
   461     0012                     	;# 
   462     0015                     	;# 
   463     0016                     	;# 
   464     0016                     	;# 
   465     0017                     	;# 
   466     0018                     	;# 
   467     0019                     	;# 
   468     001A                     	;# 
   469     001B                     	;# 
   470     001C                     	;# 
   471     001E                     	;# 
   472     001F                     	;# 
   473     008C                     	;# 
   474     008D                     	;# 
   475     0091                     	;# 
   476     0092                     	;# 
   477     0095                     	;# 
   478     0096                     	;# 
   479     0097                     	;# 
   480     0098                     	;# 
   481     0099                     	;# 
   482     009A                     	;# 
   483     009B                     	;# 
   484     009B                     	;# 
   485     009C                     	;# 
   486     009D                     	;# 
   487     009E                     	;# 
   488     010C                     	;# 
   489     010D                     	;# 
   490     0111                     	;# 
   491     0112                     	;# 
   492     0113                     	;# 
   493     0114                     	;# 
   494     0115                     	;# 
   495     0116                     	;# 
   496     0117                     	;# 
   497     0118                     	;# 
   498     0119                     	;# 
   499     011A                     	;# 
   500     011B                     	;# 
   501     011D                     	;# 
   502     011E                     	;# 
   503     018C                     	;# 
   504     018D                     	;# 
   505     0191                     	;# 
   506     0191                     	;# 
   507     0192                     	;# 
   508     0193                     	;# 
   509     0193                     	;# 
   510     0193                     	;# 
   511     0194                     	;# 
   512     0195                     	;# 
   513     0196                     	;# 
   514     0199                     	;# 
   515     019A                     	;# 
   516     019B                     	;# 
   517     019B                     	;# 
   518     019B                     	;# 
   519     019B                     	;# 
   520     019C                     	;# 
   521     019C                     	;# 
   522     019D                     	;# 
   523     019E                     	;# 
   524     019F                     	;# 
   525     020C                     	;# 
   526     020D                     	;# 
   527     0211                     	;# 
   528     0211                     	;# 
   529     0212                     	;# 
   530     0212                     	;# 
   531     0213                     	;# 
   532     0213                     	;# 
   533     0214                     	;# 
   534     0214                     	;# 
   535     0215                     	;# 
   536     0215                     	;# 
   537     0215                     	;# 
   538     0216                     	;# 
   539     0216                     	;# 
   540     0217                     	;# 
   541     0217                     	;# 
   542     0291                     	;# 
   543     0291                     	;# 
   544     0292                     	;# 
   545     0293                     	;# 
   546     0294                     	;# 
   547     0295                     	;# 
   548     0295                     	;# 
   549     0296                     	;# 
   550     0394                     	;# 
   551     0395                     	;# 
   552     0396                     	;# 
   553     039A                     	;# 
   554     039C                     	;# 
   555     039D                     	;# 
   556     039E                     	;# 
   557     039F                     	;# 
   558     0FE4                     	;# 
   559     0FE5                     	;# 
   560     0FE6                     	;# 
   561     0FE7                     	;# 
   562     0FE8                     	;# 
   563     0FE9                     	;# 
   564     0FEA                     	;# 
   565     0FEB                     	;# 
   566     0FED                     	;# 
   567     0FEE                     	;# 
   568     0FEF                     	;# 
   569     0000                     	;# 
   570     0001                     	;# 
   571     0002                     	;# 
   572     0003                     	;# 
   573     0004                     	;# 
   574     0005                     	;# 
   575     0006                     	;# 
   576     0007                     	;# 
   577     0008                     	;# 
   578     0009                     	;# 
   579     000A                     	;# 
   580     000B                     	;# 
   581     000C                     	;# 
   582     000D                     	;# 
   583     0011                     	;# 
   584     0012                     	;# 
   585     0015                     	;# 
   586     0016                     	;# 
   587     0016                     	;# 
   588     0017                     	;# 
   589     0018                     	;# 
   590     0019                     	;# 
   591     001A                     	;# 
   592     001B                     	;# 
   593     001C                     	;# 
   594     001E                     	;# 
   595     001F                     	;# 
   596     008C                     	;# 
   597     008D                     	;# 
   598     0091                     	;# 
   599     0092                     	;# 
   600     0095                     	;# 
   601     0096                     	;# 
   602     0097                     	;# 
   603     0098                     	;# 
   604     0099                     	;# 
   605     009A                     	;# 
   606     009B                     	;# 
   607     009B                     	;# 
   608     009C                     	;# 
   609     009D                     	;# 
   610     009E                     	;# 
   611     010C                     	;# 
   612     010D                     	;# 
   613     0111                     	;# 
   614     0112                     	;# 
   615     0113                     	;# 
   616     0114                     	;# 
   617     0115                     	;# 
   618     0116                     	;# 
   619     0117                     	;# 
   620     0118                     	;# 
   621     0119                     	;# 
   622     011A                     	;# 
   623     011B                     	;# 
   624     011D                     	;# 
   625     011E                     	;# 
   626     018C                     	;# 
   627     018D                     	;# 
   628     0191                     	;# 
   629     0191                     	;# 
   630     0192                     	;# 
   631     0193                     	;# 
   632     0193                     	;# 
   633     0193                     	;# 
   634     0194                     	;# 
   635     0195                     	;# 
   636     0196                     	;# 
   637     0199                     	;# 
   638     019A                     	;# 
   639     019B                     	;# 
   640     019B                     	;# 
   641     019B                     	;# 
   642     019B                     	;# 
   643     019C                     	;# 
   644     019C                     	;# 
   645     019D                     	;# 
   646     019E                     	;# 
   647     019F                     	;# 
   648     020C                     	;# 
   649     020D                     	;# 
   650     0211                     	;# 
   651     0211                     	;# 
   652     0212                     	;# 
   653     0212                     	;# 
   654     0213                     	;# 
   655     0213                     	;# 
   656     0214                     	;# 
   657     0214                     	;# 
   658     0215                     	;# 
   659     0215                     	;# 
   660     0215                     	;# 
   661     0216                     	;# 
   662     0216                     	;# 
   663     0217                     	;# 
   664     0217                     	;# 
   665     0291                     	;# 
   666     0291                     	;# 
   667     0292                     	;# 
   668     0293                     	;# 
   669     0294                     	;# 
   670     0295                     	;# 
   671     0295                     	;# 
   672     0296                     	;# 
   673     0394                     	;# 
   674     0395                     	;# 
   675     0396                     	;# 
   676     039A                     	;# 
   677     039C                     	;# 
   678     039D                     	;# 
   679     039E                     	;# 
   680     039F                     	;# 
   681     0FE4                     	;# 
   682     0FE5                     	;# 
   683     0FE6                     	;# 
   684     0FE7                     	;# 
   685     0FE8                     	;# 
   686     0FE9                     	;# 
   687     0FEA                     	;# 
   688     0FEB                     	;# 
   689     0FED                     	;# 
   690     0FEE                     	;# 
   691     0FEF                     	;# 
   692     0000                     	;# 
   693     0001                     	;# 
   694     0002                     	;# 
   695     0003                     	;# 
   696     0004                     	;# 
   697     0005                     	;# 
   698     0006                     	;# 
   699     0007                     	;# 
   700     0008                     	;# 
   701     0009                     	;# 
   702     000A                     	;# 
   703     000B                     	;# 
   704     000C                     	;# 
   705     000D                     	;# 
   706     0011                     	;# 
   707     0012                     	;# 
   708     0015                     	;# 
   709     0016                     	;# 
   710     0016                     	;# 
   711     0017                     	;# 
   712     0018                     	;# 
   713     0019                     	;# 
   714     001A                     	;# 
   715     001B                     	;# 
   716     001C                     	;# 
   717     001E                     	;# 
   718     001F                     	;# 
   719     008C                     	;# 
   720     008D                     	;# 
   721     0091                     	;# 
   722     0092                     	;# 
   723     0095                     	;# 
   724     0096                     	;# 
   725     0097                     	;# 
   726     0098                     	;# 
   727     0099                     	;# 
   728     009A                     	;# 
   729     009B                     	;# 
   730     009B                     	;# 
   731     009C                     	;# 
   732     009D                     	;# 
   733     009E                     	;# 
   734     010C                     	;# 
   735     010D                     	;# 
   736     0111                     	;# 
   737     0112                     	;# 
   738     0113                     	;# 
   739     0114                     	;# 
   740     0115                     	;# 
   741     0116                     	;# 
   742     0117                     	;# 
   743     0118                     	;# 
   744     0119                     	;# 
   745     011A                     	;# 
   746     011B                     	;# 
   747     011D                     	;# 
   748     011E                     	;# 
   749     018C                     	;# 
   750     018D                     	;# 
   751     0191                     	;# 
   752     0191                     	;# 
   753     0192                     	;# 
   754     0193                     	;# 
   755     0193                     	;# 
   756     0193                     	;# 
   757     0194                     	;# 
   758     0195                     	;# 
   759     0196                     	;# 
   760     0199                     	;# 
   761     019A                     	;# 
   762     019B                     	;# 
   763     019B                     	;# 
   764     019B                     	;# 
   765     019B                     	;# 
   766     019C                     	;# 
   767     019C                     	;# 
   768     019D                     	;# 
   769     019E                     	;# 
   770     019F                     	;# 
   771     020C                     	;# 
   772     020D                     	;# 
   773     0211                     	;# 
   774     0211                     	;# 
   775     0212                     	;# 
   776     0212                     	;# 
   777     0213                     	;# 
   778     0213                     	;# 
   779     0214                     	;# 
   780     0214                     	;# 
   781     0215                     	;# 
   782     0215                     	;# 
   783     0215                     	;# 
   784     0216                     	;# 
   785     0216                     	;# 
   786     0217                     	;# 
   787     0217                     	;# 
   788     0291                     	;# 
   789     0291                     	;# 
   790     0292                     	;# 
   791     0293                     	;# 
   792     0294                     	;# 
   793     0295                     	;# 
   794     0295                     	;# 
   795     0296                     	;# 
   796     0394                     	;# 
   797     0395                     	;# 
   798     0396                     	;# 
   799     039A                     	;# 
   800     039C                     	;# 
   801     039D                     	;# 
   802     039E                     	;# 
   803     039F                     	;# 
   804     0FE4                     	;# 
   805     0FE5                     	;# 
   806     0FE6                     	;# 
   807     0FE7                     	;# 
   808     0FE8                     	;# 
   809     0FE9                     	;# 
   810     0FEA                     	;# 
   811     0FEB                     	;# 
   812     0FED                     	;# 
   813     0FEE                     	;# 
   814     0FEF                     	;# 
   815     0000                     	;# 
   816     0001                     	;# 
   817     0002                     	;# 
   818     0003                     	;# 
   819     0004                     	;# 
   820     0005                     	;# 
   821     0006                     	;# 
   822     0007                     	;# 
   823     0008                     	;# 
   824     0009                     	;# 
   825     000A                     	;# 
   826     000B                     	;# 
   827     000C                     	;# 
   828     000D                     	;# 
   829     0011                     	;# 
   830     0012                     	;# 
   831     0015                     	;# 
   832     0016                     	;# 
   833     0016                     	;# 
   834     0017                     	;# 
   835     0018                     	;# 
   836     0019                     	;# 
   837     001A                     	;# 
   838     001B                     	;# 
   839     001C                     	;# 
   840     001E                     	;# 
   841     001F                     	;# 
   842     008C                     	;# 
   843     008D                     	;# 
   844     0091                     	;# 
   845     0092                     	;# 
   846     0095                     	;# 
   847     0096                     	;# 
   848     0097                     	;# 
   849     0098                     	;# 
   850     0099                     	;# 
   851     009A                     	;# 
   852     009B                     	;# 
   853     009B                     	;# 
   854     009C                     	;# 
   855     009D                     	;# 
   856     009E                     	;# 
   857     010C                     	;# 
   858     010D                     	;# 
   859     0111                     	;# 
   860     0112                     	;# 
   861     0113                     	;# 
   862     0114                     	;# 
   863     0115                     	;# 
   864     0116                     	;# 
   865     0117                     	;# 
   866     0118                     	;# 
   867     0119                     	;# 
   868     011A                     	;# 
   869     011B                     	;# 
   870     011D                     	;# 
   871     011E                     	;# 
   872     018C                     	;# 
   873     018D                     	;# 
   874     0191                     	;# 
   875     0191                     	;# 
   876     0192                     	;# 
   877     0193                     	;# 
   878     0193                     	;# 
   879     0193                     	;# 
   880     0194                     	;# 
   881     0195                     	;# 
   882     0196                     	;# 
   883     0199                     	;# 
   884     019A                     	;# 
   885     019B                     	;# 
   886     019B                     	;# 
   887     019B                     	;# 
   888     019B                     	;# 
   889     019C                     	;# 
   890     019C                     	;# 
   891     019D                     	;# 
   892     019E                     	;# 
   893     019F                     	;# 
   894     020C                     	;# 
   895     020D                     	;# 
   896     0211                     	;# 
   897     0211                     	;# 
   898     0212                     	;# 
   899     0212                     	;# 
   900     0213                     	;# 
   901     0213                     	;# 
   902     0214                     	;# 
   903     0214                     	;# 
   904     0215                     	;# 
   905     0215                     	;# 
   906     0215                     	;# 
   907     0216                     	;# 
   908     0216                     	;# 
   909     0217                     	;# 
   910     0217                     	;# 
   911     0291                     	;# 
   912     0291                     	;# 
   913     0292                     	;# 
   914     0293                     	;# 
   915     0294                     	;# 
   916     0295                     	;# 
   917     0295                     	;# 
   918     0296                     	;# 
   919     0394                     	;# 
   920     0395                     	;# 
   921     0396                     	;# 
   922     039A                     	;# 
   923     039C                     	;# 
   924     039D                     	;# 
   925     039E                     	;# 
   926     039F                     	;# 
   927     0FE4                     	;# 
   928     0FE5                     	;# 
   929     0FE6                     	;# 
   930     0FE7                     	;# 
   931     0FE8                     	;# 
   932     0FE9                     	;# 
   933     0FEA                     	;# 
   934     0FEB                     	;# 
   935     0FED                     	;# 
   936     0FEE                     	;# 
   937     0FEF                     	;# 
   938                           
   939 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
   940     0000                     
   941 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
   942     0000                     
   943 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
   944     0000                     
   945                           	psect	idataBANK0
   946     023F                     __pidataBANK0:
   947                           
   948                           ;initializer for BrightnessCTRL@F89
   949     023F  3402               	retlw	2
   950     0240  3403               	retlw	3
   951                           
   952                           	psect	idataBANK1
   953     0196                     __pidataBANK1:
   954                           
   955                           ;initializer for _DisplayBuffer
   956     0196  3480               	retlw	128
   957     0197  3484               	retlw	132
   958     0198  3482               	retlw	130
   959     0199  34FF               	retlw	255
   960     019A  3480               	retlw	128
   961     019B  3480               	retlw	128
   962     019C  34C6               	retlw	198
   963     019D  34A1               	retlw	161
   964     019E  3491               	retlw	145
   965     019F  3491               	retlw	145
   966     01A0  3489               	retlw	137
   967     01A1  3486               	retlw	134
   968     01A2  3466               	retlw	102
   969     01A3  3466               	retlw	102
   970     01A4  3461               	retlw	97
   971     01A5  3481               	retlw	129
   972     01A6  3489               	retlw	137
   973     01A7  348D               	retlw	141
   974     01A8  348B               	retlw	139
   975     01A9  3471               	retlw	113
   976     01AA  347E               	retlw	126
   977     01AB  3481               	retlw	129
   978     01AC  3481               	retlw	129
   979     01AD  3481               	retlw	129
   980     01AE  3481               	retlw	129
   981     01AF  347E               	retlw	126
   982                           
   983                           	psect	stringtext1
   984     00F8                     __pstringtext1:
   985     00F8                     _Characters:
   986     00F8  347E               	retlw	126
   987     00F9  3481               	retlw	129
   988     00FA  3481               	retlw	129
   989     00FB  3481               	retlw	129
   990     00FC  3481               	retlw	129
   991     00FD  347E               	retlw	126
   992     00FE  3480               	retlw	128
   993     00FF  3484               	retlw	132
   994     0100  3482               	retlw	130
   995     0101  34FF               	retlw	255
   996     0102  3480               	retlw	128
   997     0103  3480               	retlw	128
   998     0104  34C6               	retlw	198
   999     0105  34A1               	retlw	161
  1000     0106  3491               	retlw	145
  1001     0107  3491               	retlw	145
  1002     0108  3489               	retlw	137
  1003     0109  3486               	retlw	134
  1004     010A  3461               	retlw	97
  1005     010B  3481               	retlw	129
  1006     010C  3489               	retlw	137
  1007     010D  348D               	retlw	141
  1008     010E  348B               	retlw	139
  1009     010F  3471               	retlw	113
  1010     0110  3418               	retlw	24
  1011     0111  3414               	retlw	20
  1012     0112  3412               	retlw	18
  1013     0113  3411               	retlw	17
  1014     0114  34FF               	retlw	255
  1015     0115  3410               	retlw	16
  1016     0116  344F               	retlw	79
  1017     0117  3489               	retlw	137
  1018     0118  3489               	retlw	137
  1019     0119  3489               	retlw	137
  1020     011A  3489               	retlw	137
  1021     011B  3471               	retlw	113
  1022     011C  347E               	retlw	126
  1023     011D  3491               	retlw	145
  1024     011E  3489               	retlw	137
  1025     011F  3489               	retlw	137
  1026     0120  3489               	retlw	137
  1027     0121  3472               	retlw	114
  1028     0122  34C1               	retlw	193
  1029     0123  3421               	retlw	33
  1030     0124  3411               	retlw	17
  1031     0125  3409               	retlw	9
  1032     0126  3405               	retlw	5
  1033     0127  3403               	retlw	3
  1034     0128  3476               	retlw	118
  1035     0129  3489               	retlw	137
  1036     012A  3489               	retlw	137
  1037     012B  3489               	retlw	137
  1038     012C  3489               	retlw	137
  1039     012D  3476               	retlw	118
  1040     012E  344E               	retlw	78
  1041     012F  3491               	retlw	145
  1042     0130  3491               	retlw	145
  1043     0131  3491               	retlw	145
  1044     0132  3489               	retlw	137
  1045     0133  347E               	retlw	126
  1046     0134  3466               	retlw	102
  1047     0135                     __end_of_Characters:
  1048                           
  1049                           	psect	nvBANK0
  1050     0066                     __pnvBANK0:
  1051     0066                     _EUSART_OverrunErrorHandler:
  1052     0066                     	ds	2
  1053     0068                     _EUSART_FramingErrorHandler:
  1054     0068                     	ds	2
  1055     006A                     _TMR0_InterruptHandler:
  1056     006A                     	ds	2
  1057                           
  1058                           	psect	nvBANK1
  1059     00BE                     __pnvBANK1:
  1060     00BE                     _EUSART_ErrorHandler:
  1061     00BE                     	ds	2
  1062     0011                     _PIR1bits	set	17
  1063     0015                     _TMR0	set	21
  1064     000B                     _INTCONbits	set	11
  1065     0095                     _OPTION_REG	set	149
  1066     0097                     _WDTCON	set	151
  1067     0098                     _OSCTUNE	set	152
  1068     0099                     _OSCCON	set	153
  1069     0095                     _OPTION_REGbits	set	149
  1070     008D                     _TRISB	set	141
  1071     008C                     _TRISA	set	140
  1072     010C                     _LATAbits	set	268
  1073     0116                     _BORCON	set	278
  1074     011E                     _APFCON1	set	286
  1075     011D                     _APFCON0	set	285
  1076     010D                     _LATB	set	269
  1077     010C                     _LATA	set	268
  1078     019A                     _TXREG	set	410
  1079     019D                     _RCSTAbits	set	413
  1080     019E                     _TXSTAbits	set	414
  1081     019C                     _SPBRGH	set	412
  1082     019B                     _SPBRGL	set	411
  1083     019E                     _TXSTA	set	414
  1084     019D                     _RCSTA	set	413
  1085     019F                     _BAUDCON	set	415
  1086     018C                     _ANSELA	set	396
  1087     018D                     _ANSELB	set	397
  1088     020C                     _WPUA	set	524
  1089     020D                     _WPUB	set	525
  1090                           
  1091                           	psect	cinit
  1092     000D                     start_initialization:	
  1093                           ; #config settings
  1094                           
  1095     000D                     __initialization:
  1096                           
  1097                           ; Initialize objects allocated to BANK0
  1098     000D  223F               	fcall	__pidataBANK0	;fetch initializer
  1099     000E  00EC               	movwf	__pdataBANK0& (0+127)
  1100     000F  2240               	fcall	__pidataBANK0+1	;fetch initializer
  1101     0010  00ED               	movwf	(__pdataBANK0+1)& (0+127)
  1102                           
  1103                           ; Initialize objects allocated to BANK1
  1104     0011  3096               	movlw	low __pidataBANK1
  1105     0012  0084               	movwf	4
  1106     0013  3081               	movlw	(high __pidataBANK1)| (0+128)
  1107     0014  0085               	movwf	5
  1108     0015  30A0               	movlw	low __pdataBANK1
  1109     0016  0086               	movwf	6
  1110     0017  3000               	movlw	high __pdataBANK1
  1111     0018  0087               	movwf	7
  1112     0019  301A               	movlw	26
  1113     001A  220B               	fcall	init_ram
  1114                           
  1115                           ; Clear objects allocated to COMMON
  1116     001B  01FA               	clrf	__pbssCOMMON& (0+127)
  1117     001C  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1118                           
  1119                           ; Clear objects allocated to BANK0
  1120     001D  3044               	movlw	low __pbssBANK0
  1121     001E  0084               	movwf	4
  1122     001F  3000               	movlw	high __pbssBANK0
  1123     0020  0085               	movwf	5
  1124     0021  3022               	movlw	34
  1125     0022  2211               	fcall	clear_ram0
  1126     0023                     end_of_initialization:	
  1127                           ;End of C runtime variable initialization code
  1128                           
  1129     0023                     __end_of__initialization:
  1130     0023  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1131     0024  0020               	movlb	0
  1132     0025  28A8               	ljmp	_main	;jump to C main() function
  1133                           
  1134                           	psect	bssCOMMON
  1135     007A                     __pbssCOMMON:
  1136     007A                     _eusartRxLastError:
  1137     007A                     	ds	1
  1138     007B                     _timer0ReloadVal:
  1139     007B                     	ds	1
  1140                           
  1141                           	psect	bssBANK0
  1142     0044                     __pbssBANK0:
  1143     0044                     Renderer@F103:
  1144     0044                     	ds	13
  1145     0051                     Renderer@F101:
  1146     0051                     	ds	13
  1147     005E                     Renderer@F99:
  1148     005E                     	ds	4
  1149     0062                     _time_of_day:
  1150     0062                     	ds	2
  1151     0064                     _TimeSlot:
  1152     0064                     	ds	1
  1153     0065                     _AccessLine:
  1154     0065                     	ds	1
  1155                           
  1156                           	psect	dataBANK0
  1157     006C                     __pdataBANK0:
  1158     006C                     BrightnessCTRL@F89:
  1159     006C                     	ds	2
  1160                           
  1161                           	psect	dataBANK1
  1162     00A0                     __pdataBANK1:
  1163     00A0                     _DisplayBuffer:
  1164     00A0                     	ds	26
  1165                           
  1166                           	psect	inittext
  1167     020B                     init_ram:
  1168     020B  00FE               	movwf	126
  1169     020C                     initloop:
  1170     020C  0012               	moviw fsr0++
  1171     020D  001E               	movwi fsr1++
  1172     020E  0BFE               	decfsz	126,f
  1173     020F  2A0C               	goto	initloop
  1174     0210  3400               	retlw	0
  1175                           
  1176                           	psect	clrtext
  1177     0211                     clear_ram0:	
  1178                           ;	Called with FSR0 containing the base address, and
  1179                           ;	WREG with the size to clear
  1180                           
  1181     0211  0064               	clrwdt	;clear the watchdog before getting into this loop
  1182     0212                     clrloop0:
  1183     0212  0180               	clrf	0	;clear RAM location pointed to by FSR
  1184     0213  3101               	addfsr 0,1
  1185     0214  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1186     0215  2A12               	goto	clrloop0	;have we reached the end yet?
  1187     0216  3400               	retlw	0	;all done for this memory range, return
  1188                           
  1189                           	psect	cstackBANK1
  1190     00BA                     __pcstackBANK1:
  1191     00BA                     main@Display:
  1192                           
  1193                           ; 4 bytes @ 0x0
  1194     00BA                     	ds	4
  1195                           
  1196                           	psect	cstackCOMMON
  1197     0070                     __pcstackCOMMON:
  1198     0070                     ?_OSCILLATOR_Initialize:
  1199     0070                     ?_WDT_Initialize:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202     0070                     ?_TMR0_Initialize:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205     0070                     ?_EUSART_Initialize:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208     0070                     ?_RenderingTimer_ISR:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211     0070                     ??_RenderingTimer_ISR:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214     0070                     ?_TMR0_WriteTimer:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217     0070                     ?_EUSART_Write:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220     0070                     ?_EUSART_is_tx_done:	
  1221                           ; 1 bytes @ 0x0
  1222                           
  1223     0070                     ?_TMR0_ISR:	
  1224                           ; 1 bytes @ 0x0
  1225                           
  1226     0070                     ?_TMR0_DefaultInterruptHandler:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229     0070                     ??_TMR0_DefaultInterruptHandler:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232     0070                     ?_PIN_MANAGER_Initialize:	
  1233                           ; 1 bytes @ 0x0
  1234                           
  1235     0070                     ?_SYSTEM_Initialize:	
  1236                           ; 1 bytes @ 0x0
  1237                           
  1238     0070                     ?_ReverseByte:	
  1239                           ; 1 bytes @ 0x0
  1240                           
  1241     0070                     ?_main:	
  1242                           ; 1 bytes @ 0x0
  1243                           
  1244     0070                     ?_INTERRUPT_InterruptManager:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247                           
  1248                           ; 1 bytes @ 0x0
  1249     0070                     	ds	1
  1250     0071                     ??_OSCILLATOR_Initialize:
  1251     0071                     ??_WDT_Initialize:	
  1252                           ; 1 bytes @ 0x1
  1253                           
  1254     0071                     ?_TMR0_SetInterruptHandler:	
  1255                           ; 1 bytes @ 0x1
  1256                           
  1257     0071                     ??_TMR0_WriteTimer:	
  1258                           ; 1 bytes @ 0x1
  1259                           
  1260     0071                     ??_EUSART_Write:	
  1261                           ; 1 bytes @ 0x1
  1262                           
  1263     0071                     ??_EUSART_is_tx_done:	
  1264                           ; 1 bytes @ 0x1
  1265                           
  1266     0071                     ??_TMR0_ISR:	
  1267                           ; 1 bytes @ 0x1
  1268                           
  1269     0071                     ?_EUSART_SetFramingErrorHandler:	
  1270                           ; 1 bytes @ 0x1
  1271                           
  1272     0071                     ?_EUSART_SetOverrunErrorHandler:	
  1273                           ; 1 bytes @ 0x1
  1274                           
  1275     0071                     ?_EUSART_SetErrorHandler:	
  1276                           ; 1 bytes @ 0x1
  1277                           
  1278     0071                     ??_PIN_MANAGER_Initialize:	
  1279                           ; 1 bytes @ 0x1
  1280                           
  1281     0071                     ??_ReverseByte:	
  1282                           ; 1 bytes @ 0x1
  1283                           
  1284     0071                     ??_INTERRUPT_InterruptManager:	
  1285                           ; 1 bytes @ 0x1
  1286                           
  1287     0071                     ?_BrightnessCTRL:	
  1288                           ; 1 bytes @ 0x1
  1289                           
  1290     0071                     TMR0_WriteTimer@timerVal:	
  1291                           ; 2 bytes @ 0x1
  1292                           
  1293     0071                     EUSART_Write@txData:	
  1294                           ; 1 bytes @ 0x1
  1295                           
  1296     0071                     TMR0_SetInterruptHandler@InterruptHandler:	
  1297                           ; 1 bytes @ 0x1
  1298                           
  1299     0071                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1300                           ; 2 bytes @ 0x1
  1301                           
  1302     0071                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1303                           ; 2 bytes @ 0x1
  1304                           
  1305     0071                     EUSART_SetErrorHandler@interruptHandler:	
  1306                           ; 2 bytes @ 0x1
  1307                           
  1308                           
  1309                           ; 2 bytes @ 0x1
  1310     0071                     	ds	2
  1311     0073                     ??_TMR0_Initialize:
  1312     0073                     ??_EUSART_Initialize:	
  1313                           ; 1 bytes @ 0x3
  1314                           
  1315     0073                     ??_TMR0_SetInterruptHandler:	
  1316                           ; 1 bytes @ 0x3
  1317                           
  1318     0073                     ??_EUSART_SetFramingErrorHandler:	
  1319                           ; 1 bytes @ 0x3
  1320                           
  1321     0073                     ??_EUSART_SetOverrunErrorHandler:	
  1322                           ; 1 bytes @ 0x3
  1323                           
  1324     0073                     ??_EUSART_SetErrorHandler:	
  1325                           ; 1 bytes @ 0x3
  1326                           
  1327     0073                     ??_SYSTEM_Initialize:	
  1328                           ; 1 bytes @ 0x3
  1329                           
  1330     0073                     ??_BrightnessCTRL:	
  1331                           ; 1 bytes @ 0x3
  1332                           
  1333     0073                     BrightnessCTRL@AccessLine:	
  1334                           ; 1 bytes @ 0x3
  1335                           
  1336     0073                     ReverseByte@byte:	
  1337                           ; 1 bytes @ 0x3
  1338                           
  1339                           
  1340                           ; 1 bytes @ 0x3
  1341     0073                     	ds	1
  1342     0074                     ReverseByte@ReversedByte:
  1343     0074                     BrightnessCTRL@LEDBrightness:	
  1344                           ; 1 bytes @ 0x4
  1345                           
  1346                           
  1347                           ; 2 bytes @ 0x4
  1348     0074                     	ds	1
  1349     0075                     ReverseByte@i:
  1350                           
  1351                           ; 1 bytes @ 0x5
  1352     0075                     	ds	1
  1353     0076                     ?_Renderer:
  1354     0076                     Renderer@time_Slot:	
  1355                           ; 4 bytes @ 0x6
  1356                           
  1357                           
  1358                           ; 1 bytes @ 0x6
  1359     0076                     	ds	1
  1360     0077                     Renderer@DisplayBuffer:
  1361                           
  1362                           ; 1 bytes @ 0x7
  1363     0077                     	ds	3
  1364     007A                     ??_main:
  1365                           
  1366                           	psect	cstackBANK0
  1367     0020                     __pcstackBANK0:	
  1368                           ; 1 bytes @ 0xA
  1369                           
  1370     0020                     ??_Renderer:
  1371                           
  1372                           ; 1 bytes @ 0x0
  1373     0020                     	ds	2
  1374     0022                     Renderer@Left_DisplayData:
  1375                           
  1376                           ; 13 bytes @ 0x2
  1377     0022                     	ds	13
  1378     002F                     Renderer@Right_DisplayData:
  1379                           
  1380                           ; 13 bytes @ 0xF
  1381     002F                     	ds	13
  1382     003C                     Renderer@LEDBrightness:
  1383                           
  1384                           ; 2 bytes @ 0x1C
  1385     003C                     	ds	2
  1386     003E                     Renderer@access_line:
  1387                           
  1388                           ; 1 bytes @ 0x1E
  1389     003E                     	ds	1
  1390     003F                     Renderer@i:
  1391                           
  1392                           ; 1 bytes @ 0x1F
  1393     003F                     	ds	1
  1394     0040                     Renderer@LED_Data:
  1395                           
  1396                           ; 4 bytes @ 0x20
  1397     0040                     	ds	4
  1398                           
  1399                           	psect	maintext
  1400     00A8                     __pmaintext:	
  1401 ;;
  1402 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1403 ;;
  1404 ;; *************** function _main *****************
  1405 ;; Defined at:
  1406 ;;		line 88 in file "PerfBoardClock.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  Display         4    0[BANK1 ] struct RendererOutputs
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : B1F/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1420 ;;      Params:         0       0       0       0
  1421 ;;      Locals:         0       0       4       0
  1422 ;;      Temps:          0       0       0       0
  1423 ;;      Totals:         0       0       4       0
  1424 ;;Total ram usage:        4 bytes
  1425 ;; Hardware stack levels required when called: 6
  1426 ;; This function calls:
  1427 ;;		_EUSART_Write
  1428 ;;		_EUSART_is_tx_done
  1429 ;;		_Renderer
  1430 ;;		_SYSTEM_Initialize
  1431 ;;		_TMR0_Initialize
  1432 ;;		_TMR0_SetInterruptHandler
  1433 ;;		_TMR0_WriteTimer
  1434 ;; This function is called by:
  1435 ;;		Startup code after reset
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439     00A8                     _main:	
  1440                           ;psect for function _main
  1441                           
  1442                           
  1443                           ;PerfBoardClock.c: 90:     SYSTEM_Initialize();
  1444                           
  1445                           ;incstack = 0
  1446                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1447     00A8  2217               	fcall	_SYSTEM_Initialize
  1448                           
  1449                           ;PerfBoardClock.c: 94:    TMR0_Initialize();
  1450     00A9  21DA               	fcall	_TMR0_Initialize
  1451                           
  1452                           ;PerfBoardClock.c: 95:    TMR0_SetInterruptHandler(RenderingTimer_ISR);
  1453     00AA  30C7               	movlw	low _RenderingTimer_ISR
  1454     00AB  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1455     00AC  3001               	movlw	high _RenderingTimer_ISR
  1456     00AD  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1457     00AE  2229               	fcall	_TMR0_SetInterruptHandler
  1458                           
  1459                           ;PerfBoardClock.c: 107:    TMR0_WriteTimer(191);
  1460     00AF  30BF               	movlw	191
  1461     00B0  2233               	fcall	_TMR0_WriteTimer
  1462     00B1                     l1484:
  1463                           
  1464                           ;PerfBoardClock.c: 116:       Display = Renderer(AccessLine, TimeSlot, DisplayBuffer);
  1465     00B1  0020               	movlb	0	; select bank0
  1466     00B2  0864               	movf	_TimeSlot,w
  1467     00B3  00F6               	movwf	Renderer@time_Slot
  1468     00B4  30A0               	movlw	(low (_DisplayBuffer| 0))& (0+255)
  1469     00B5  00F7               	movwf	Renderer@DisplayBuffer
  1470     00B6  0865               	movf	_AccessLine,w
  1471     00B7  2026               	fcall	_Renderer
  1472     00B8  0879               	movf	?_Renderer+3,w
  1473     00B9  0021               	movlb	1	; select bank1
  1474     00BA  00BD               	movwf	(main@Display+3)^(0+128)
  1475     00BB  0878               	movf	?_Renderer+2,w
  1476     00BC  00BC               	movwf	(main@Display+2)^(0+128)
  1477     00BD  0877               	movf	?_Renderer+1,w
  1478     00BE  00BB               	movwf	(main@Display+1)^(0+128)
  1479     00BF  0876               	movf	?_Renderer,w
  1480     00C0  00BA               	movwf	main@Display^(0+128)
  1481     00C1  0022               	movlb	2	; select bank2
  1482     00C2  140C               	bsf	12,0	;volatile
  1483     00C3  170C               	bsf	12,6	;volatile
  1484                           
  1485                           ;PerfBoardClock.c: 121:         EUSART_Write(Display.AccessLine.AccessLineMembers.Access
      +                          _Line_High);
  1486     00C4  0021               	movlb	1	; select bank1
  1487     00C5  083D               	movf	(main@Display^(0+128)+3),w
  1488     00C6  21F9               	fcall	_EUSART_Write
  1489     00C7                     l1492:	
  1490                           ;PerfBoardClock.c: 122:         while(!EUSART_is_tx_done());
  1491                           
  1492     00C7  223B               	fcall	_EUSART_is_tx_done
  1493     00C8  3A00               	xorlw	0
  1494     00C9  1903               	skipnz
  1495     00CA  28C7               	goto	l1492
  1496                           
  1497                           ;PerfBoardClock.c: 123:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1498     00CB  3200               	nop2	;2 cycle nop
  1499     00CC  3200               	nop2	;2 cycle nop
  1500     00CD  3200               	nop2	;2 cycle nop
  1501                           
  1502                           ;PerfBoardClock.c: 124:         EUSART_Write(Display.AccessLine.AccessLineMembers.Access
      +                          _Line_Low);
  1503     00CE  0021               	movlb	1	; select bank1
  1504     00CF  083C               	movf	(main@Display^(0+128)+2),w
  1505     00D0  21F9               	fcall	_EUSART_Write
  1506     00D1                     l1496:	
  1507                           ;PerfBoardClock.c: 125:         while(!EUSART_is_tx_done());
  1508                           
  1509     00D1  223B               	fcall	_EUSART_is_tx_done
  1510     00D2  3A00               	xorlw	0
  1511     00D3  1903               	skipnz
  1512     00D4  28D1               	goto	l1496
  1513                           
  1514                           ;PerfBoardClock.c: 126:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1515     00D5  3200               	nop2	;2 cycle nop
  1516     00D6  3200               	nop2	;2 cycle nop
  1517     00D7  3200               	nop2	;2 cycle nop
  1518                           
  1519                           ;PerfBoardClock.c: 127:         EUSART_Write(Display.Right_Common_Line_Data);
  1520     00D8  0021               	movlb	1	; select bank1
  1521     00D9  083B               	movf	(main@Display^(0+128)+1),w
  1522     00DA  21F9               	fcall	_EUSART_Write
  1523     00DB                     l1500:	
  1524                           ;PerfBoardClock.c: 128:         while(!EUSART_is_tx_done());
  1525                           
  1526     00DB  223B               	fcall	_EUSART_is_tx_done
  1527     00DC  3A00               	xorlw	0
  1528     00DD  1903               	skipnz
  1529     00DE  28DB               	goto	l1500
  1530                           
  1531                           ;PerfBoardClock.c: 129:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1532     00DF  3200               	nop2	;2 cycle nop
  1533     00E0  3200               	nop2	;2 cycle nop
  1534     00E1  3200               	nop2	;2 cycle nop
  1535                           
  1536                           ;PerfBoardClock.c: 130:         EUSART_Write(Display.Left_Common_Line_Data);
  1537     00E2  0021               	movlb	1	; select bank1
  1538     00E3  083A               	movf	main@Display^(0+128),w
  1539     00E4  21F9               	fcall	_EUSART_Write
  1540     00E5                     l1504:	
  1541                           ;PerfBoardClock.c: 131:         while(!EUSART_is_tx_done());
  1542                           
  1543     00E5  223B               	fcall	_EUSART_is_tx_done
  1544     00E6  3A00               	xorlw	0
  1545     00E7  1903               	skipnz
  1546     00E8  28E5               	goto	l1504
  1547                           
  1548                           ;PerfBoardClock.c: 133:         do { LATAbits.LATA1 = 1; } while(0);
  1549     00E9  0022               	movlb	2	; select bank2
  1550     00EA  148C               	bsf	12,1	;volatile
  1551                           
  1552                           ;PerfBoardClock.c: 134:         do { LATAbits.LATA7 = 1; } while(0);
  1553     00EB  178C               	bsf	12,7	;volatile
  1554                           
  1555                           ;PerfBoardClock.c: 135:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1556     00EC  3200               	nop2	;2 cycle nop
  1557     00ED  3200               	nop2	;2 cycle nop
  1558     00EE  3200               	nop2	;2 cycle nop
  1559                           
  1560                           ;PerfBoardClock.c: 136:         do { LATAbits.LATA1 = 0; } while(0);
  1561     00EF  0022               	movlb	2	; select bank2
  1562     00F0  108C               	bcf	12,1	;volatile
  1563                           
  1564                           ;PerfBoardClock.c: 137:         do { LATAbits.LATA7 = 0; } while(0);
  1565     00F1  138C               	bcf	12,7	;volatile
  1566                           
  1567                           ;PerfBoardClock.c: 139:         do { LATAbits.LATA0 = 0; } while(0);
  1568     00F2  100C               	bcf	12,0	;volatile
  1569                           
  1570                           ;PerfBoardClock.c: 140:         do { LATAbits.LATA6 = 0; } while(0);
  1571     00F3  130C               	bcf	12,6	;volatile
  1572                           
  1573                           ;PerfBoardClock.c: 141:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1574     00F4  3200               	nop2	;2 cycle nop
  1575     00F5  3200               	nop2	;2 cycle nop
  1576     00F6  3200               	nop2	;2 cycle nop
  1577     00F7  28B1               	goto	l1484
  1578     00F8                     __end_of_main:
  1579                           
  1580                           	psect	text1
  1581     0233                     __ptext1:	
  1582 ;; *************** function _TMR0_WriteTimer *****************
  1583 ;; Defined at:
  1584 ;;		line 96 in file "mcc_generated_files/tmr0.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  timerVal        1    wreg     unsigned char 
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  timerVal        1    1[COMMON] unsigned char 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      void 
  1591 ;; Registers used:
  1592 ;;		wreg
  1593 ;; Tracked objects:
  1594 ;;		On entry : 1F/0
  1595 ;;		On exit  : 1F/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1598 ;;      Params:         0       0       0       0
  1599 ;;      Locals:         1       0       0       0
  1600 ;;      Temps:          0       0       0       0
  1601 ;;      Totals:         1       0       0       0
  1602 ;;Total ram usage:        1 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; Hardware stack levels required when called: 3
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_main
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612     0233                     _TMR0_WriteTimer:	
  1613                           ;psect for function _TMR0_WriteTimer
  1614                           
  1615                           
  1616                           ;incstack = 0
  1617                           ; Regs used in _TMR0_WriteTimer: [wreg]
  1618                           ;TMR0_WriteTimer@timerVal stored from wreg
  1619     0233  00F1               	movwf	TMR0_WriteTimer@timerVal
  1620                           
  1621                           ;mcc_generated_files/tmr0.c: 96: void TMR0_WriteTimer(uint8_t timerVal);mcc_generated_fi
      +                          les/tmr0.c: 97: {;mcc_generated_files/tmr0.c: 99:     TMR0 = timerVal;
  1622     0234  0871               	movf	TMR0_WriteTimer@timerVal,w
  1623     0235  0095               	movwf	21	;volatile
  1624     0236  0008               	return
  1625     0237                     __end_of_TMR0_WriteTimer:
  1626                           
  1627                           	psect	text2
  1628     0217                     __ptext2:	
  1629 ;; *************** function _SYSTEM_Initialize *****************
  1630 ;; Defined at:
  1631 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;		None
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;		None
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, status,0, pclath, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : B1F/0
  1642 ;;		On exit  : 1F/1
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1645 ;;      Params:         0       0       0       0
  1646 ;;      Locals:         0       0       0       0
  1647 ;;      Temps:          0       0       0       0
  1648 ;;      Totals:         0       0       0       0
  1649 ;;Total ram usage:        0 bytes
  1650 ;; Hardware stack levels used: 1
  1651 ;; Hardware stack levels required when called: 5
  1652 ;; This function calls:
  1653 ;;		_EUSART_Initialize
  1654 ;;		_OSCILLATOR_Initialize
  1655 ;;		_PIN_MANAGER_Initialize
  1656 ;;		_TMR0_Initialize
  1657 ;;		_WDT_Initialize
  1658 ;; This function is called by:
  1659 ;;		_main
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663     0217                     _SYSTEM_Initialize:	
  1664                           ;psect for function _SYSTEM_Initialize
  1665                           
  1666                           
  1667                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1668                           
  1669                           ;incstack = 0
  1670                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1671     0217  21B0               	fcall	_PIN_MANAGER_Initialize
  1672                           
  1673                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1674     0218  2204               	fcall	_OSCILLATOR_Initialize
  1675                           
  1676                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1677     0219  2237               	fcall	_WDT_Initialize
  1678                           
  1679                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  1680     021A  21DA               	fcall	_TMR0_Initialize
  1681                           
  1682                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  1683     021B  217B               	fcall	_EUSART_Initialize
  1684     021C  0008               	return
  1685     021D                     __end_of_SYSTEM_Initialize:
  1686                           
  1687                           	psect	text3
  1688     0237                     __ptext3:	
  1689 ;; *************** function _WDT_Initialize *****************
  1690 ;; Defined at:
  1691 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;		None
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg
  1700 ;; Tracked objects:
  1701 ;;		On entry : B1F/2
  1702 ;;		On exit  : B1F/1
  1703 ;;		Unchanged: B00/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1705 ;;      Params:         0       0       0       0
  1706 ;;      Locals:         0       0       0       0
  1707 ;;      Temps:          0       0       0       0
  1708 ;;      Totals:         0       0       0       0
  1709 ;;Total ram usage:        0 bytes
  1710 ;; Hardware stack levels used: 1
  1711 ;; Hardware stack levels required when called: 3
  1712 ;; This function calls:
  1713 ;;		Nothing
  1714 ;; This function is called by:
  1715 ;;		_SYSTEM_Initialize
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719     0237                     _WDT_Initialize:	
  1720                           ;psect for function _WDT_Initialize
  1721                           
  1722                           
  1723                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  1724                           
  1725                           ;incstack = 0
  1726                           ; Regs used in _WDT_Initialize: [wreg]
  1727     0237  3016               	movlw	22
  1728     0238  0021               	movlb	1	; select bank1
  1729     0239  0097               	movwf	23	;volatile
  1730     023A  0008               	return
  1731     023B                     __end_of_WDT_Initialize:
  1732                           
  1733                           	psect	text4
  1734     01DA                     __ptext4:	
  1735 ;; *************** function _TMR0_Initialize *****************
  1736 ;; Defined at:
  1737 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2, status,0, pclath, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 1F/1
  1748 ;;		On exit  : 1F/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1751 ;;      Params:         0       0       0       0
  1752 ;;      Locals:         0       0       0       0
  1753 ;;      Temps:          0       0       0       0
  1754 ;;      Totals:         0       0       0       0
  1755 ;;Total ram usage:        0 bytes
  1756 ;; Hardware stack levels used: 1
  1757 ;; Hardware stack levels required when called: 4
  1758 ;; This function calls:
  1759 ;;		_TMR0_SetInterruptHandler
  1760 ;; This function is called by:
  1761 ;;		_SYSTEM_Initialize
  1762 ;;		_main
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766     01DA                     _TMR0_Initialize:	
  1767                           ;psect for function _TMR0_Initialize
  1768                           
  1769                           
  1770                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xFF 
      +                          & 0x3F));
  1771                           
  1772                           ;incstack = 0
  1773                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1774     01DA  0815               	movf	21,w	;volatile
  1775     01DB  39C0               	andlw	192
  1776     01DC  383F               	iorlw	63
  1777     01DD  0095               	movwf	21	;volatile
  1778                           
  1779                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0xBF;
  1780     01DE  30BF               	movlw	191
  1781     01DF  0020               	movlb	0	; select bank0
  1782     01E0  0095               	movwf	21	;volatile
  1783                           
  1784                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 191;
  1785     01E1  30BF               	movlw	191
  1786     01E2  00FB               	movwf	_timer0ReloadVal	;volatile
  1787                           
  1788                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  1789     01E3  110B               	bcf	11,2	;volatile
  1790                           
  1791                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  1792     01E4  168B               	bsf	11,5	;volatile
  1793                           
  1794                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  1795     01E5  3041               	movlw	low _TMR0_DefaultInterruptHandler
  1796     01E6  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1797     01E7  3002               	movlw	high _TMR0_DefaultInterruptHandler
  1798     01E8  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1799     01E9  2229               	fcall	_TMR0_SetInterruptHandler
  1800     01EA  0008               	return
  1801     01EB                     __end_of_TMR0_Initialize:
  1802                           
  1803                           	psect	text5
  1804     0229                     __ptext5:	
  1805 ;; *************** function _TMR0_SetInterruptHandler *****************
  1806 ;; Defined at:
  1807 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  1810 ;;		 -> TMR0_DefaultInterruptHandler(1), RenderingTimer_ISR(1), 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg
  1817 ;; Tracked objects:
  1818 ;;		On entry : 1F/0
  1819 ;;		On exit  : 1F/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1822 ;;      Params:         2       0       0       0
  1823 ;;      Locals:         0       0       0       0
  1824 ;;      Temps:          0       0       0       0
  1825 ;;      Totals:         2       0       0       0
  1826 ;;Total ram usage:        2 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; Hardware stack levels required when called: 3
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_main
  1833 ;;		_TMR0_Initialize
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837     0229                     _TMR0_SetInterruptHandler:	
  1838                           ;psect for function _TMR0_SetInterruptHandler
  1839                           
  1840                           
  1841                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  1842                           
  1843                           ;incstack = 0
  1844                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  1845     0229  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  1846     022A  00EB               	movwf	_TMR0_InterruptHandler+1
  1847     022B  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  1848     022C  00EA               	movwf	_TMR0_InterruptHandler
  1849     022D  0008               	return
  1850     022E                     __end_of_TMR0_SetInterruptHandler:
  1851                           
  1852                           	psect	text6
  1853     01B0                     __ptext6:	
  1854 ;; *************** function _PIN_MANAGER_Initialize *****************
  1855 ;; Defined at:
  1856 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;		None
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, status,2
  1865 ;; Tracked objects:
  1866 ;;		On entry : B1F/0
  1867 ;;		On exit  : B1F/2
  1868 ;;		Unchanged: B00/0
  1869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1870 ;;      Params:         0       0       0       0
  1871 ;;      Locals:         0       0       0       0
  1872 ;;      Temps:          0       0       0       0
  1873 ;;      Totals:         0       0       0       0
  1874 ;;Total ram usage:        0 bytes
  1875 ;; Hardware stack levels used: 1
  1876 ;; Hardware stack levels required when called: 3
  1877 ;; This function calls:
  1878 ;;		Nothing
  1879 ;; This function is called by:
  1880 ;;		_SYSTEM_Initialize
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884     01B0                     _PIN_MANAGER_Initialize:	
  1885                           ;psect for function _PIN_MANAGER_Initialize
  1886                           
  1887                           
  1888                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x45;
  1889                           
  1890                           ;incstack = 0
  1891                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1892     01B0  3045               	movlw	69
  1893     01B1  0022               	movlb	2	; select bank2
  1894     01B2  008C               	movwf	12	;volatile
  1895                           
  1896                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1897     01B3  018D               	clrf	13	;volatile
  1898                           
  1899                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x3C;
  1900     01B4  303C               	movlw	60
  1901     01B5  0021               	movlb	1	; select bank1
  1902     01B6  008C               	movwf	12	;volatile
  1903                           
  1904                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  1905     01B7  30FF               	movlw	255
  1906     01B8  008D               	movwf	13	;volatile
  1907                           
  1908                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xDC;
  1909     01B9  30DC               	movlw	220
  1910     01BA  0023               	movlb	3	; select bank3
  1911     01BB  008D               	movwf	13	;volatile
  1912                           
  1913                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x00;
  1914     01BC  018C               	clrf	12	;volatile
  1915                           
  1916                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  1917     01BD  0024               	movlb	4	; select bank4
  1918     01BE  018D               	clrf	13	;volatile
  1919                           
  1920                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  1921     01BF  018C               	clrf	12	;volatile
  1922                           
  1923                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  1924     01C0  0021               	movlb	1	; select bank1
  1925     01C1  1795               	bsf	21,7	;volatile
  1926                           
  1927                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  1928     01C2  0022               	movlb	2	; select bank2
  1929     01C3  019D               	clrf	29	;volatile
  1930                           
  1931                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  1932     01C4  3001               	movlw	1
  1933     01C5  009E               	movwf	30	;volatile
  1934     01C6  0008               	return
  1935     01C7                     __end_of_PIN_MANAGER_Initialize:
  1936                           
  1937                           	psect	text7
  1938     0204                     __ptext7:	
  1939 ;; *************** function _OSCILLATOR_Initialize *****************
  1940 ;; Defined at:
  1941 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;		None
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, status,2
  1950 ;; Tracked objects:
  1951 ;;		On entry : B1F/2
  1952 ;;		On exit  : B1F/2
  1953 ;;		Unchanged: B00/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1955 ;;      Params:         0       0       0       0
  1956 ;;      Locals:         0       0       0       0
  1957 ;;      Temps:          0       0       0       0
  1958 ;;      Totals:         0       0       0       0
  1959 ;;Total ram usage:        0 bytes
  1960 ;; Hardware stack levels used: 1
  1961 ;; Hardware stack levels required when called: 3
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_SYSTEM_Initialize
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969     0204                     _OSCILLATOR_Initialize:	
  1970                           ;psect for function _OSCILLATOR_Initialize
  1971                           
  1972                           
  1973                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x48;
  1974                           
  1975                           ;incstack = 0
  1976                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1977     0204  3048               	movlw	72
  1978     0205  0021               	movlb	1	; select bank1
  1979     0206  0099               	movwf	25	;volatile
  1980                           
  1981                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  1982     0207  0198               	clrf	24	;volatile
  1983                           
  1984                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  1985     0208  0022               	movlb	2	; select bank2
  1986     0209  0196               	clrf	22	;volatile
  1987     020A  0008               	return
  1988     020B                     __end_of_OSCILLATOR_Initialize:
  1989                           
  1990                           	psect	text8
  1991     017B                     __ptext8:	
  1992 ;; *************** function _EUSART_Initialize *****************
  1993 ;; Defined at:
  1994 ;;		line 65 in file "mcc_generated_files/eusart.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2, status,0, pclath, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 1F/0
  2005 ;;		On exit  : 1F/1
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2008 ;;      Params:         0       0       0       0
  2009 ;;      Locals:         0       0       0       0
  2010 ;;      Temps:          0       0       0       0
  2011 ;;      Totals:         0       0       0       0
  2012 ;;Total ram usage:        0 bytes
  2013 ;; Hardware stack levels used: 1
  2014 ;; Hardware stack levels required when called: 4
  2015 ;; This function calls:
  2016 ;;		_EUSART_SetErrorHandler
  2017 ;;		_EUSART_SetFramingErrorHandler
  2018 ;;		_EUSART_SetOverrunErrorHandler
  2019 ;; This function is called by:
  2020 ;;		_SYSTEM_Initialize
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024     017B                     _EUSART_Initialize:	
  2025                           ;psect for function _EUSART_Initialize
  2026                           
  2027                           
  2028                           ;mcc_generated_files/eusart.c: 70:     BAUDCON = 0x18;
  2029                           
  2030                           ;incstack = 0
  2031                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2032     017B  3018               	movlw	24
  2033     017C  0023               	movlb	3	; select bank3
  2034     017D  009F               	movwf	31	;volatile
  2035                           
  2036                           ;mcc_generated_files/eusart.c: 73:     RCSTA = 0x90;
  2037     017E  3090               	movlw	144
  2038     017F  009D               	movwf	29	;volatile
  2039                           
  2040                           ;mcc_generated_files/eusart.c: 76:     TXSTA = 0x34;
  2041     0180  3034               	movlw	52
  2042     0181  009E               	movwf	30	;volatile
  2043                           
  2044                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0x06;
  2045     0182  3006               	movlw	6
  2046     0183  009B               	movwf	27	;volatile
  2047                           
  2048                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x00;
  2049     0184  019C               	clrf	28	;volatile
  2050                           
  2051                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  2052     0185  3000               	movlw	0
  2053     0186  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  2054     0187  3000               	movlw	0
  2055     0188  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  2056     0189  221D               	fcall	_EUSART_SetFramingErrorHandler
  2057                           
  2058                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  2059     018A  3000               	movlw	0
  2060     018B  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  2061     018C  3000               	movlw	0
  2062     018D  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  2063     018E  222E               	fcall	_EUSART_SetOverrunErrorHandler
  2064                           
  2065                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  2066     018F  3000               	movlw	0
  2067     0190  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler
  2068     0191  3000               	movlw	0
  2069     0192  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  2070     0193  2223               	fcall	_EUSART_SetErrorHandler
  2071                           
  2072                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  2073     0194  01FA               	clrf	_eusartRxLastError	;volatile
  2074     0195  0008               	return
  2075     0196                     __end_of_EUSART_Initialize:
  2076                           
  2077                           	psect	text9
  2078     022E                     __ptext9:	
  2079 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2080 ;; Defined at:
  2081 ;;		line 167 in file "mcc_generated_files/eusart.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  2084 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;		None
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg
  2091 ;; Tracked objects:
  2092 ;;		On entry : 1F/0
  2093 ;;		On exit  : 1F/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2096 ;;      Params:         2       0       0       0
  2097 ;;      Locals:         0       0       0       0
  2098 ;;      Temps:          0       0       0       0
  2099 ;;      Totals:         2       0       0       0
  2100 ;;Total ram usage:        2 bytes
  2101 ;; Hardware stack levels used: 1
  2102 ;; Hardware stack levels required when called: 3
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_EUSART_Initialize
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110     022E                     _EUSART_SetOverrunErrorHandler:	
  2111                           ;psect for function _EUSART_SetOverrunErrorHandler
  2112                           
  2113                           
  2114                           ;mcc_generated_files/eusart.c: 168:     EUSART_OverrunErrorHandler = interruptHandler;
  2115                           
  2116                           ;incstack = 0
  2117                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  2118     022E  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  2119     022F  00E7               	movwf	_EUSART_OverrunErrorHandler+1
  2120     0230  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  2121     0231  00E6               	movwf	_EUSART_OverrunErrorHandler
  2122     0232  0008               	return
  2123     0233                     __end_of_EUSART_SetOverrunErrorHandler:
  2124                           
  2125                           	psect	text10
  2126     021D                     __ptext10:	
  2127 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2128 ;; Defined at:
  2129 ;;		line 163 in file "mcc_generated_files/eusart.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  2132 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg
  2139 ;; Tracked objects:
  2140 ;;		On entry : 1F/3
  2141 ;;		On exit  : 1F/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2144 ;;      Params:         2       0       0       0
  2145 ;;      Locals:         0       0       0       0
  2146 ;;      Temps:          0       0       0       0
  2147 ;;      Totals:         2       0       0       0
  2148 ;;Total ram usage:        2 bytes
  2149 ;; Hardware stack levels used: 1
  2150 ;; Hardware stack levels required when called: 3
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_EUSART_Initialize
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158     021D                     _EUSART_SetFramingErrorHandler:	
  2159                           ;psect for function _EUSART_SetFramingErrorHandler
  2160                           
  2161                           
  2162                           ;mcc_generated_files/eusart.c: 164:     EUSART_FramingErrorHandler = interruptHandler;
  2163                           
  2164                           ;incstack = 0
  2165                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2166     021D  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  2167     021E  0020               	movlb	0	; select bank0
  2168     021F  00E9               	movwf	_EUSART_FramingErrorHandler+1
  2169     0220  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  2170     0221  00E8               	movwf	_EUSART_FramingErrorHandler
  2171     0222  0008               	return
  2172     0223                     __end_of_EUSART_SetFramingErrorHandler:
  2173                           
  2174                           	psect	text11
  2175     0223                     __ptext11:	
  2176 ;; *************** function _EUSART_SetErrorHandler *****************
  2177 ;; Defined at:
  2178 ;;		line 171 in file "mcc_generated_files/eusart.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  2181 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg
  2188 ;; Tracked objects:
  2189 ;;		On entry : 1F/0
  2190 ;;		On exit  : 1F/1
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2193 ;;      Params:         2       0       0       0
  2194 ;;      Locals:         0       0       0       0
  2195 ;;      Temps:          0       0       0       0
  2196 ;;      Totals:         2       0       0       0
  2197 ;;Total ram usage:        2 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 3
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_EUSART_Initialize
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207     0223                     _EUSART_SetErrorHandler:	
  2208                           ;psect for function _EUSART_SetErrorHandler
  2209                           
  2210                           
  2211                           ;mcc_generated_files/eusart.c: 172:     EUSART_ErrorHandler = interruptHandler;
  2212                           
  2213                           ;incstack = 0
  2214                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2215     0223  0872               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  2216     0224  0021               	movlb	1	; select bank1
  2217     0225  00BF               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  2218     0226  0871               	movf	EUSART_SetErrorHandler@interruptHandler,w
  2219     0227  00BE               	movwf	_EUSART_ErrorHandler^(0+128)
  2220     0228  0008               	return
  2221     0229                     __end_of_EUSART_SetErrorHandler:
  2222                           
  2223                           	psect	text12
  2224     0026                     __ptext12:	
  2225 ;; *************** function _Renderer *****************
  2226 ;; Defined at:
  2227 ;;		line 189 in file "rendering.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  access_line     1    wreg     unsigned char 
  2230 ;;  time_Slot       1    6[COMMON] unsigned char 
  2231 ;;  DisplayBuffe    1    7[COMMON] PTR unsigned char 
  2232 ;;		 -> DisplayBuffer(26), 
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  access_line     1   30[BANK0 ] unsigned char 
  2235 ;;  i               1   31[BANK0 ] unsigned char 
  2236 ;;  Right_Displa   13   15[BANK0 ] unsigned char [13]
  2237 ;;  Left_Display   13    2[BANK0 ] unsigned char [13]
  2238 ;;  LED_Data        4   32[BANK0 ] struct RendererOutputs
  2239 ;;  LEDBrightnes    2   28[BANK0 ] struct DisplayBrightness
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  4    6[COMMON] struct RendererOutputs
  2242 ;; Registers used:
  2243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 1F/0
  2246 ;;		On exit  : 1F/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2249 ;;      Params:         4       0       0       0
  2250 ;;      Locals:         0      34       0       0
  2251 ;;      Temps:          0       2       0       0
  2252 ;;      Totals:         4      36       0       0
  2253 ;;Total ram usage:       40 bytes
  2254 ;; Hardware stack levels used: 1
  2255 ;; Hardware stack levels required when called: 4
  2256 ;; This function calls:
  2257 ;;		_BrightnessCTRL
  2258 ;;		_ReverseByte
  2259 ;; This function is called by:
  2260 ;;		_main
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264     0026                     _Renderer:	
  2265                           ;psect for function _Renderer
  2266                           
  2267                           
  2268                           ;incstack = 0
  2269                           ; Regs used in _Renderer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2270                           ;Renderer@access_line stored from wreg
  2271     0026  00BE               	movwf	Renderer@access_line
  2272                           
  2273                           ;rendering.c: 191: RendererOutputs LED_Data = {
  2274     0027  0861               	movf	Renderer@F99+3,w
  2275     0028  00C3               	movwf	Renderer@LED_Data+3
  2276     0029  0860               	movf	Renderer@F99+2,w
  2277     002A  00C2               	movwf	Renderer@LED_Data+2
  2278     002B  085F               	movf	Renderer@F99+1,w
  2279     002C  00C1               	movwf	Renderer@LED_Data+1
  2280     002D  085E               	movf	Renderer@F99,w
  2281     002E  00C0               	movwf	Renderer@LED_Data
  2282     002F  01C0               	clrf	Renderer@LED_Data
  2283     0030  01C1               	clrf	Renderer@LED_Data+1
  2284     0031  3001               	movlw	1
  2285     0032  00A0               	movwf	??_Renderer
  2286     0033  3000               	movlw	0
  2287     0034  00A1               	movwf	??_Renderer+1
  2288     0035  0A3E               	incf	Renderer@access_line,w
  2289     0036  2839               	goto	u574
  2290     0037                     u575:
  2291     0037  35A0               	lslf	??_Renderer,f
  2292     0038  0DA1               	rlf	??_Renderer+1,f
  2293     0039                     u574:
  2294     0039  0B89               	decfsz	9,f
  2295     003A  2837               	goto	u575
  2296     003B  0820               	movf	??_Renderer,w
  2297     003C  00C2               	movwf	Renderer@LED_Data+2
  2298     003D  0821               	movf	??_Renderer+1,w
  2299     003E  00C3               	movwf	Renderer@LED_Data+3
  2300                           
  2301                           ;rendering.c: 198: Uint8 Left_DisplayData[13] = {0};
  2302     003F  3022               	movlw	low Renderer@Left_DisplayData
  2303     0040  0086               	movwf	6
  2304     0041  3000               	movlw	high Renderer@Left_DisplayData
  2305     0042  0087               	movwf	7
  2306     0043  300D               	movlw	13
  2307     0044  00A0               	movwf	??_Renderer
  2308     0045  3000               	movlw	0
  2309     0046                     u580:
  2310     0046  001E               	movwi fsr1++
  2311     0047  0BA0               	decfsz	??_Renderer,f
  2312     0048  2846               	goto	u580
  2313                           
  2314                           ;rendering.c: 199: Uint8 Right_DisplayData[13] = {0};
  2315     0049  302F               	movlw	low Renderer@Right_DisplayData
  2316     004A  0086               	movwf	6
  2317     004B  3000               	movlw	high Renderer@Right_DisplayData
  2318     004C  0087               	movwf	7
  2319     004D  300D               	movlw	13
  2320     004E  00A0               	movwf	??_Renderer
  2321     004F  3000               	movlw	0
  2322     0050                     u590:
  2323     0050  001E               	movwi fsr1++
  2324     0051  0BA0               	decfsz	??_Renderer,f
  2325     0052  2850               	goto	u590
  2326                           
  2327                           ;rendering.c: 201: for(Uint8 i = 0; i < 13; i++){
  2328     0053  01BF               	clrf	Renderer@i
  2329     0054                     l1440:
  2330                           
  2331                           ;rendering.c: 202:     Left_DisplayData[i] = DisplayBuffer[i];
  2332     0054  083F               	movf	Renderer@i,w
  2333     0055  3E22               	addlw	(low (Renderer@Left_DisplayData| 0))& (0+255)
  2334     0056  0086               	movwf	6
  2335     0057  0187               	clrf	7
  2336     0058  083F               	movf	Renderer@i,w
  2337     0059  0777               	addwf	Renderer@DisplayBuffer,w
  2338     005A  00A0               	movwf	??_Renderer
  2339     005B  0820               	movf	??_Renderer,w
  2340     005C  0084               	movwf	4
  2341     005D  0185               	clrf	5
  2342     005E  0800               	movf	0,w
  2343     005F  0081               	movwf	1
  2344                           
  2345                           ;rendering.c: 203:     Right_DisplayData[i] = DisplayBuffer[i + 13];
  2346     0060  083F               	movf	Renderer@i,w
  2347     0061  3E2F               	addlw	(low (Renderer@Right_DisplayData| 0))& (0+255)
  2348     0062  0086               	movwf	6
  2349     0063  0187               	clrf	7
  2350     0064  083F               	movf	Renderer@i,w
  2351     0065  0777               	addwf	Renderer@DisplayBuffer,w
  2352     0066  00A0               	movwf	??_Renderer
  2353     0067  0820               	movf	??_Renderer,w
  2354     0068  3E0D               	addlw	13
  2355     0069  0084               	movwf	4
  2356     006A  0185               	clrf	5
  2357     006B  0800               	movf	0,w
  2358     006C  0081               	movwf	1
  2359                           
  2360                           ;rendering.c: 204: }
  2361     006D  3001               	movlw	1
  2362     006E  00A0               	movwf	??_Renderer
  2363     006F  0820               	movf	??_Renderer,w
  2364     0070  07BF               	addwf	Renderer@i,f
  2365     0071  300D               	movlw	13
  2366     0072  023F               	subwf	Renderer@i,w
  2367     0073  1C03               	skipc
  2368     0074  2854               	goto	l1440
  2369                           
  2370                           ;rendering.c: 206: DisplayBrightness LEDBrightness = BrightnessCTRL(access_line);
  2371     0075  083E               	movf	Renderer@access_line,w
  2372     0076  215A               	fcall	_BrightnessCTRL
  2373     0077  0872               	movf	?_BrightnessCTRL+1,w
  2374     0078  00BD               	movwf	Renderer@LEDBrightness+1
  2375     0079  0871               	movf	?_BrightnessCTRL,w
  2376     007A  00BC               	movwf	Renderer@LEDBrightness
  2377                           
  2378                           ;rendering.c: 208: if(LEDBrightness.LED_Left_Brightness >= time_Slot){
  2379     007B  0876               	movf	Renderer@time_Slot,w
  2380     007C  023C               	subwf	Renderer@LEDBrightness,w
  2381     007D  1C03               	skipc
  2382     007E  2886               	goto	l1452
  2383                           
  2384                           ;rendering.c: 209:     LED_Data.Left_Common_Line_Data = Left_DisplayData[access_line];
  2385     007F  083E               	movf	Renderer@access_line,w
  2386     0080  3E22               	addlw	(low (Renderer@Left_DisplayData| 0))& (0+255)
  2387     0081  0086               	movwf	6
  2388     0082  0187               	clrf	7
  2389     0083  0801               	movf	1,w
  2390     0084  00C0               	movwf	Renderer@LED_Data
  2391                           
  2392                           ;rendering.c: 211: }else{
  2393     0085  2887               	goto	l1454
  2394     0086                     l1452:
  2395                           
  2396                           ;rendering.c: 212:     LED_Data.Left_Common_Line_Data = 0;
  2397     0086  01C0               	clrf	Renderer@LED_Data
  2398     0087                     l1454:
  2399                           
  2400                           ;rendering.c: 215: if(LEDBrightness.LED_Right_Brightness >= time_Slot){
  2401     0087  0876               	movf	Renderer@time_Slot,w
  2402     0088  023D               	subwf	Renderer@LEDBrightness+1,w
  2403     0089  1C03               	skipc
  2404     008A  2892               	goto	l1458
  2405                           
  2406                           ;rendering.c: 216:     LED_Data.Right_Common_Line_Data = Right_DisplayData[access_line];
  2407     008B  083E               	movf	Renderer@access_line,w
  2408     008C  3E2F               	addlw	(low (Renderer@Right_DisplayData| 0))& (0+255)
  2409     008D  0086               	movwf	6
  2410     008E  0187               	clrf	7
  2411     008F  0801               	movf	1,w
  2412     0090  00C1               	movwf	Renderer@LED_Data+1
  2413                           
  2414                           ;rendering.c: 218: }else{
  2415     0091  2893               	goto	l1460
  2416     0092                     l1458:
  2417                           
  2418                           ;rendering.c: 219:     LED_Data.Right_Common_Line_Data = 0;
  2419     0092  01C1               	clrf	Renderer@LED_Data+1
  2420     0093                     l1460:
  2421                           
  2422                           ;rendering.c: 223: LED_Data.Left_Common_Line_Data = ReverseByte(LED_Data.Left_Common_Lin
      +                          e_Data);
  2423     0093  0840               	movf	Renderer@LED_Data,w
  2424     0094  2135               	fcall	_ReverseByte
  2425     0095  00C0               	movwf	Renderer@LED_Data
  2426                           
  2427                           ;rendering.c: 224: LED_Data.Right_Common_Line_Data = ReverseByte(LED_Data.Right_Common_L
      +                          ine_Data);
  2428     0096  0841               	movf	Renderer@LED_Data+1,w
  2429     0097  2135               	fcall	_ReverseByte
  2430     0098  00C1               	movwf	Renderer@LED_Data+1
  2431                           
  2432                           ;rendering.c: 225: LED_Data.AccessLine.AccessLineMembers.Access_Line_High = ReverseByte(
      +                          LED_Data.AccessLine.AccessLineMembers.Access_Line_High);
  2433     0099  0843               	movf	Renderer@LED_Data+3,w
  2434     009A  2135               	fcall	_ReverseByte
  2435     009B  00C3               	movwf	Renderer@LED_Data+3
  2436                           
  2437                           ;rendering.c: 226: LED_Data.AccessLine.AccessLineMembers.Access_Line_Low = ReverseByte(L
      +                          ED_Data.AccessLine.AccessLineMembers.Access_Line_Low);
  2438     009C  0842               	movf	Renderer@LED_Data+2,w
  2439     009D  2135               	fcall	_ReverseByte
  2440     009E  00C2               	movwf	Renderer@LED_Data+2
  2441                           
  2442                           ;rendering.c: 228:     return LED_Data;
  2443     009F  0843               	movf	Renderer@LED_Data+3,w
  2444     00A0  00F9               	movwf	?_Renderer+3
  2445     00A1  0842               	movf	Renderer@LED_Data+2,w
  2446     00A2  00F8               	movwf	?_Renderer+2
  2447     00A3  0841               	movf	Renderer@LED_Data+1,w
  2448     00A4  00F7               	movwf	?_Renderer+1
  2449     00A5  0840               	movf	Renderer@LED_Data,w
  2450     00A6  00F6               	movwf	?_Renderer
  2451     00A7  0008               	return
  2452     00A8                     __end_of_Renderer:
  2453                           
  2454                           	psect	text13
  2455     0135                     __ptext13:	
  2456 ;; *************** function _ReverseByte *****************
  2457 ;; Defined at:
  2458 ;;		line 177 in file "rendering.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  byte            1    wreg     unsigned char 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  byte            1    3[COMMON] unsigned char 
  2463 ;;  i               1    5[COMMON] unsigned char 
  2464 ;;  ReversedByte    1    4[COMMON] unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      unsigned char 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0
  2469 ;; Tracked objects:
  2470 ;;		On entry : 1F/0
  2471 ;;		On exit  : 1F/0
  2472 ;;		Unchanged: 1F/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2474 ;;      Params:         0       0       0       0
  2475 ;;      Locals:         3       0       0       0
  2476 ;;      Temps:          2       0       0       0
  2477 ;;      Totals:         5       0       0       0
  2478 ;;Total ram usage:        5 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 3
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_Renderer
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488     0135                     _ReverseByte:	
  2489                           ;psect for function _ReverseByte
  2490                           
  2491                           
  2492                           ;incstack = 0
  2493                           ; Regs used in _ReverseByte: [wreg+status,2+status,0]
  2494                           ;ReverseByte@byte stored from wreg
  2495     0135  00F3               	movwf	ReverseByte@byte
  2496                           
  2497                           ;rendering.c: 178:     Uint8 ReversedByte = 0;
  2498     0136  01F4               	clrf	ReverseByte@ReversedByte
  2499                           
  2500                           ;rendering.c: 180:     for(Uint8 i = 0; i < 8; i++){
  2501     0137  01F5               	clrf	ReverseByte@i
  2502     0138                     l1410:
  2503                           
  2504                           ;rendering.c: 181:         if(byte & (1 << i)){
  2505     0138  3001               	movlw	1
  2506     0139  00F1               	movwf	??_ReverseByte
  2507     013A  0A75               	incf	ReverseByte@i,w
  2508     013B  293D               	goto	u534
  2509     013C                     u535:
  2510     013C  35F1               	lslf	??_ReverseByte,f
  2511     013D                     u534:
  2512     013D  0B89               	decfsz	9,f
  2513     013E  293C               	goto	u535
  2514     013F  0871               	movf	??_ReverseByte,w
  2515     0140  0573               	andwf	ReverseByte@byte,w
  2516     0141  1903               	btfsc	3,2
  2517     0142  2950               	goto	l91
  2518                           
  2519                           ;rendering.c: 182:             ReversedByte |= (1 << (7-i));
  2520     0143  3001               	movlw	1
  2521     0144  00F1               	movwf	??_ReverseByte
  2522     0145  0875               	movf	ReverseByte@i,w
  2523     0146  3C07               	sublw	7
  2524     0147  0A89               	incf	9,f
  2525     0148  294A               	goto	u554
  2526     0149                     u555:
  2527     0149  35F1               	lslf	??_ReverseByte,f
  2528     014A                     u554:
  2529     014A  0B89               	decfsz	9,f
  2530     014B  2949               	goto	u555
  2531     014C  0871               	movf	??_ReverseByte,w
  2532     014D  00F2               	movwf	??_ReverseByte+1
  2533     014E  0872               	movf	??_ReverseByte+1,w
  2534     014F  04F4               	iorwf	ReverseByte@ReversedByte,f
  2535     0150                     l91:	
  2536                           ;rendering.c: 183:         }
  2537                           
  2538                           
  2539                           ;rendering.c: 184:     }
  2540     0150  3001               	movlw	1
  2541     0151  00F1               	movwf	??_ReverseByte
  2542     0152  0871               	movf	??_ReverseByte,w
  2543     0153  07F5               	addwf	ReverseByte@i,f
  2544     0154  3008               	movlw	8
  2545     0155  0275               	subwf	ReverseByte@i,w
  2546     0156  1C03               	skipc
  2547     0157  2938               	goto	l1410
  2548                           
  2549                           ;rendering.c: 185:     return ReversedByte;
  2550     0158  0874               	movf	ReverseByte@ReversedByte,w
  2551     0159  0008               	return
  2552     015A                     __end_of_ReverseByte:
  2553                           
  2554                           	psect	text14
  2555     015A                     __ptext14:	
  2556 ;; *************** function _BrightnessCTRL *****************
  2557 ;; Defined at:
  2558 ;;		line 157 in file "rendering.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  AccessLine      1    wreg     unsigned char 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  AccessLine      1    3[COMMON] unsigned char 
  2563 ;;  LEDBrightnes    2    4[COMMON] struct DisplayBrightness
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  2    1[COMMON] struct DisplayBrightness
  2566 ;; Registers used:
  2567 ;;		wreg, status,2, status,0
  2568 ;; Tracked objects:
  2569 ;;		On entry : 1F/0
  2570 ;;		On exit  : 1F/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2573 ;;      Params:         2       0       0       0
  2574 ;;      Locals:         3       0       0       0
  2575 ;;      Temps:          0       0       0       0
  2576 ;;      Totals:         5       0       0       0
  2577 ;;Total ram usage:        5 bytes
  2578 ;; Hardware stack levels used: 1
  2579 ;; Hardware stack levels required when called: 3
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_Renderer
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587     015A                     _BrightnessCTRL:	
  2588                           ;psect for function _BrightnessCTRL
  2589                           
  2590                           
  2591                           ;incstack = 0
  2592                           ; Regs used in _BrightnessCTRL: [wreg+status,2+status,0]
  2593                           ;BrightnessCTRL@AccessLine stored from wreg
  2594     015A  00F3               	movwf	BrightnessCTRL@AccessLine
  2595                           
  2596                           ;rendering.c: 158:     DisplayBrightness LEDBrightness = {
  2597     015B  086D               	movf	BrightnessCTRL@F89+1,w
  2598     015C  00F5               	movwf	BrightnessCTRL@LEDBrightness+1
  2599     015D  086C               	movf	BrightnessCTRL@F89,w
  2600     015E  00F4               	movwf	BrightnessCTRL@LEDBrightness
  2601                           
  2602                           ;rendering.c: 162:     if(AccessLine > 5){
  2603     015F  3006               	movlw	6
  2604     0160  0273               	subwf	BrightnessCTRL@AccessLine,w
  2605     0161  1C03               	skipc
  2606     0162  2965               	goto	l1388
  2607                           
  2608                           ;rendering.c: 163:         LEDBrightness.LED_Left_Brightness = 3;
  2609     0163  3003               	movlw	3
  2610     0164  00F4               	movwf	BrightnessCTRL@LEDBrightness
  2611     0165                     l1388:
  2612                           
  2613                           ;rendering.c: 165:     if(AccessLine == 12){
  2614     0165  300C               	movlw	12
  2615     0166  0673               	xorwf	BrightnessCTRL@AccessLine,w
  2616     0167  1D03               	btfss	3,2
  2617     0168  296B               	goto	l1392
  2618                           
  2619                           ;rendering.c: 166:         LEDBrightness.LED_Left_Brightness = 1;
  2620     0169  01F4               	clrf	BrightnessCTRL@LEDBrightness
  2621     016A  0AF4               	incf	BrightnessCTRL@LEDBrightness,f
  2622     016B                     l1392:
  2623                           
  2624                           ;rendering.c: 168:     if(AccessLine < 7){
  2625     016B  3007               	movlw	7
  2626     016C  0273               	subwf	BrightnessCTRL@AccessLine,w
  2627     016D  1803               	skipnc
  2628     016E  2971               	goto	l1396
  2629                           
  2630                           ;rendering.c: 169:         LEDBrightness.LED_Right_Brightness = 2;
  2631     016F  3002               	movlw	2
  2632     0170  00F5               	movwf	BrightnessCTRL@LEDBrightness+1
  2633     0171                     l1396:
  2634                           
  2635                           ;rendering.c: 171:     if(AccessLine == 0){
  2636     0171  0873               	movf	BrightnessCTRL@AccessLine,w
  2637     0172  1D03               	btfss	3,2
  2638     0173  2976               	goto	l1400
  2639                           
  2640                           ;rendering.c: 172:         LEDBrightness.LED_Right_Brightness = 1;
  2641     0174  01F5               	clrf	BrightnessCTRL@LEDBrightness+1
  2642     0175  0AF5               	incf	BrightnessCTRL@LEDBrightness+1,f
  2643     0176                     l1400:
  2644                           
  2645                           ;rendering.c: 174:     return LEDBrightness;
  2646     0176  0875               	movf	BrightnessCTRL@LEDBrightness+1,w
  2647     0177  00F2               	movwf	?_BrightnessCTRL+1
  2648     0178  0874               	movf	BrightnessCTRL@LEDBrightness,w
  2649     0179  00F1               	movwf	?_BrightnessCTRL
  2650     017A  0008               	return
  2651     017B                     __end_of_BrightnessCTRL:
  2652                           
  2653                           	psect	text15
  2654     023B                     __ptext15:	
  2655 ;; *************** function _EUSART_is_tx_done *****************
  2656 ;; Defined at:
  2657 ;;		line 103 in file "mcc_generated_files/eusart.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;		None
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;		None
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      _Bool 
  2664 ;; Registers used:
  2665 ;;		wreg, status,2, status,0
  2666 ;; Tracked objects:
  2667 ;;		On entry : 1C/3
  2668 ;;		On exit  : 1F/3
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2671 ;;      Params:         0       0       0       0
  2672 ;;      Locals:         0       0       0       0
  2673 ;;      Temps:          0       0       0       0
  2674 ;;      Totals:         0       0       0       0
  2675 ;;Total ram usage:        0 bytes
  2676 ;; Hardware stack levels used: 1
  2677 ;; Hardware stack levels required when called: 3
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_main
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685     023B                     _EUSART_is_tx_done:	
  2686                           ;psect for function _EUSART_is_tx_done
  2687                           
  2688                           
  2689                           ;mcc_generated_files/eusart.c: 105:     return TXSTAbits.TRMT;
  2690                           
  2691                           ;incstack = 0
  2692                           ; Regs used in _EUSART_is_tx_done: [wreg+status,2+status,0]
  2693     023B  0023               	movlb	3	; select bank3
  2694     023C  0C1E               	rrf	30,w	;volatile
  2695     023D  3901               	andlw	1
  2696     023E  0008               	return
  2697     023F                     __end_of_EUSART_is_tx_done:
  2698                           
  2699                           	psect	text16
  2700     01F9                     __ptext16:	
  2701 ;; *************** function _EUSART_Write *****************
  2702 ;; Defined at:
  2703 ;;		line 138 in file "mcc_generated_files/eusart.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  txData          1    wreg     unsigned char 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  txData          1    1[COMMON] unsigned char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg
  2712 ;; Tracked objects:
  2713 ;;		On entry : 1F/1
  2714 ;;		On exit  : 1F/3
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2717 ;;      Params:         0       0       0       0
  2718 ;;      Locals:         1       0       0       0
  2719 ;;      Temps:          0       0       0       0
  2720 ;;      Totals:         1       0       0       0
  2721 ;;Total ram usage:        1 bytes
  2722 ;; Hardware stack levels used: 1
  2723 ;; Hardware stack levels required when called: 3
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_main
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731     01F9                     _EUSART_Write:	
  2732                           ;psect for function _EUSART_Write
  2733                           
  2734                           
  2735                           ;incstack = 0
  2736                           ; Regs used in _EUSART_Write: [wreg]
  2737                           ;EUSART_Write@txData stored from wreg
  2738     01F9  00F1               	movwf	EUSART_Write@txData
  2739                           
  2740                           ;mcc_generated_files/eusart.c: 138: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 139: {;mcc_generated_files/eusart.c: 140:     RCSTAbits.SREN = 0;
  2741     01FA  0023               	movlb	3	; select bank3
  2742     01FB  129D               	bcf	29,5	;volatile
  2743                           
  2744                           ;mcc_generated_files/eusart.c: 141:     RCSTAbits.CREN = 0;
  2745     01FC  121D               	bcf	29,4	;volatile
  2746     01FD                     l297:	
  2747                           ;mcc_generated_files/eusart.c: 143:     {;mcc_generated_files/eusart.c: 144:     }
  2748                           
  2749                           
  2750                           ;mcc_generated_files/eusart.c: 142:     while(0 == PIR1bits.TXIF)
  2751     01FD  0020               	movlb	0	; select bank0
  2752     01FE  1E11               	btfss	17,4	;volatile
  2753     01FF  29FD               	goto	l297
  2754                           
  2755                           ;mcc_generated_files/eusart.c: 146:     TXREG = txData;
  2756     0200  0871               	movf	EUSART_Write@txData,w
  2757     0201  0023               	movlb	3	; select bank3
  2758     0202  009A               	movwf	26	;volatile
  2759     0203  0008               	return
  2760     0204                     __end_of_EUSART_Write:
  2761                           
  2762                           	psect	intentry
  2763     0004                     __pintentry:	
  2764 ;; *************** function _INTERRUPT_InterruptManager *****************
  2765 ;; Defined at:
  2766 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;		None
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;		None
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      void 
  2773 ;; Registers used:
  2774 ;;		wreg, status,2, status,0, pclath, cstack
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2780 ;;      Params:         0       0       0       0
  2781 ;;      Locals:         0       0       0       0
  2782 ;;      Temps:          0       0       0       0
  2783 ;;      Totals:         0       0       0       0
  2784 ;;Total ram usage:        0 bytes
  2785 ;; Hardware stack levels used: 1
  2786 ;; Hardware stack levels required when called: 2
  2787 ;; This function calls:
  2788 ;;		_TMR0_ISR
  2789 ;; This function is called by:
  2790 ;;		Interrupt level 1
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794     0004                     _INTERRUPT_InterruptManager:
  2795                           
  2796                           ;incstack = 0
  2797     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2798                           
  2799                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2800     0005  3180               	pagesel	$
  2801                           
  2802                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  2803     0006  1A8B               	btfsc	11,5	;volatile
  2804     0007  1D0B               	btfss	11,2	;volatile
  2805     0008  280A               	goto	i1l192
  2806                           
  2807                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  2808     0009  21EB               	fcall	_TMR0_ISR
  2809     000A                     i1l192:	
  2810                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  2811                           
  2812     000A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2813     000B  0009               	retfie
  2814     000C                     __end_of_INTERRUPT_InterruptManager:
  2815                           
  2816                           	psect	text18
  2817     01EB                     __ptext18:	
  2818 ;; *************** function _TMR0_ISR *****************
  2819 ;; Defined at:
  2820 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;		None
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;		None
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0, pclath, cstack
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2834 ;;      Params:         0       0       0       0
  2835 ;;      Locals:         0       0       0       0
  2836 ;;      Temps:          0       0       0       0
  2837 ;;      Totals:         0       0       0       0
  2838 ;;Total ram usage:        0 bytes
  2839 ;; Hardware stack levels used: 1
  2840 ;; Hardware stack levels required when called: 1
  2841 ;; This function calls:
  2842 ;;		NULL
  2843 ;;		_RenderingTimer_ISR
  2844 ;;		_TMR0_DefaultInterruptHandler
  2845 ;; This function is called by:
  2846 ;;		_INTERRUPT_InterruptManager
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850     01EB                     _TMR0_ISR:	
  2851                           ;psect for function _TMR0_ISR
  2852                           
  2853                           
  2854                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  2855                           
  2856                           ;incstack = 0
  2857                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  2858     01EB  110B               	bcf	11,2	;volatile
  2859                           
  2860                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  2861     01EC  087B               	movf	_timer0ReloadVal,w	;volatile
  2862     01ED  0020               	movlb	0	; select bank0
  2863     01EE  0095               	movwf	21	;volatile
  2864                           
  2865                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  2866     01EF  086A               	movf	_TMR0_InterruptHandler,w
  2867     01F0  046B               	iorwf	_TMR0_InterruptHandler+1,w
  2868     01F1  1903               	btfsc	3,2
  2869     01F2  0008               	return
  2870                           
  2871                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  2872     01F3  086B               	movf	_TMR0_InterruptHandler+1,w
  2873     01F4  008A               	movwf	10
  2874     01F5  086A               	movf	_TMR0_InterruptHandler,w
  2875     01F6  000A               	callw
  2876     01F7  3181               	pagesel	$
  2877     01F8  0008               	return
  2878     01F9                     __end_of_TMR0_ISR:
  2879                           
  2880                           	psect	text19
  2881     01C7                     __ptext19:	
  2882 ;; *************** function _RenderingTimer_ISR *****************
  2883 ;; Defined at:
  2884 ;;		line 150 in file "PerfBoardClock.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;		None
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, status,2, status,0
  2893 ;; Tracked objects:
  2894 ;;		On entry : 1F/0
  2895 ;;		On exit  : 1F/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2898 ;;      Params:         0       0       0       0
  2899 ;;      Locals:         0       0       0       0
  2900 ;;      Temps:          1       0       0       0
  2901 ;;      Totals:         1       0       0       0
  2902 ;;Total ram usage:        1 bytes
  2903 ;; Hardware stack levels used: 1
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_main
  2908 ;;		_TMR0_ISR
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912     01C7                     _RenderingTimer_ISR:	
  2913                           ;psect for function _RenderingTimer_ISR
  2914                           
  2915                           
  2916                           ;PerfBoardClock.c: 152:     TimeSlot++;
  2917                           
  2918                           ;incstack = 0
  2919                           ; Regs used in _RenderingTimer_ISR: [wreg+status,2+status,0]
  2920     01C7  3001               	movlw	1
  2921     01C8  00F0               	movwf	??_RenderingTimer_ISR
  2922     01C9  0870               	movf	??_RenderingTimer_ISR,w
  2923     01CA  07E4               	addwf	_TimeSlot,f
  2924                           
  2925                           ;PerfBoardClock.c: 154:   if(TimeSlot > 4){
  2926     01CB  3005               	movlw	5
  2927     01CC  0264               	subwf	_TimeSlot,w
  2928     01CD  1C03               	skipc
  2929     01CE  0008               	return
  2930                           
  2931                           ;PerfBoardClock.c: 155:     TimeSlot = 0;
  2932     01CF  01E4               	clrf	_TimeSlot
  2933                           
  2934                           ;PerfBoardClock.c: 156:     AccessLine++;
  2935     01D0  3001               	movlw	1
  2936     01D1  00F0               	movwf	??_RenderingTimer_ISR
  2937     01D2  0870               	movf	??_RenderingTimer_ISR,w
  2938     01D3  07E5               	addwf	_AccessLine,f
  2939                           
  2940                           ;PerfBoardClock.c: 157:     if(AccessLine > 13){
  2941     01D4  300E               	movlw	14
  2942     01D5  0265               	subwf	_AccessLine,w
  2943     01D6  1C03               	skipc
  2944     01D7  0008               	return
  2945                           
  2946                           ;PerfBoardClock.c: 158:       AccessLine = 0;
  2947     01D8  01E5               	clrf	_AccessLine
  2948     01D9  0008               	return
  2949     01DA                     __end_of_RenderingTimer_ISR:
  2950                           
  2951                           	psect	text20
  2952     0241                     __ptext20:	
  2953 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2954 ;; Defined at:
  2955 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		None
  2964 ;; Tracked objects:
  2965 ;;		On entry : 1F/0
  2966 ;;		On exit  : 1F/0
  2967 ;;		Unchanged: 1F/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2969 ;;      Params:         0       0       0       0
  2970 ;;      Locals:         0       0       0       0
  2971 ;;      Temps:          0       0       0       0
  2972 ;;      Totals:         0       0       0       0
  2973 ;;Total ram usage:        0 bytes
  2974 ;; Hardware stack levels used: 1
  2975 ;; This function calls:
  2976 ;;		Nothing
  2977 ;; This function is called by:
  2978 ;;		_TMR0_Initialize
  2979 ;;		_TMR0_ISR
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983     0241                     _TMR0_DefaultInterruptHandler:	
  2984                           ;psect for function _TMR0_DefaultInterruptHandler
  2985                           
  2986                           
  2987                           ;incstack = 0
  2988                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  2989     0241  0008               	return
  2990     0242                     __end_of_TMR0_DefaultInterruptHandler:
  2991     007E                     btemp	set	126	;btemp
  2992     007E                     int$flags	set	126
  2993     007E                     wtemp0	set	126
  2994                           
  2995                           	psect	config
  2996                           
  2997                           ;Config register CONFIG1 @ 0x8007
  2998                           ;	Oscillator Selection
  2999                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3000                           ;	Watchdog Timer Enable
  3001                           ;	WDTE = OFF, WDT disabled
  3002                           ;	Power-up Timer Enable
  3003                           ;	PWRTE = OFF, PWRT disabled
  3004                           ;	MCLR Pin Function Select
  3005                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3006                           ;	Flash Program Memory Code Protection
  3007                           ;	CP = OFF, Program memory code protection is disabled
  3008                           ;	Data Memory Code Protection
  3009                           ;	CPD = OFF, Data memory code protection is disabled
  3010                           ;	Brown-out Reset Enable
  3011                           ;	BOREN = ON, Brown-out Reset enabled
  3012                           ;	Clock Out Enable
  3013                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3014                           ;	Internal/External Switchover
  3015                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3016                           ;	Fail-Safe Clock Monitor Enable
  3017                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3018     8007                     	org	32775
  3019     8007  3FE4               	dw	16356
  3020                           
  3021                           ;Config register CONFIG2 @ 0x8008
  3022                           ;	Flash Memory Self-Write Protection
  3023                           ;	WRT = OFF, Write protection off
  3024                           ;	PLL Enable
  3025                           ;	PLLEN = OFF, 4x PLL disabled
  3026                           ;	Stack Overflow/Underflow Reset Enable
  3027                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3028                           ;	Brown-out Reset Voltage Selection
  3029                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3030                           ;	In-Circuit Debugger Mode
  3031                           ;	DEBUG = 0x1, unprogrammed default
  3032                           ;	Low-Voltage Programming Enable
  3033                           ;	LVP = ON, Low-voltage programming enabled
  3034     8008                     	org	32776
  3035     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    61
    Data        28
    BSS         36
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     36      78
    BANK1            80      4      32
    BANK2            64      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    Renderer@DisplayBuffer	PTR unsigned char  size(1) Largest target is 26
		 -> DisplayBuffer(BANK1[26]), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> RenderingTimer_ISR(), TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> RenderingTimer_ISR(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_Renderer
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _Renderer->_BrightnessCTRL
    _Renderer->_ReverseByte

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_RenderingTimer_ISR

Critical Paths under _main in BANK0

    _main->_Renderer

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2904
                                              0 BANK1      4     4      0
                       _EUSART_Write
                  _EUSART_is_tx_done
                           _Renderer
                  _SYSTEM_Initialize
                    _TMR0_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Renderer                                            40    36      4    1710
                                              6 COMMON     4     0      4
                                              0 BANK0     36    36      0
                     _BrightnessCTRL
                        _ReverseByte
 ---------------------------------------------------------------------------------
 (2) _ReverseByte                                          5     5      0     198
                                              1 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _BrightnessCTRL                                       5     3      2     238
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                                NULL *
                 _RenderingTimer_ISR *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RenderingTimer_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Write
   _EUSART_is_tx_done
   _Renderer
     _BrightnessCTRL
     _ReverseByte
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize
   _TMR0_Initialize
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     NULL(Fake) *
     _RenderingTimer_ISR *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      7A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     24      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      4      20       8       40.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            40      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      7A      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Feb 23 17:27:20 2024

                                  main@Display 00BA                                     _AccessLine 0065  
                              ReverseByte@byte 0073                                             l91 0150  
                              _timer0ReloadVal 007B                                            l297 01FD  
                                          u534 013D                                            u535 013C  
                                          u554 014A                                            u555 0149  
                                          u580 0046                                            u590 0050  
                                          u574 0039                                            u575 0037  
               ?_EUSART_SetFramingErrorHandler 0071                                            wreg 0009  
                                         l1400 0176                                           l1410 0138  
                                         l1500 00DB                                           l1440 0054  
                                         l1504 00E5                                           l1460 0093  
                                         l1452 0086                                           l1454 0087  
                                         l1392 016B                                           l1458 0092  
                                         l1396 0171                                           l1388 0165  
                                         l1492 00C7                                           l1484 00B1  
                                         l1496 00D1                                           _LATA 010C  
                                         _LATB 010D                                           _TMR0 0015  
                                         _WPUA 020C                                           _WPUB 020D  
                                   _Characters 00F8                                           _main 00A8  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 000C  
                      __end_of_TMR0_Initialize 01EB                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 020B  
                                        ?_main 0070                                          i1l192 000A  
                              _TMR0_WriteTimer 0233                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                    ?_TMR0_SetInterruptHandler 0071                               __end_of_TMR0_ISR 01F9  
                               _WDT_Initialize 0237                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                              __initialization 000D                                   __end_of_main 00F8  
                               ??_EUSART_Write 0071                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 007A                               __end_of_Renderer 00A8  
                       __end_of_WDT_Initialize 023B              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 0066                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _BORCON 0116  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                ??_ReverseByte 0071                        __end_of_TMR0_WriteTimer 0237  
                             ?_TMR0_Initialize 0070                                ?_WDT_Initialize 0070  
     TMR0_SetInterruptHandler@InterruptHandler 0071                              _SYSTEM_Initialize 0217  
                      __end_of__initialization 0023                             ?_SYSTEM_Initialize 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK0 023F  
                                 __pidataBANK1 0196                            ??_SYSTEM_Initialize 0073  
                                    ?_TMR0_ISR 0070                                    Renderer@F99 005E  
                          __end_of_ReverseByte 015A                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 0073                      __end_of_SYSTEM_Initialize 021D  
                                   __pbssBANK0 0044                           __end_of_EUSART_Write 0204  
                                    ?_Renderer 0076                                     __pmaintext 00A8  
             __end_of_TMR0_SetInterruptHandler 022E                                     ??_TMR0_ISR 0071  
                                   __pintentry 0004                               ?_TMR0_WriteTimer 0070  
                                      _BAUDCON 019F                                        _APFCON0 011D  
                                      _APFCON1 011E                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 0073                                     ??_Renderer 0020  
                                  _ReverseByte 0135                                        __ptext1 0233  
                                      __ptext2 0217                                        __ptext3 0237  
                                      __ptext4 01DA                                        __ptext5 0229  
                                      __ptext6 01B0                                        __ptext7 0204  
                                      __ptext8 017B                                        __ptext9 022E  
                            BrightnessCTRL@F89 006C                          _OSCILLATOR_Initialize 0204  
                     ??_PIN_MANAGER_Initialize 0071                                        clrloop0 0212  
                         end_of_initialization 0023                        ReverseByte@ReversedByte 0074  
        __end_of_EUSART_SetOverrunErrorHandler 0233                  _EUSART_SetOverrunErrorHandler 022E  
                                      init_ram 020B                                        initloop 020C  
                            _EUSART_Initialize 017B                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                            ??_EUSART_Initialize 0073  
                             ??_WDT_Initialize 0071                       _TMR0_SetInterruptHandler 0229  
                           __end_of_Characters 0135                                 _BrightnessCTRL 015A  
                    __end_of_EUSART_Initialize 0196                                      _TXSTAbits 019E  
                          Renderer@access_line 003E                     _EUSART_DefaultErrorHandler 0000  
                                 Renderer@F101 0051                                   Renderer@F103 0044  
                                 _EUSART_Write 01F9                         ?_OSCILLATOR_Initialize 0070  
                     Renderer@Left_DisplayData 0022                            start_initialization 000D  
                       __end_of_BrightnessCTRL 017B                                      Renderer@i 003F  
                     BrightnessCTRL@AccessLine 0073                 ?_EUSART_SetOverrunErrorHandler 0071  
                   _EUSART_FramingErrorHandler 0068                         _EUSART_SetErrorHandler 0223  
                                  __pdataBANK0 006C                                    __pdataBANK1 00A0  
                                  __pbssCOMMON 007A                    BrightnessCTRL@LEDBrightness 0074  
                                    ___latbits 0000                     __end_of_RenderingTimer_ISR 01DA  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00BA  
                              ?_BrightnessCTRL 0071                          _TMR0_InterruptHandler 006A  
                                    __pnvBANK0 0066                                      __pnvBANK1 00BE  
                       _PIN_MANAGER_Initialize 01B0                                   ?_ReverseByte 0070  
                    Renderer@Right_DisplayData 002F                   ??_INTERRUPT_InterruptManager 0071  
                        Renderer@DisplayBuffer 0077                              ??_TMR0_Initialize 0073  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0071  
                                    clear_ram0 0211                              _eusartRxLastError 007A  
                   ??_TMR0_SetInterruptHandler 0073                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0073                              _EUSART_is_tx_done 023B  
                                     _TMR0_ISR 01EB              _EUSART_DefaultOverrunErrorHandler 0000  
                           ?_EUSART_is_tx_done 0070                                   ReverseByte@i 0075  
                          ??_EUSART_is_tx_done 0071                      __end_of_EUSART_is_tx_done 023F  
                                     _Renderer 0026                                       _TimeSlot 0064  
                                _DisplayBuffer 00A0                        ??_OSCILLATOR_Initialize 0071  
                          _EUSART_ErrorHandler 00BE                                       __ptext10 021D  
                                     __ptext11 0223                                       __ptext20 0241  
                                     __ptext12 0026                                       __ptext13 0135  
                                     __ptext14 015A                                       __ptext15 023B  
                                     __ptext16 01F9                                       __ptext18 01EB  
                                     __ptext19 01C7                               Renderer@LED_Data 0040  
                      TMR0_WriteTimer@timerVal 0071                              ??_TMR0_WriteTimer 0071  
         __end_of_TMR0_DefaultInterruptHandler 0242                   _TMR0_DefaultInterruptHandler 0241  
                      ?_EUSART_SetErrorHandler 0071  EUSART_SetOverrunErrorHandler@interruptHandler 0071  
                                     int$flags 007E             __end_of_INTERRUPT_InterruptManager 000C  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0223  
                _EUSART_SetFramingErrorHandler 021D                               ??_BrightnessCTRL 0073  
                        Renderer@LEDBrightness 003C                                     _INTCONbits 000B  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0229                             _RenderingTimer_ISR 01C7  
                ?_TMR0_DefaultInterruptHandler 0070                            ?_RenderingTimer_ISR 0070  
EUSART_SetFramingErrorHandler@interruptHandler 0071                                  __pstringtext1 00F8  
                                  _time_of_day 0062                                     _OPTION_REG 0095  
                              _TMR0_Initialize 01DA                           ??_RenderingTimer_ISR 0070  
                           EUSART_Write@txData 0071                 __end_of_PIN_MANAGER_Initialize 01C7  
                            Renderer@time_Slot 0076  
