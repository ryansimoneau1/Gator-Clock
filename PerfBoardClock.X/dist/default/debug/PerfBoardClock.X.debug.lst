

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Dec 09 00:52:49 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16LF1826
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48     0000                     
    49                           ; Generated 06/07/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16LF1826 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83     0000                     	;# 
    84     0001                     	;# 
    85     0002                     	;# 
    86     0003                     	;# 
    87     0004                     	;# 
    88     0005                     	;# 
    89     0006                     	;# 
    90     0007                     	;# 
    91     0008                     	;# 
    92     0009                     	;# 
    93     000A                     	;# 
    94     000B                     	;# 
    95     000C                     	;# 
    96     000D                     	;# 
    97     0011                     	;# 
    98     0012                     	;# 
    99     0015                     	;# 
   100     0016                     	;# 
   101     0016                     	;# 
   102     0017                     	;# 
   103     0018                     	;# 
   104     0019                     	;# 
   105     001A                     	;# 
   106     001B                     	;# 
   107     001C                     	;# 
   108     001E                     	;# 
   109     001F                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0095                     	;# 
   115     0096                     	;# 
   116     0097                     	;# 
   117     0098                     	;# 
   118     0099                     	;# 
   119     009A                     	;# 
   120     009B                     	;# 
   121     009B                     	;# 
   122     009C                     	;# 
   123     009D                     	;# 
   124     009E                     	;# 
   125     010C                     	;# 
   126     010D                     	;# 
   127     0111                     	;# 
   128     0112                     	;# 
   129     0113                     	;# 
   130     0114                     	;# 
   131     0115                     	;# 
   132     0116                     	;# 
   133     0117                     	;# 
   134     0118                     	;# 
   135     0119                     	;# 
   136     011A                     	;# 
   137     011B                     	;# 
   138     011D                     	;# 
   139     011E                     	;# 
   140     018C                     	;# 
   141     018D                     	;# 
   142     0191                     	;# 
   143     0191                     	;# 
   144     0192                     	;# 
   145     0193                     	;# 
   146     0193                     	;# 
   147     0193                     	;# 
   148     0194                     	;# 
   149     0195                     	;# 
   150     0196                     	;# 
   151     0199                     	;# 
   152     019A                     	;# 
   153     019B                     	;# 
   154     019B                     	;# 
   155     019B                     	;# 
   156     019B                     	;# 
   157     019C                     	;# 
   158     019C                     	;# 
   159     019D                     	;# 
   160     019E                     	;# 
   161     019F                     	;# 
   162     020C                     	;# 
   163     020D                     	;# 
   164     0211                     	;# 
   165     0211                     	;# 
   166     0212                     	;# 
   167     0212                     	;# 
   168     0213                     	;# 
   169     0213                     	;# 
   170     0214                     	;# 
   171     0214                     	;# 
   172     0215                     	;# 
   173     0215                     	;# 
   174     0215                     	;# 
   175     0216                     	;# 
   176     0216                     	;# 
   177     0217                     	;# 
   178     0217                     	;# 
   179     0291                     	;# 
   180     0291                     	;# 
   181     0292                     	;# 
   182     0293                     	;# 
   183     0294                     	;# 
   184     0295                     	;# 
   185     0295                     	;# 
   186     0296                     	;# 
   187     0394                     	;# 
   188     0395                     	;# 
   189     0396                     	;# 
   190     039A                     	;# 
   191     039C                     	;# 
   192     039D                     	;# 
   193     039E                     	;# 
   194     039F                     	;# 
   195     0FE4                     	;# 
   196     0FE5                     	;# 
   197     0FE6                     	;# 
   198     0FE7                     	;# 
   199     0FE8                     	;# 
   200     0FE9                     	;# 
   201     0FEA                     	;# 
   202     0FEB                     	;# 
   203     0FED                     	;# 
   204     0FEE                     	;# 
   205     0FEF                     	;# 
   206     0000                     	;# 
   207     0001                     	;# 
   208     0002                     	;# 
   209     0003                     	;# 
   210     0004                     	;# 
   211     0005                     	;# 
   212     0006                     	;# 
   213     0007                     	;# 
   214     0008                     	;# 
   215     0009                     	;# 
   216     000A                     	;# 
   217     000B                     	;# 
   218     000C                     	;# 
   219     000D                     	;# 
   220     0011                     	;# 
   221     0012                     	;# 
   222     0015                     	;# 
   223     0016                     	;# 
   224     0016                     	;# 
   225     0017                     	;# 
   226     0018                     	;# 
   227     0019                     	;# 
   228     001A                     	;# 
   229     001B                     	;# 
   230     001C                     	;# 
   231     001E                     	;# 
   232     001F                     	;# 
   233     008C                     	;# 
   234     008D                     	;# 
   235     0091                     	;# 
   236     0092                     	;# 
   237     0095                     	;# 
   238     0096                     	;# 
   239     0097                     	;# 
   240     0098                     	;# 
   241     0099                     	;# 
   242     009A                     	;# 
   243     009B                     	;# 
   244     009B                     	;# 
   245     009C                     	;# 
   246     009D                     	;# 
   247     009E                     	;# 
   248     010C                     	;# 
   249     010D                     	;# 
   250     0111                     	;# 
   251     0112                     	;# 
   252     0113                     	;# 
   253     0114                     	;# 
   254     0115                     	;# 
   255     0116                     	;# 
   256     0117                     	;# 
   257     0118                     	;# 
   258     0119                     	;# 
   259     011A                     	;# 
   260     011B                     	;# 
   261     011D                     	;# 
   262     011E                     	;# 
   263     018C                     	;# 
   264     018D                     	;# 
   265     0191                     	;# 
   266     0191                     	;# 
   267     0192                     	;# 
   268     0193                     	;# 
   269     0193                     	;# 
   270     0193                     	;# 
   271     0194                     	;# 
   272     0195                     	;# 
   273     0196                     	;# 
   274     0199                     	;# 
   275     019A                     	;# 
   276     019B                     	;# 
   277     019B                     	;# 
   278     019B                     	;# 
   279     019B                     	;# 
   280     019C                     	;# 
   281     019C                     	;# 
   282     019D                     	;# 
   283     019E                     	;# 
   284     019F                     	;# 
   285     020C                     	;# 
   286     020D                     	;# 
   287     0211                     	;# 
   288     0211                     	;# 
   289     0212                     	;# 
   290     0212                     	;# 
   291     0213                     	;# 
   292     0213                     	;# 
   293     0214                     	;# 
   294     0214                     	;# 
   295     0215                     	;# 
   296     0215                     	;# 
   297     0215                     	;# 
   298     0216                     	;# 
   299     0216                     	;# 
   300     0217                     	;# 
   301     0217                     	;# 
   302     0291                     	;# 
   303     0291                     	;# 
   304     0292                     	;# 
   305     0293                     	;# 
   306     0294                     	;# 
   307     0295                     	;# 
   308     0295                     	;# 
   309     0296                     	;# 
   310     0394                     	;# 
   311     0395                     	;# 
   312     0396                     	;# 
   313     039A                     	;# 
   314     039C                     	;# 
   315     039D                     	;# 
   316     039E                     	;# 
   317     039F                     	;# 
   318     0FE4                     	;# 
   319     0FE5                     	;# 
   320     0FE6                     	;# 
   321     0FE7                     	;# 
   322     0FE8                     	;# 
   323     0FE9                     	;# 
   324     0FEA                     	;# 
   325     0FEB                     	;# 
   326     0FED                     	;# 
   327     0FEE                     	;# 
   328     0FEF                     	;# 
   329     0000                     	;# 
   330     0001                     	;# 
   331     0002                     	;# 
   332     0003                     	;# 
   333     0004                     	;# 
   334     0005                     	;# 
   335     0006                     	;# 
   336     0007                     	;# 
   337     0008                     	;# 
   338     0009                     	;# 
   339     000A                     	;# 
   340     000B                     	;# 
   341     000C                     	;# 
   342     000D                     	;# 
   343     0011                     	;# 
   344     0012                     	;# 
   345     0015                     	;# 
   346     0016                     	;# 
   347     0016                     	;# 
   348     0017                     	;# 
   349     0018                     	;# 
   350     0019                     	;# 
   351     001A                     	;# 
   352     001B                     	;# 
   353     001C                     	;# 
   354     001E                     	;# 
   355     001F                     	;# 
   356     008C                     	;# 
   357     008D                     	;# 
   358     0091                     	;# 
   359     0092                     	;# 
   360     0095                     	;# 
   361     0096                     	;# 
   362     0097                     	;# 
   363     0098                     	;# 
   364     0099                     	;# 
   365     009A                     	;# 
   366     009B                     	;# 
   367     009B                     	;# 
   368     009C                     	;# 
   369     009D                     	;# 
   370     009E                     	;# 
   371     010C                     	;# 
   372     010D                     	;# 
   373     0111                     	;# 
   374     0112                     	;# 
   375     0113                     	;# 
   376     0114                     	;# 
   377     0115                     	;# 
   378     0116                     	;# 
   379     0117                     	;# 
   380     0118                     	;# 
   381     0119                     	;# 
   382     011A                     	;# 
   383     011B                     	;# 
   384     011D                     	;# 
   385     011E                     	;# 
   386     018C                     	;# 
   387     018D                     	;# 
   388     0191                     	;# 
   389     0191                     	;# 
   390     0192                     	;# 
   391     0193                     	;# 
   392     0193                     	;# 
   393     0193                     	;# 
   394     0194                     	;# 
   395     0195                     	;# 
   396     0196                     	;# 
   397     0199                     	;# 
   398     019A                     	;# 
   399     019B                     	;# 
   400     019B                     	;# 
   401     019B                     	;# 
   402     019B                     	;# 
   403     019C                     	;# 
   404     019C                     	;# 
   405     019D                     	;# 
   406     019E                     	;# 
   407     019F                     	;# 
   408     020C                     	;# 
   409     020D                     	;# 
   410     0211                     	;# 
   411     0211                     	;# 
   412     0212                     	;# 
   413     0212                     	;# 
   414     0213                     	;# 
   415     0213                     	;# 
   416     0214                     	;# 
   417     0214                     	;# 
   418     0215                     	;# 
   419     0215                     	;# 
   420     0215                     	;# 
   421     0216                     	;# 
   422     0216                     	;# 
   423     0217                     	;# 
   424     0217                     	;# 
   425     0291                     	;# 
   426     0291                     	;# 
   427     0292                     	;# 
   428     0293                     	;# 
   429     0294                     	;# 
   430     0295                     	;# 
   431     0295                     	;# 
   432     0296                     	;# 
   433     0394                     	;# 
   434     0395                     	;# 
   435     0396                     	;# 
   436     039A                     	;# 
   437     039C                     	;# 
   438     039D                     	;# 
   439     039E                     	;# 
   440     039F                     	;# 
   441     0FE4                     	;# 
   442     0FE5                     	;# 
   443     0FE6                     	;# 
   444     0FE7                     	;# 
   445     0FE8                     	;# 
   446     0FE9                     	;# 
   447     0FEA                     	;# 
   448     0FEB                     	;# 
   449     0FED                     	;# 
   450     0FEE                     	;# 
   451     0FEF                     	;# 
   452     0000                     	;# 
   453     0001                     	;# 
   454     0002                     	;# 
   455     0003                     	;# 
   456     0004                     	;# 
   457     0005                     	;# 
   458     0006                     	;# 
   459     0007                     	;# 
   460     0008                     	;# 
   461     0009                     	;# 
   462     000A                     	;# 
   463     000B                     	;# 
   464     000C                     	;# 
   465     000D                     	;# 
   466     0011                     	;# 
   467     0012                     	;# 
   468     0015                     	;# 
   469     0016                     	;# 
   470     0016                     	;# 
   471     0017                     	;# 
   472     0018                     	;# 
   473     0019                     	;# 
   474     001A                     	;# 
   475     001B                     	;# 
   476     001C                     	;# 
   477     001E                     	;# 
   478     001F                     	;# 
   479     008C                     	;# 
   480     008D                     	;# 
   481     0091                     	;# 
   482     0092                     	;# 
   483     0095                     	;# 
   484     0096                     	;# 
   485     0097                     	;# 
   486     0098                     	;# 
   487     0099                     	;# 
   488     009A                     	;# 
   489     009B                     	;# 
   490     009B                     	;# 
   491     009C                     	;# 
   492     009D                     	;# 
   493     009E                     	;# 
   494     010C                     	;# 
   495     010D                     	;# 
   496     0111                     	;# 
   497     0112                     	;# 
   498     0113                     	;# 
   499     0114                     	;# 
   500     0115                     	;# 
   501     0116                     	;# 
   502     0117                     	;# 
   503     0118                     	;# 
   504     0119                     	;# 
   505     011A                     	;# 
   506     011B                     	;# 
   507     011D                     	;# 
   508     011E                     	;# 
   509     018C                     	;# 
   510     018D                     	;# 
   511     0191                     	;# 
   512     0191                     	;# 
   513     0192                     	;# 
   514     0193                     	;# 
   515     0193                     	;# 
   516     0193                     	;# 
   517     0194                     	;# 
   518     0195                     	;# 
   519     0196                     	;# 
   520     0199                     	;# 
   521     019A                     	;# 
   522     019B                     	;# 
   523     019B                     	;# 
   524     019B                     	;# 
   525     019B                     	;# 
   526     019C                     	;# 
   527     019C                     	;# 
   528     019D                     	;# 
   529     019E                     	;# 
   530     019F                     	;# 
   531     020C                     	;# 
   532     020D                     	;# 
   533     0211                     	;# 
   534     0211                     	;# 
   535     0212                     	;# 
   536     0212                     	;# 
   537     0213                     	;# 
   538     0213                     	;# 
   539     0214                     	;# 
   540     0214                     	;# 
   541     0215                     	;# 
   542     0215                     	;# 
   543     0215                     	;# 
   544     0216                     	;# 
   545     0216                     	;# 
   546     0217                     	;# 
   547     0217                     	;# 
   548     0291                     	;# 
   549     0291                     	;# 
   550     0292                     	;# 
   551     0293                     	;# 
   552     0294                     	;# 
   553     0295                     	;# 
   554     0295                     	;# 
   555     0296                     	;# 
   556     0394                     	;# 
   557     0395                     	;# 
   558     0396                     	;# 
   559     039A                     	;# 
   560     039C                     	;# 
   561     039D                     	;# 
   562     039E                     	;# 
   563     039F                     	;# 
   564     0FE4                     	;# 
   565     0FE5                     	;# 
   566     0FE6                     	;# 
   567     0FE7                     	;# 
   568     0FE8                     	;# 
   569     0FE9                     	;# 
   570     0FEA                     	;# 
   571     0FEB                     	;# 
   572     0FED                     	;# 
   573     0FEE                     	;# 
   574     0FEF                     	;# 
   575     0000                     	;# 
   576     0001                     	;# 
   577     0002                     	;# 
   578     0003                     	;# 
   579     0004                     	;# 
   580     0005                     	;# 
   581     0006                     	;# 
   582     0007                     	;# 
   583     0008                     	;# 
   584     0009                     	;# 
   585     000A                     	;# 
   586     000B                     	;# 
   587     000C                     	;# 
   588     000D                     	;# 
   589     0011                     	;# 
   590     0012                     	;# 
   591     0015                     	;# 
   592     0016                     	;# 
   593     0016                     	;# 
   594     0017                     	;# 
   595     0018                     	;# 
   596     0019                     	;# 
   597     001A                     	;# 
   598     001B                     	;# 
   599     001C                     	;# 
   600     001E                     	;# 
   601     001F                     	;# 
   602     008C                     	;# 
   603     008D                     	;# 
   604     0091                     	;# 
   605     0092                     	;# 
   606     0095                     	;# 
   607     0096                     	;# 
   608     0097                     	;# 
   609     0098                     	;# 
   610     0099                     	;# 
   611     009A                     	;# 
   612     009B                     	;# 
   613     009B                     	;# 
   614     009C                     	;# 
   615     009D                     	;# 
   616     009E                     	;# 
   617     010C                     	;# 
   618     010D                     	;# 
   619     0111                     	;# 
   620     0112                     	;# 
   621     0113                     	;# 
   622     0114                     	;# 
   623     0115                     	;# 
   624     0116                     	;# 
   625     0117                     	;# 
   626     0118                     	;# 
   627     0119                     	;# 
   628     011A                     	;# 
   629     011B                     	;# 
   630     011D                     	;# 
   631     011E                     	;# 
   632     018C                     	;# 
   633     018D                     	;# 
   634     0191                     	;# 
   635     0191                     	;# 
   636     0192                     	;# 
   637     0193                     	;# 
   638     0193                     	;# 
   639     0193                     	;# 
   640     0194                     	;# 
   641     0195                     	;# 
   642     0196                     	;# 
   643     0199                     	;# 
   644     019A                     	;# 
   645     019B                     	;# 
   646     019B                     	;# 
   647     019B                     	;# 
   648     019B                     	;# 
   649     019C                     	;# 
   650     019C                     	;# 
   651     019D                     	;# 
   652     019E                     	;# 
   653     019F                     	;# 
   654     020C                     	;# 
   655     020D                     	;# 
   656     0211                     	;# 
   657     0211                     	;# 
   658     0212                     	;# 
   659     0212                     	;# 
   660     0213                     	;# 
   661     0213                     	;# 
   662     0214                     	;# 
   663     0214                     	;# 
   664     0215                     	;# 
   665     0215                     	;# 
   666     0215                     	;# 
   667     0216                     	;# 
   668     0216                     	;# 
   669     0217                     	;# 
   670     0217                     	;# 
   671     0291                     	;# 
   672     0291                     	;# 
   673     0292                     	;# 
   674     0293                     	;# 
   675     0294                     	;# 
   676     0295                     	;# 
   677     0295                     	;# 
   678     0296                     	;# 
   679     0394                     	;# 
   680     0395                     	;# 
   681     0396                     	;# 
   682     039A                     	;# 
   683     039C                     	;# 
   684     039D                     	;# 
   685     039E                     	;# 
   686     039F                     	;# 
   687     0FE4                     	;# 
   688     0FE5                     	;# 
   689     0FE6                     	;# 
   690     0FE7                     	;# 
   691     0FE8                     	;# 
   692     0FE9                     	;# 
   693     0FEA                     	;# 
   694     0FEB                     	;# 
   695     0FED                     	;# 
   696     0FEE                     	;# 
   697     0FEF                     	;# 
   698     0000                     	;# 
   699     0001                     	;# 
   700     0002                     	;# 
   701     0003                     	;# 
   702     0004                     	;# 
   703     0005                     	;# 
   704     0006                     	;# 
   705     0007                     	;# 
   706     0008                     	;# 
   707     0009                     	;# 
   708     000A                     	;# 
   709     000B                     	;# 
   710     000C                     	;# 
   711     000D                     	;# 
   712     0011                     	;# 
   713     0012                     	;# 
   714     0015                     	;# 
   715     0016                     	;# 
   716     0016                     	;# 
   717     0017                     	;# 
   718     0018                     	;# 
   719     0019                     	;# 
   720     001A                     	;# 
   721     001B                     	;# 
   722     001C                     	;# 
   723     001E                     	;# 
   724     001F                     	;# 
   725     008C                     	;# 
   726     008D                     	;# 
   727     0091                     	;# 
   728     0092                     	;# 
   729     0095                     	;# 
   730     0096                     	;# 
   731     0097                     	;# 
   732     0098                     	;# 
   733     0099                     	;# 
   734     009A                     	;# 
   735     009B                     	;# 
   736     009B                     	;# 
   737     009C                     	;# 
   738     009D                     	;# 
   739     009E                     	;# 
   740     010C                     	;# 
   741     010D                     	;# 
   742     0111                     	;# 
   743     0112                     	;# 
   744     0113                     	;# 
   745     0114                     	;# 
   746     0115                     	;# 
   747     0116                     	;# 
   748     0117                     	;# 
   749     0118                     	;# 
   750     0119                     	;# 
   751     011A                     	;# 
   752     011B                     	;# 
   753     011D                     	;# 
   754     011E                     	;# 
   755     018C                     	;# 
   756     018D                     	;# 
   757     0191                     	;# 
   758     0191                     	;# 
   759     0192                     	;# 
   760     0193                     	;# 
   761     0193                     	;# 
   762     0193                     	;# 
   763     0194                     	;# 
   764     0195                     	;# 
   765     0196                     	;# 
   766     0199                     	;# 
   767     019A                     	;# 
   768     019B                     	;# 
   769     019B                     	;# 
   770     019B                     	;# 
   771     019B                     	;# 
   772     019C                     	;# 
   773     019C                     	;# 
   774     019D                     	;# 
   775     019E                     	;# 
   776     019F                     	;# 
   777     020C                     	;# 
   778     020D                     	;# 
   779     0211                     	;# 
   780     0211                     	;# 
   781     0212                     	;# 
   782     0212                     	;# 
   783     0213                     	;# 
   784     0213                     	;# 
   785     0214                     	;# 
   786     0214                     	;# 
   787     0215                     	;# 
   788     0215                     	;# 
   789     0215                     	;# 
   790     0216                     	;# 
   791     0216                     	;# 
   792     0217                     	;# 
   793     0217                     	;# 
   794     0291                     	;# 
   795     0291                     	;# 
   796     0292                     	;# 
   797     0293                     	;# 
   798     0294                     	;# 
   799     0295                     	;# 
   800     0295                     	;# 
   801     0296                     	;# 
   802     0394                     	;# 
   803     0395                     	;# 
   804     0396                     	;# 
   805     039A                     	;# 
   806     039C                     	;# 
   807     039D                     	;# 
   808     039E                     	;# 
   809     039F                     	;# 
   810     0FE4                     	;# 
   811     0FE5                     	;# 
   812     0FE6                     	;# 
   813     0FE7                     	;# 
   814     0FE8                     	;# 
   815     0FE9                     	;# 
   816     0FEA                     	;# 
   817     0FEB                     	;# 
   818     0FED                     	;# 
   819     0FEE                     	;# 
   820     0FEF                     	;# 
   821     0000                     	;# 
   822     0001                     	;# 
   823     0002                     	;# 
   824     0003                     	;# 
   825     0004                     	;# 
   826     0005                     	;# 
   827     0006                     	;# 
   828     0007                     	;# 
   829     0008                     	;# 
   830     0009                     	;# 
   831     000A                     	;# 
   832     000B                     	;# 
   833     000C                     	;# 
   834     000D                     	;# 
   835     0011                     	;# 
   836     0012                     	;# 
   837     0015                     	;# 
   838     0016                     	;# 
   839     0016                     	;# 
   840     0017                     	;# 
   841     0018                     	;# 
   842     0019                     	;# 
   843     001A                     	;# 
   844     001B                     	;# 
   845     001C                     	;# 
   846     001E                     	;# 
   847     001F                     	;# 
   848     008C                     	;# 
   849     008D                     	;# 
   850     0091                     	;# 
   851     0092                     	;# 
   852     0095                     	;# 
   853     0096                     	;# 
   854     0097                     	;# 
   855     0098                     	;# 
   856     0099                     	;# 
   857     009A                     	;# 
   858     009B                     	;# 
   859     009B                     	;# 
   860     009C                     	;# 
   861     009D                     	;# 
   862     009E                     	;# 
   863     010C                     	;# 
   864     010D                     	;# 
   865     0111                     	;# 
   866     0112                     	;# 
   867     0113                     	;# 
   868     0114                     	;# 
   869     0115                     	;# 
   870     0116                     	;# 
   871     0117                     	;# 
   872     0118                     	;# 
   873     0119                     	;# 
   874     011A                     	;# 
   875     011B                     	;# 
   876     011D                     	;# 
   877     011E                     	;# 
   878     018C                     	;# 
   879     018D                     	;# 
   880     0191                     	;# 
   881     0191                     	;# 
   882     0192                     	;# 
   883     0193                     	;# 
   884     0193                     	;# 
   885     0193                     	;# 
   886     0194                     	;# 
   887     0195                     	;# 
   888     0196                     	;# 
   889     0199                     	;# 
   890     019A                     	;# 
   891     019B                     	;# 
   892     019B                     	;# 
   893     019B                     	;# 
   894     019B                     	;# 
   895     019C                     	;# 
   896     019C                     	;# 
   897     019D                     	;# 
   898     019E                     	;# 
   899     019F                     	;# 
   900     020C                     	;# 
   901     020D                     	;# 
   902     0211                     	;# 
   903     0211                     	;# 
   904     0212                     	;# 
   905     0212                     	;# 
   906     0213                     	;# 
   907     0213                     	;# 
   908     0214                     	;# 
   909     0214                     	;# 
   910     0215                     	;# 
   911     0215                     	;# 
   912     0215                     	;# 
   913     0216                     	;# 
   914     0216                     	;# 
   915     0217                     	;# 
   916     0217                     	;# 
   917     0291                     	;# 
   918     0291                     	;# 
   919     0292                     	;# 
   920     0293                     	;# 
   921     0294                     	;# 
   922     0295                     	;# 
   923     0295                     	;# 
   924     0296                     	;# 
   925     0394                     	;# 
   926     0395                     	;# 
   927     0396                     	;# 
   928     039A                     	;# 
   929     039C                     	;# 
   930     039D                     	;# 
   931     039E                     	;# 
   932     039F                     	;# 
   933     0FE4                     	;# 
   934     0FE5                     	;# 
   935     0FE6                     	;# 
   936     0FE7                     	;# 
   937     0FE8                     	;# 
   938     0FE9                     	;# 
   939     0FEA                     	;# 
   940     0FEB                     	;# 
   941     0FED                     	;# 
   942     0FEE                     	;# 
   943     0FEF                     	;# 
   944                           
   945 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
   946     0000                     
   947 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
   948     0000                     
   949 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
   950     0000                     
   951                           	psect	idataCOMMON
   952     042B                     __pidataCOMMON:
   953                           
   954                           ;initializer for _column
   955     042B  3402               	retlw	2
   956                           
   957                           	psect	idataBANK1
   958     024E                     __pidataBANK1:
   959                           
   960                           ;initializer for _ZeroChar
   961     024E  3400               	retlw	0
   962     024F  3401               	retlw	1
   963     0250  3401               	retlw	1
   964     0251  3401               	retlw	1
   965     0252  3401               	retlw	1
   966     0253  3400               	retlw	0
   967     0254  3401               	retlw	1
   968     0255  3400               	retlw	0
   969     0256  3400               	retlw	0
   970     0257  3400               	retlw	0
   971     0258  3400               	retlw	0
   972     0259  3401               	retlw	1
   973     025A  3401               	retlw	1
   974     025B  3400               	retlw	0
   975     025C  3400               	retlw	0
   976     025D  3400               	retlw	0
   977     025E  3400               	retlw	0
   978     025F  3401               	retlw	1
   979     0260  3401               	retlw	1
   980     0261  3400               	retlw	0
   981     0262  3400               	retlw	0
   982     0263  3400               	retlw	0
   983     0264  3400               	retlw	0
   984     0265  3401               	retlw	1
   985     0266  3401               	retlw	1
   986     0267  3400               	retlw	0
   987     0268  3400               	retlw	0
   988     0269  3400               	retlw	0
   989     026A  3400               	retlw	0
   990     026B  3401               	retlw	1
   991     026C  3401               	retlw	1
   992     026D  3400               	retlw	0
   993     026E  3400               	retlw	0
   994     026F  3400               	retlw	0
   995     0270  3400               	retlw	0
   996     0271  3401               	retlw	1
   997     0272  3401               	retlw	1
   998     0273  3400               	retlw	0
   999     0274  3400               	retlw	0
  1000     0275  3400               	retlw	0
  1001     0276  3400               	retlw	0
  1002     0277  3401               	retlw	1
  1003     0278  3400               	retlw	0
  1004     0279  3401               	retlw	1
  1005     027A  3401               	retlw	1
  1006     027B  3401               	retlw	1
  1007     027C  3401               	retlw	1
  1008     027D  3400               	retlw	0
  1009                           
  1010                           	psect	idataBANK2
  1011     027E                     __pidataBANK2:
  1012                           
  1013                           ;initializer for _OneChar
  1014     027E  3400               	retlw	0
  1015     027F  3400               	retlw	0
  1016     0280  3400               	retlw	0
  1017     0281  3401               	retlw	1
  1018     0282  3400               	retlw	0
  1019     0283  3400               	retlw	0
  1020     0284  3400               	retlw	0
  1021     0285  3400               	retlw	0
  1022     0286  3401               	retlw	1
  1023     0287  3401               	retlw	1
  1024     0288  3400               	retlw	0
  1025     0289  3400               	retlw	0
  1026     028A  3400               	retlw	0
  1027     028B  3401               	retlw	1
  1028     028C  3400               	retlw	0
  1029     028D  3401               	retlw	1
  1030     028E  3400               	retlw	0
  1031     028F  3400               	retlw	0
  1032     0290  3400               	retlw	0
  1033     0291  3400               	retlw	0
  1034     0292  3400               	retlw	0
  1035     0293  3401               	retlw	1
  1036     0294  3400               	retlw	0
  1037     0295  3400               	retlw	0
  1038     0296  3400               	retlw	0
  1039     0297  3400               	retlw	0
  1040     0298  3400               	retlw	0
  1041     0299  3401               	retlw	1
  1042     029A  3400               	retlw	0
  1043     029B  3400               	retlw	0
  1044     029C  3400               	retlw	0
  1045     029D  3400               	retlw	0
  1046     029E  3400               	retlw	0
  1047     029F  3401               	retlw	1
  1048     02A0  3400               	retlw	0
  1049     02A1  3400               	retlw	0
  1050     02A2  3400               	retlw	0
  1051     02A3  3400               	retlw	0
  1052     02A4  3400               	retlw	0
  1053     02A5  3401               	retlw	1
  1054     02A6  3400               	retlw	0
  1055     02A7  3400               	retlw	0
  1056     02A8  3401               	retlw	1
  1057     02A9  3401               	retlw	1
  1058     02AA  3401               	retlw	1
  1059     02AB  3401               	retlw	1
  1060     02AC  3401               	retlw	1
  1061     02AD  3401               	retlw	1
  1062                           
  1063                           	psect	nvBANK0
  1064     004F                     __pnvBANK0:
  1065     004F                     _EUSART_ErrorHandler:
  1066     004F                     	ds	2
  1067     0051                     _EUSART_OverrunErrorHandler:
  1068     0051                     	ds	2
  1069     0053                     _EUSART_FramingErrorHandler:
  1070     0053                     	ds	2
  1071     0055                     _TMR1_InterruptHandler:
  1072     0055                     	ds	2
  1073     000B                     _INTCONbits	set	11
  1074     0019                     _T1GCONbits	set	25
  1075     0018                     _T1CONbits	set	24
  1076     0018                     _T1CON	set	24
  1077     0011                     _PIR1bits	set	17
  1078     0016                     _TMR1L	set	22
  1079     0017                     _TMR1H	set	23
  1080     0019                     _T1GCON	set	25
  1081     0091                     _PIE1bits	set	145
  1082     0097                     _WDTCON	set	151
  1083     0098                     _OSCTUNE	set	152
  1084     0099                     _OSCCON	set	153
  1085     0095                     _OPTION_REGbits	set	149
  1086     008D                     _TRISB	set	141
  1087     008C                     _TRISA	set	140
  1088     0116                     _BORCON	set	278
  1089     011E                     _APFCON1	set	286
  1090     011D                     _APFCON0	set	285
  1091     010D                     _LATB	set	269
  1092     010C                     _LATA	set	268
  1093     019A                     _TXREG	set	410
  1094     0199                     _RCREG	set	409
  1095     019D                     _RCSTAbits	set	413
  1096     019E                     _TXSTAbits	set	414
  1097     019C                     _SPBRGH	set	412
  1098     019B                     _SPBRGL	set	411
  1099     019E                     _TXSTA	set	414
  1100     019D                     _RCSTA	set	413
  1101     019F                     _BAUDCON	set	415
  1102     018C                     _ANSELA	set	396
  1103     018D                     _ANSELB	set	397
  1104     020C                     _WPUA	set	524
  1105     020D                     _WPUB	set	525
  1106                           
  1107                           	psect	stringtext1
  1108     0318                     __pstringtext1:
  1109     0318                     STR_1:
  1110     0318  3444               	retlw	68	;'D'
  1111     0319  3461               	retlw	97	;'a'
  1112     031A  3474               	retlw	116	;'t'
  1113     031B  3461               	retlw	97	;'a'
  1114     031C  3420               	retlw	32	;' '
  1115     031D  3473               	retlw	115	;'s'
  1116     031E  3474               	retlw	116	;'t'
  1117     031F  346F               	retlw	111	;'o'
  1118     0320  3472               	retlw	114	;'r'
  1119     0321  3465               	retlw	101	;'e'
  1120     0322  3464               	retlw	100	;'d'
  1121     0323  3420               	retlw	32	;' '
  1122     0324  3469               	retlw	105	;'i'
  1123     0325  346E               	retlw	110	;'n'
  1124     0326  3420               	retlw	32	;' '
  1125     0327  3443               	retlw	67	;'C'
  1126     0328  346F               	retlw	111	;'o'
  1127     0329  346C               	retlw	108	;'l'
  1128     032A  3475               	retlw	117	;'u'
  1129     032B  346D               	retlw	109	;'m'
  1130     032C  346E               	retlw	110	;'n'
  1131     032D  3420               	retlw	32	;' '
  1132     032E  347A               	retlw	122	;'z'
  1133     032F  3465               	retlw	101	;'e'
  1134     0330  3472               	retlw	114	;'r'
  1135     0331  346F               	retlw	111	;'o'
  1136     0332  343A               	retlw	58	;':'
  1137     0333  3420               	retlw	32	;' '
  1138     0334  3425               	retlw	37	;'%'
  1139     0335  3464               	retlw	100	;'d'
  1140     0336  340A               	retlw	10
  1141     0337  3400               	retlw	0
  1142                           
  1143                           	psect	stringtext2
  1144     0000                     __pstringtext2:
  1145                           
  1146                           	psect	cinit
  1147     001A                     start_initialization:	
  1148                           ; #config settings
  1149                           
  1150     001A                     __initialization:
  1151                           
  1152                           ; Initialize objects allocated to COMMON
  1153     001A  3184  242B  3180   	fcall	__pidataCOMMON	;fetch initializer
  1154     001D  00FA               	movwf	__pdataCOMMON& (0+127)
  1155                           
  1156                           ; Initialize objects allocated to BANK1
  1157     001E  304E               	movlw	low __pidataBANK1
  1158     001F  0084               	movwf	4
  1159     0020  3082               	movlw	(high __pidataBANK1)| (0+128)
  1160     0021  0085               	movwf	5
  1161     0022  30A0               	movlw	low __pdataBANK1
  1162     0023  0086               	movwf	6
  1163     0024  3000               	movlw	high __pdataBANK1
  1164     0025  0087               	movwf	7
  1165     0026  3030               	movlw	48
  1166     0027  3184  2403  3180   	fcall	init_ram
  1167                           
  1168                           ; Initialize objects allocated to BANK2
  1169     002A  307E               	movlw	low __pidataBANK2
  1170     002B  0084               	movwf	4
  1171     002C  3082               	movlw	(high __pidataBANK2)| (0+128)
  1172     002D  0085               	movwf	5
  1173     002E  3020               	movlw	low __pdataBANK2
  1174     002F  0086               	movwf	6
  1175     0030  3001               	movlw	high __pdataBANK2
  1176     0031  0087               	movwf	7
  1177     0032  3030               	movlw	48
  1178     0033  3184  2403  3180   	fcall	init_ram
  1179                           
  1180                           ; Clear objects allocated to COMMON
  1181     0036  01F8               	clrf	__pbssCOMMON& (0+127)
  1182     0037  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1183                           
  1184                           ; Clear objects allocated to BANK0
  1185     0038  3046               	movlw	low __pbssBANK0
  1186     0039  0084               	movwf	4
  1187     003A  3000               	movlw	high __pbssBANK0
  1188     003B  0085               	movwf	5
  1189     003C  3009               	movlw	9
  1190     003D  3184  2409  3180   	fcall	clear_ram0
  1191                           
  1192                           ; Clear objects allocated to BANK1
  1193     0040  30D0               	movlw	low __pbssBANK1
  1194     0041  0084               	movwf	4
  1195     0042  3000               	movlw	high __pbssBANK1
  1196     0043  0085               	movwf	5
  1197     0044  3020               	movlw	32
  1198     0045  3184  2409  3180   	fcall	clear_ram0
  1199     0048                     end_of_initialization:	
  1200                           ;End of C runtime variable initialization code
  1201                           
  1202     0048                     __end_of__initialization:
  1203     0048  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1204     0049  0020               	movlb	0
  1205     004A  2AD3               	ljmp	_main	;jump to C main() function
  1206                           
  1207                           	psect	bssCOMMON
  1208     0078                     __pbssCOMMON:
  1209     0078                     _NewDataFlag:
  1210     0078                     	ds	1
  1211     0079                     _eusartRxLastError:
  1212     0079                     	ds	1
  1213                           
  1214                           	psect	dataCOMMON
  1215     007A                     __pdataCOMMON:
  1216     007A                     _column:
  1217     007A                     	ds	1
  1218                           
  1219                           	psect	bssBANK0
  1220     0046                     __pbssBANK0:
  1221     0046                     _width:
  1222     0046                     	ds	2
  1223     0048                     _prec:
  1224     0048                     	ds	2
  1225     004A                     _timer1ReloadVal:
  1226     004A                     	ds	2
  1227     004C                     _flags:
  1228     004C                     	ds	1
  1229     004D                     _CommonLine:
  1230     004D                     	ds	1
  1231     004E                     _AccessLine:
  1232     004E                     	ds	1
  1233                           
  1234                           	psect	bssBANK1
  1235     00D0                     __pbssBANK1:
  1236     00D0                     _dbuf:
  1237     00D0                     	ds	32
  1238                           
  1239                           	psect	dataBANK1
  1240     00A0                     __pdataBANK1:
  1241     00A0                     _ZeroChar:
  1242     00A0                     	ds	48
  1243                           
  1244                           	psect	dataBANK2
  1245     0120                     __pdataBANK2:
  1246     0120                     _OneChar:
  1247     0120                     	ds	48
  1248                           
  1249                           	psect	inittext
  1250     0403                     init_ram:
  1251     0403  00FE               	movwf	btemp
  1252     0404                     initloop:
  1253     0404  0012               	moviw fsr0++
  1254     0405  001E               	movwi fsr1++
  1255     0406  0BFE               	decfsz	btemp,f
  1256     0407  2C04               	goto	initloop
  1257     0408  3400               	retlw	0
  1258                           
  1259                           	psect	clrtext
  1260     0409                     clear_ram0:	
  1261                           ;	Called with FSR0 containing the base address, and
  1262                           ;	WREG with the size to clear
  1263                           
  1264     0409  0064               	clrwdt	;clear the watchdog before getting into this loop
  1265     040A                     clrloop0:
  1266     040A  0180               	clrf	0	;clear RAM location pointed to by FSR
  1267     040B  3101               	addfsr 0,1
  1268     040C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1269     040D  2C0A               	goto	clrloop0	;have we reached the end yet?
  1270     040E  3400               	retlw	0	;all done for this memory range, return
  1271                           
  1272                           	psect	cstackCOMMON
  1273     0070                     __pcstackCOMMON:
  1274     0070                     ?_OSCILLATOR_Initialize:
  1275     0070                     ?_WDT_Initialize:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278     0070                     ?_TMR1_Initialize:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281     0070                     ?_EUSART_Initialize:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284     0070                     ?_TMR1_DefaultInterruptHandler:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287     0070                     ??_TMR1_DefaultInterruptHandler:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290     0070                     ?_TMR1_ISR:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293     0070                     ?_putch:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296     0070                     ?_PIN_MANAGER_Initialize:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299     0070                     ?_SYSTEM_Initialize:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302     0070                     ?_TMR1_WriteTimer:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305     0070                     ?_INTERRUPT_InterruptManager:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308     0070                     ?_main:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311     0070                     putch@c:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314     0070                     TMR1_WriteTimer@timerVal:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317                           
  1318                           ; 2 bytes @ 0x0
  1319     0070                     	ds	2
  1320     0072                     ??_TMR1_ISR:
  1321     0072                     ??_TMR1_WriteTimer:	
  1322                           ; 1 bytes @ 0x2
  1323                           
  1324                           
  1325                           ; 1 bytes @ 0x2
  1326     0072                     	ds	1
  1327     0073                     ??_OSCILLATOR_Initialize:
  1328     0073                     ??_WDT_Initialize:	
  1329                           ; 1 bytes @ 0x3
  1330                           
  1331     0073                     ?_TMR1_SetInterruptHandler:	
  1332                           ; 1 bytes @ 0x3
  1333                           
  1334     0073                     ?_EUSART_SetFramingErrorHandler:	
  1335                           ; 1 bytes @ 0x3
  1336                           
  1337     0073                     ?_EUSART_SetOverrunErrorHandler:	
  1338                           ; 1 bytes @ 0x3
  1339                           
  1340     0073                     ?_EUSART_SetErrorHandler:	
  1341                           ; 1 bytes @ 0x3
  1342                           
  1343     0073                     ??_putch:	
  1344                           ; 1 bytes @ 0x3
  1345                           
  1346     0073                     ??_PIN_MANAGER_Initialize:	
  1347                           ; 1 bytes @ 0x3
  1348                           
  1349     0073                     ??_INTERRUPT_InterruptManager:	
  1350                           ; 1 bytes @ 0x3
  1351                           
  1352     0073                     ?___bmul:	
  1353                           ; 1 bytes @ 0x3
  1354                           
  1355     0073                     ?_fputc:	
  1356                           ; 1 bytes @ 0x3
  1357                           
  1358     0073                     ?___awdiv:	
  1359                           ; 2 bytes @ 0x3
  1360                           
  1361     0073                     ?___awmod:	
  1362                           ; 2 bytes @ 0x3
  1363                           
  1364     0073                     ___bmul@multiplicand:	
  1365                           ; 2 bytes @ 0x3
  1366                           
  1367     0073                     TMR1_SetInterruptHandler@InterruptHandler:	
  1368                           ; 1 bytes @ 0x3
  1369                           
  1370     0073                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1371                           ; 2 bytes @ 0x3
  1372                           
  1373     0073                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1374                           ; 2 bytes @ 0x3
  1375                           
  1376     0073                     EUSART_SetErrorHandler@interruptHandler:	
  1377                           ; 2 bytes @ 0x3
  1378                           
  1379     0073                     ___awdiv@divisor:	
  1380                           ; 2 bytes @ 0x3
  1381                           
  1382     0073                     ___awmod@divisor:	
  1383                           ; 2 bytes @ 0x3
  1384                           
  1385     0073                     fputc@c:	
  1386                           ; 2 bytes @ 0x3
  1387                           
  1388                           
  1389                           ; 2 bytes @ 0x3
  1390     0073                     	ds	1
  1391     0074                     ??___bmul:
  1392                           
  1393                           ; 1 bytes @ 0x4
  1394     0074                     	ds	1
  1395     0075                     ??_TMR1_Initialize:
  1396     0075                     ??_EUSART_Initialize:	
  1397                           ; 1 bytes @ 0x5
  1398                           
  1399     0075                     ??_TMR1_SetInterruptHandler:	
  1400                           ; 1 bytes @ 0x5
  1401                           
  1402     0075                     ??_EUSART_SetFramingErrorHandler:	
  1403                           ; 1 bytes @ 0x5
  1404                           
  1405     0075                     ??_EUSART_SetOverrunErrorHandler:	
  1406                           ; 1 bytes @ 0x5
  1407                           
  1408     0075                     ??_EUSART_SetErrorHandler:	
  1409                           ; 1 bytes @ 0x5
  1410                           
  1411     0075                     ??_SYSTEM_Initialize:	
  1412                           ; 1 bytes @ 0x5
  1413                           
  1414     0075                     ___bmul@product:	
  1415                           ; 1 bytes @ 0x5
  1416                           
  1417     0075                     ___awdiv@dividend:	
  1418                           ; 1 bytes @ 0x5
  1419                           
  1420     0075                     ___awmod@dividend:	
  1421                           ; 2 bytes @ 0x5
  1422                           
  1423     0075                     fputc@fp:	
  1424                           ; 2 bytes @ 0x5
  1425                           
  1426                           
  1427                           ; 2 bytes @ 0x5
  1428     0075                     	ds	1
  1429     0076                     ___bmul@multiplier:
  1430                           
  1431                           ; 1 bytes @ 0x6
  1432     0076                     	ds	1
  1433     0077                     ?_ComLn_Extract_Data:
  1434     0077                     ??___awdiv:	
  1435                           ; 1 bytes @ 0x7
  1436                           
  1437     0077                     ??___awmod:	
  1438                           ; 1 bytes @ 0x7
  1439                           
  1440     0077                     ComLn_Extract_Data@Character:	
  1441                           ; 1 bytes @ 0x7
  1442                           
  1443                           
  1444                           ; 1 bytes @ 0x7
  1445     0077                     	ds	1
  1446     0078                     ??_printf:
  1447                           
  1448                           	psect	cstackBANK0
  1449     0020                     __pcstackBANK0:	
  1450                           ; 1 bytes @ 0x8
  1451                           
  1452     0020                     ??_fputc:
  1453     0020                     ??_ComLn_Extract_Data:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456     0020                     ___awdiv@counter:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459     0020                     ___awmod@counter:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462                           
  1463                           ; 1 bytes @ 0x0
  1464     0020                     	ds	1
  1465     0021                     ___awdiv@sign:
  1466     0021                     ___awmod@sign:	
  1467                           ; 1 bytes @ 0x1
  1468                           
  1469                           
  1470                           ; 1 bytes @ 0x1
  1471     0021                     	ds	1
  1472     0022                     ?_abs:
  1473     0022                     ComLn_Extract_Data@Column:	
  1474                           ; 2 bytes @ 0x2
  1475                           
  1476     0022                     ___awdiv@quotient:	
  1477                           ; 1 bytes @ 0x2
  1478                           
  1479     0022                     abs@a:	
  1480                           ; 2 bytes @ 0x2
  1481                           
  1482                           
  1483                           ; 2 bytes @ 0x2
  1484     0022                     	ds	1
  1485     0023                     ComLn_Extract_Data@ColData:
  1486                           
  1487                           ; 1 bytes @ 0x3
  1488     0023                     	ds	1
  1489     0024                     ??_abs:
  1490     0024                     ComLn_Extract_Data@i:	
  1491                           ; 1 bytes @ 0x4
  1492                           
  1493                           
  1494                           ; 1 bytes @ 0x4
  1495     0024                     	ds	2
  1496     0026                     ?_vfpfcnvrt:
  1497     0026                     vfpfcnvrt@fp:	
  1498                           ; 1 bytes @ 0x6
  1499                           
  1500                           
  1501                           ; 2 bytes @ 0x6
  1502     0026                     	ds	2
  1503     0028                     vfpfcnvrt@fmt:
  1504                           
  1505                           ; 1 bytes @ 0x8
  1506     0028                     	ds	1
  1507     0029                     vfpfcnvrt@ap:
  1508                           
  1509                           ; 1 bytes @ 0x9
  1510     0029                     	ds	1
  1511     002A                     ??_vfpfcnvrt:
  1512                           
  1513                           ; 1 bytes @ 0xA
  1514     002A                     	ds	4
  1515     002E                     vfpfcnvrt@done:
  1516                           
  1517                           ; 1 bytes @ 0xE
  1518     002E                     	ds	1
  1519     002F                     vfpfcnvrt@cp:
  1520                           
  1521                           ; 2 bytes @ 0xF
  1522     002F                     	ds	2
  1523     0031                     vfpfcnvrt@convarg:
  1524                           
  1525                           ; 4 bytes @ 0x11
  1526     0031                     	ds	4
  1527     0035                     vfpfcnvrt@c:
  1528                           
  1529                           ; 1 bytes @ 0x15
  1530     0035                     	ds	1
  1531     0036                     ?_vfprintf:
  1532     0036                     vfprintf@fp:	
  1533                           ; 2 bytes @ 0x16
  1534                           
  1535                           
  1536                           ; 2 bytes @ 0x16
  1537     0036                     	ds	2
  1538     0038                     vfprintf@fmt:
  1539                           
  1540                           ; 2 bytes @ 0x18
  1541     0038                     	ds	2
  1542     003A                     vfprintf@ap:
  1543                           
  1544                           ; 1 bytes @ 0x1A
  1545     003A                     	ds	1
  1546     003B                     ??_vfprintf:
  1547                           
  1548                           ; 1 bytes @ 0x1B
  1549     003B                     	ds	1
  1550     003C                     vfprintf@cfmt:
  1551                           
  1552                           ; 2 bytes @ 0x1C
  1553     003C                     	ds	2
  1554     003E                     ?_printf:
  1555     003E                     printf@fmt:	
  1556                           ; 2 bytes @ 0x1E
  1557                           
  1558                           
  1559                           ; 2 bytes @ 0x1E
  1560     003E                     	ds	4
  1561     0042                     printf@ap:
  1562                           
  1563                           ; 1 bytes @ 0x22
  1564     0042                     	ds	1
  1565     0043                     ??_main:
  1566                           
  1567                           ; 1 bytes @ 0x23
  1568     0043                     	ds	2
  1569     0045                     main@ColData:
  1570                           
  1571                           ; 1 bytes @ 0x25
  1572     0045                     	ds	1
  1573                           
  1574                           	psect	maintext
  1575     02D3                     __pmaintext:	
  1576 ;;
  1577 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1578 ;;
  1579 ;; *************** function _main *****************
  1580 ;; Defined at:
  1581 ;;		line 172 in file "main.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;		None
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  ColData         1   37[BANK0 ] unsigned char 
  1586 ;;  Col             1    0        unsigned char 
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1591 ;; Tracked objects:
  1592 ;;		On entry : B1F/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1596 ;;      Params:         0       0       0       0
  1597 ;;      Locals:         0       1       0       0
  1598 ;;      Temps:          0       2       0       0
  1599 ;;      Totals:         0       3       0       0
  1600 ;;Total ram usage:        3 bytes
  1601 ;; Hardware stack levels required when called: 8
  1602 ;; This function calls:
  1603 ;;		_ComLn_Extract_Data
  1604 ;;		_EUSART_Initialize
  1605 ;;		_SYSTEM_Initialize
  1606 ;;		_TMR1_Initialize
  1607 ;;		_printf
  1608 ;; This function is called by:
  1609 ;;		Startup code after reset
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613     02D3                     _main:	
  1614                           ;psect for function _main
  1615                           
  1616     02D3                     l1801:	
  1617                           ;incstack = 0
  1618                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1619                           
  1620                           
  1621                           ;main.c: 174:     SYSTEM_Initialize();
  1622     02D3  3183  23EC  3182   	fcall	_SYSTEM_Initialize
  1623                           
  1624                           ;main.c: 176:     EUSART_Initialize();
  1625     02D6  3183  2338  3182   	fcall	_EUSART_Initialize
  1626                           
  1627                           ;main.c: 178:     TMR1_Initialize();
  1628     02D9  3183  2376  3182   	fcall	_TMR1_Initialize
  1629     02DC                     l1803:
  1630                           
  1631                           ;main.c: 184:     (INTCONbits.GIE = 1);
  1632     02DC  178B               	bsf	11,7	;volatile
  1633     02DD                     l1805:
  1634                           
  1635                           ;main.c: 187:     (INTCONbits.PEIE = 1);
  1636     02DD  170B               	bsf	11,6	;volatile
  1637     02DE                     l1807:
  1638     02DE                     l1809:
  1639     02DE                     l1811:
  1640                           
  1641                           ;main.c: 199:     ColData = ComLn_Extract_Data(Col, ZeroChar);
  1642     02DE  30A0               	movlw	(low (_ZeroChar| 0))& (0+255)
  1643     02DF  00F7               	movwf	ComLn_Extract_Data@Character
  1644     02E0  3000               	movlw	0
  1645     02E1  3182  22F6  3182   	fcall	_ComLn_Extract_Data
  1646     02E4  0020               	movlb	0	; select bank0
  1647     02E5  00C5               	movwf	main@ColData
  1648     02E6                     l1813:
  1649                           
  1650                           ;main.c: 200:     printf("Data stored in Column zero: %d\n", ColData);
  1651     02E6  3018               	movlw	low (STR_1| (0+32768))
  1652     02E7  00BE               	movwf	printf@fmt
  1653     02E8  3083               	movlw	high (STR_1| (0+32768))
  1654     02E9  00BF               	movwf	printf@fmt+1
  1655     02EA  0845               	movf	main@ColData,w
  1656     02EB  00C3               	movwf	??_main
  1657     02EC  01C4               	clrf	??_main+1
  1658     02ED  0843               	movf	??_main,w
  1659     02EE  00C0               	movwf	?_printf+2
  1660     02EF  0844               	movf	??_main+1,w
  1661     02F0  00C1               	movwf	?_printf+3
  1662     02F1  3183  23DC  3182   	fcall	_printf
  1663     02F4                     l258:	
  1664                           ;main.c: 201:     while (1) {
  1665                           
  1666     02F4                     l259:	
  1667                           ;main.c: 203:     }
  1668                           
  1669     02F4  2AF4               	goto	l258
  1670     02F5  2819               	ljmp	start
  1671     02F6                     __end_of_main:
  1672                           
  1673                           	psect	text1
  1674     03DC                     __ptext1:	
  1675 ;; *************** function _printf *****************
  1676 ;; Defined at:
  1677 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\printf.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  fmt             2   30[BANK0 ] PTR const unsigned char 
  1680 ;;		 -> STR_1(32), 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  ret             2    0        int 
  1683 ;;  ap              1   34[BANK0 ] PTR void [1]
  1684 ;;		 -> ?_printf(2), 
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  2   30[BANK0 ] int 
  1687 ;; Registers used:
  1688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1694 ;;      Params:         0       4       0       0
  1695 ;;      Locals:         0       1       0       0
  1696 ;;      Temps:          0       0       0       0
  1697 ;;      Totals:         0       5       0       0
  1698 ;;Total ram usage:        5 bytes
  1699 ;; Hardware stack levels used: 1
  1700 ;; Hardware stack levels required when called: 7
  1701 ;; This function calls:
  1702 ;;		_vfprintf
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708     03DC                     _printf:	
  1709                           ;psect for function _printf
  1710                           
  1711     03DC                     l1795:	
  1712                           ;incstack = 0
  1713                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1714                           
  1715     03DC  3040               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1716     03DD  0020               	movlb	0	; select bank0
  1717     03DE  00C2               	movwf	printf@ap
  1718     03DF                     l1797:
  1719     03DF  3000               	movlw	0
  1720     03E0  00B6               	movwf	vfprintf@fp
  1721     03E1  00B7               	movwf	vfprintf@fp+1
  1722     03E2  083F               	movf	printf@fmt+1,w
  1723     03E3  00B9               	movwf	vfprintf@fmt+1
  1724     03E4  083E               	movf	printf@fmt,w
  1725     03E5  00B8               	movwf	vfprintf@fmt
  1726     03E6  3042               	movlw	(low (printf@ap| 0))& (0+255)
  1727     03E7  00BA               	movwf	vfprintf@ap
  1728     03E8  3183  2358  3183   	fcall	_vfprintf
  1729     03EB                     l879:
  1730     03EB  0008               	return
  1731     03EC                     __end_of_printf:
  1732                           
  1733                           	psect	text2
  1734     0358                     __ptext2:	
  1735 ;; *************** function _vfprintf *****************
  1736 ;; Defined at:
  1737 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  fp              2   22[BANK0 ] PTR struct _IO_FILE
  1740 ;;		 -> NULL(0), 
  1741 ;;  fmt             2   24[BANK0 ] PTR const unsigned char 
  1742 ;;		 -> STR_1(32), 
  1743 ;;  ap              1   26[BANK0 ] PTR PTR void 
  1744 ;;		 -> printf@ap(1), 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  cfmt            2   28[BANK0 ] PTR unsigned char 
  1747 ;;		 -> STR_1(32), 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  2   22[BANK0 ] int 
  1750 ;; Registers used:
  1751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1757 ;;      Params:         0       5       0       0
  1758 ;;      Locals:         0       2       0       0
  1759 ;;      Temps:          0       1       0       0
  1760 ;;      Totals:         0       8       0       0
  1761 ;;Total ram usage:        8 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 6
  1764 ;; This function calls:
  1765 ;;		_vfpfcnvrt
  1766 ;; This function is called by:
  1767 ;;		_printf
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771     0358                     _vfprintf:	
  1772                           ;psect for function _vfprintf
  1773                           
  1774     0358                     l1769:	
  1775                           ;incstack = 0
  1776                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1777                           
  1778                           
  1779                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1780     0358  0020               	movlb	0	; select bank0
  1781     0359  0839               	movf	vfprintf@fmt+1,w
  1782     035A  00BD               	movwf	vfprintf@cfmt+1
  1783     035B  0838               	movf	vfprintf@fmt,w
  1784     035C  00BC               	movwf	vfprintf@cfmt
  1785                           
  1786                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1787     035D  2B69               	goto	l1773
  1788     035E                     l1771:
  1789                           
  1790                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1791     035E  0837               	movf	vfprintf@fp+1,w
  1792     035F  00A7               	movwf	vfpfcnvrt@fp+1
  1793     0360  0836               	movf	vfprintf@fp,w
  1794     0361  00A6               	movwf	vfpfcnvrt@fp
  1795     0362  303C               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1796     0363  00A8               	movwf	vfpfcnvrt@fmt
  1797     0364  083A               	movf	vfprintf@ap,w
  1798     0365  00A9               	movwf	vfpfcnvrt@ap
  1799     0366  3180  204B  3183   	fcall	_vfpfcnvrt
  1800     0369                     l1773:
  1801                           
  1802                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1803     0369  0020               	movlb	0	; select bank0
  1804     036A  083C               	movf	vfprintf@cfmt,w
  1805     036B  0084               	movwf	4
  1806     036C  083D               	movf	vfprintf@cfmt+1,w
  1807     036D  0085               	movwf	5
  1808     036E  0012               	moviw fsr0++
  1809     036F  1D03               	btfss	3,2
  1810     0370  2B72               	goto	u1191
  1811     0371  2B73               	goto	u1190
  1812     0372                     u1191:
  1813     0372  2B5E               	goto	l1771
  1814     0373                     u1190:
  1815     0373                     l1775:
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1818     0373  01B6               	clrf	?_vfprintf
  1819     0374  01B7               	clrf	?_vfprintf+1
  1820     0375                     l923:
  1821     0375  0008               	return
  1822     0376                     __end_of_vfprintf:
  1823                           
  1824                           	psect	text3
  1825     004B                     __ptext3:	
  1826 ;; *************** function _vfpfcnvrt *****************
  1827 ;; Defined at:
  1828 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  1831 ;;		 -> NULL(0), 
  1832 ;;  fmt             1    8[BANK0 ] PTR PTR unsigned char 
  1833 ;;		 -> vfprintf@cfmt(2), 
  1834 ;;  ap              1    9[BANK0 ] PTR PTR void 
  1835 ;;		 -> printf@ap(1), 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;  convarg         4   17[BANK0 ] struct .
  1838 ;;  cp              2   15[BANK0 ] PTR unsigned char 
  1839 ;;		 -> STR_1(32), 
  1840 ;;  c               1   21[BANK0 ] unsigned char 
  1841 ;;  done            1   14[BANK0 ] _Bool 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1851 ;;      Params:         0       4       0       0
  1852 ;;      Locals:         0       8       0       0
  1853 ;;      Temps:          0       4       0       0
  1854 ;;      Totals:         0      16       0       0
  1855 ;;Total ram usage:       16 bytes
  1856 ;; Hardware stack levels used: 1
  1857 ;; Hardware stack levels required when called: 5
  1858 ;; This function calls:
  1859 ;;		___awdiv
  1860 ;;		___awmod
  1861 ;;		_abs
  1862 ;;		_fputc
  1863 ;; This function is called by:
  1864 ;;		_vfprintf
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868     004B                     _vfpfcnvrt:	
  1869                           ;psect for function _vfpfcnvrt
  1870                           
  1871     004B                     l1717:	
  1872                           ;incstack = 0
  1873                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1874                           
  1875                           
  1876                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1877     004B  0020               	movlb	0	; select bank0
  1878     004C  0828               	movf	vfpfcnvrt@fmt,w
  1879     004D  0086               	movwf	6
  1880     004E  0187               	clrf	7
  1881     004F  3F40               	moviw [0]fsr1
  1882     0050  00AA               	movwf	??_vfpfcnvrt
  1883     0051  3F41               	moviw [1]fsr1
  1884     0052  00AB               	movwf	??_vfpfcnvrt+1
  1885     0053  082A               	movf	??_vfpfcnvrt,w
  1886     0054  0084               	movwf	4
  1887     0055  082B               	movf	??_vfpfcnvrt+1,w
  1888     0056  0085               	movwf	5
  1889     0057  0012               	moviw fsr0++
  1890     0058  3A25               	xorlw	37
  1891     0059  1D03               	btfss	3,2
  1892     005A  285C               	goto	u1091
  1893     005B  285D               	goto	u1090
  1894     005C                     u1091:
  1895     005C  2920               	goto	l1763
  1896     005D                     u1090:
  1897     005D                     l1719:
  1898                           
  1899                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1900     005D  0828               	movf	vfpfcnvrt@fmt,w
  1901     005E  0086               	movwf	6
  1902     005F  0187               	clrf	7
  1903     0060  3001               	movlw	1
  1904     0061  0781               	addwf	1,f
  1905     0062  3141               	addfsr 1,1
  1906     0063  1803               	skipnc
  1907     0064  0A81               	incf	1,f
  1908     0065                     l1721:
  1909                           
  1910                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1911     0065  01C6               	clrf	_width
  1912     0066  01C7               	clrf	_width+1
  1913     0067  1003               	clrc
  1914     0068  3000               	movlw	0
  1915     0069  1803               	btfsc	3,0
  1916     006A  3001               	movlw	1
  1917     006B  00CC               	movwf	_flags
  1918     006C                     l1723:
  1919                           
  1920                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1921     006C  30FF               	movlw	255
  1922     006D  00C8               	movwf	_prec
  1923     006E  30FF               	movlw	255
  1924     006F  00C9               	movwf	_prec+1
  1925     0070                     l1725:
  1926                           
  1927                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1928     0070  0828               	movf	vfpfcnvrt@fmt,w
  1929     0071  0086               	movwf	6
  1930     0072  0187               	clrf	7
  1931     0073  3F40               	moviw [0]fsr1
  1932     0074  00AF               	movwf	vfpfcnvrt@cp
  1933     0075  3F41               	moviw [1]fsr1
  1934     0076  00B0               	movwf	vfpfcnvrt@cp+1
  1935     0077                     l1727:
  1936                           
  1937                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1938     0077  082F               	movf	vfpfcnvrt@cp,w
  1939     0078  0084               	movwf	4
  1940     0079  0830               	movf	vfpfcnvrt@cp+1,w
  1941     007A  0085               	movwf	5
  1942     007B  0012               	moviw fsr0++
  1943     007C  3A64               	xorlw	100
  1944     007D  1903               	btfsc	3,2
  1945     007E  2880               	goto	u1101
  1946     007F  2881               	goto	u1100
  1947     0080                     u1101:
  1948     0080  288B               	goto	l1731
  1949     0081                     u1100:
  1950     0081                     l1729:
  1951     0081  082F               	movf	vfpfcnvrt@cp,w
  1952     0082  0084               	movwf	4
  1953     0083  0830               	movf	vfpfcnvrt@cp+1,w
  1954     0084  0085               	movwf	5
  1955     0085  0012               	moviw fsr0++
  1956     0086  3A69               	xorlw	105
  1957     0087  1D03               	btfss	3,2
  1958     0088  288A               	goto	u1111
  1959     0089  288B               	goto	u1110
  1960     008A                     u1111:
  1961     008A  2916               	goto	l1759
  1962     008B                     u1110:
  1963     008B                     l1731:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1966     008B  0829               	movf	vfpfcnvrt@ap,w
  1967     008C  0086               	movwf	6
  1968     008D  0187               	clrf	7
  1969     008E  0801               	movf	1,w
  1970     008F  0084               	movwf	4
  1971     0090  0185               	clrf	5
  1972     0091  3002               	movlw	2
  1973     0092  0781               	addwf	1,f
  1974     0093  3F00               	moviw [0]fsr0
  1975     0094  00B1               	movwf	vfpfcnvrt@convarg
  1976     0095  3F01               	moviw [1]fsr0
  1977     0096  00B2               	movwf	vfpfcnvrt@convarg+1
  1978     0097                     l1733:
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1981     0097  082F               	movf	vfpfcnvrt@cp,w
  1982     0098  3E01               	addlw	1
  1983     0099  00AA               	movwf	??_vfpfcnvrt
  1984     009A  3000               	movlw	0
  1985     009B  3D30               	addwfc	vfpfcnvrt@cp+1,w
  1986     009C  00AB               	movwf	??_vfpfcnvrt+1
  1987     009D  0828               	movf	vfpfcnvrt@fmt,w
  1988     009E  0086               	movwf	6
  1989     009F  0187               	clrf	7
  1990     00A0  082A               	movf	??_vfpfcnvrt,w
  1991     00A1  3FC0               	movwi [0]fsr1
  1992     00A2  082B               	movf	??_vfpfcnvrt+1,w
  1993     00A3  3FC1               	movwi [1]fsr1
  1994     00A4                     l1735:
  1995                           
  1996                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1997     00A4  3020               	movlw	32
  1998     00A5  00B5               	movwf	vfpfcnvrt@c
  1999     00A6                     l1737:
  2000                           
  2001                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2002     00A6  1BB2               	btfsc	vfpfcnvrt@convarg+1,7
  2003     00A7  28A9               	goto	u1121
  2004     00A8  28AB               	goto	u1120
  2005     00A9                     u1121:
  2006     00A9  3001               	movlw	1
  2007     00AA  28AC               	goto	u1130
  2008     00AB                     u1120:
  2009     00AB  3000               	movlw	0
  2010     00AC                     u1130:
  2011     00AC  00AE               	movwf	vfpfcnvrt@done
  2012     00AD                     l1739:
  2013                           
  2014                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2015     00AD  3001               	movlw	1
  2016     00AE  02B5               	subwf	vfpfcnvrt@c,f
  2017     00AF  0835               	movf	vfpfcnvrt@c,w
  2018     00B0  3ED0               	addlw	(low (_dbuf| 0))& (0+255)
  2019     00B1  0086               	movwf	6
  2020     00B2  0187               	clrf	7
  2021     00B3  300A               	movlw	10
  2022     00B4  00F3               	movwf	___awmod@divisor
  2023     00B5  3000               	movlw	0
  2024     00B6  00F4               	movwf	___awmod@divisor+1
  2025     00B7  0832               	movf	vfpfcnvrt@convarg+1,w
  2026     00B8  00F6               	movwf	___awmod@dividend+1
  2027     00B9  0831               	movf	vfpfcnvrt@convarg,w
  2028     00BA  00F5               	movwf	___awmod@dividend
  2029     00BB  3181  21FA  3180   	fcall	___awmod
  2030     00BE  0874               	movf	?___awmod+1,w
  2031     00BF  0020               	movlb	0	; select bank0
  2032     00C0  00A3               	movwf	abs@a+1
  2033     00C1  0873               	movf	?___awmod,w
  2034     00C2  00A2               	movwf	abs@a
  2035     00C3  3183  23B9  3180   	fcall	_abs
  2036     00C6  0020               	movlb	0	; select bank0
  2037     00C7  0822               	movf	?_abs,w
  2038     00C8  3E30               	addlw	48
  2039     00C9  0081               	movwf	1
  2040     00CA                     l1741:
  2041                           
  2042                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2043     00CA  300A               	movlw	10
  2044     00CB  00F3               	movwf	___awdiv@divisor
  2045     00CC  3000               	movlw	0
  2046     00CD  00F4               	movwf	___awdiv@divisor+1
  2047     00CE  0832               	movf	vfpfcnvrt@convarg+1,w
  2048     00CF  00F6               	movwf	___awdiv@dividend+1
  2049     00D0  0831               	movf	vfpfcnvrt@convarg,w
  2050     00D1  00F5               	movwf	___awdiv@dividend
  2051     00D2  3181  213B  3180   	fcall	___awdiv
  2052     00D5  0874               	movf	?___awdiv+1,w
  2053     00D6  0020               	movlb	0	; select bank0
  2054     00D7  00B2               	movwf	vfpfcnvrt@convarg+1
  2055     00D8  0873               	movf	?___awdiv,w
  2056     00D9  00B1               	movwf	vfpfcnvrt@convarg
  2057     00DA                     l1743:
  2058                           
  2059                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2060     00DA  0831               	movf	vfpfcnvrt@convarg,w
  2061     00DB  0432               	iorwf	vfpfcnvrt@convarg+1,w
  2062     00DC  1903               	btfsc	3,2
  2063     00DD  28DF               	goto	u1141
  2064     00DE  28E0               	goto	u1140
  2065     00DF                     u1141:
  2066     00DF  28E5               	goto	l1747
  2067     00E0                     u1140:
  2068     00E0                     l1745:
  2069     00E0  0835               	movf	vfpfcnvrt@c,w
  2070     00E1  1D03               	btfss	3,2
  2071     00E2  28E4               	goto	u1151
  2072     00E3  28E5               	goto	u1150
  2073     00E4                     u1151:
  2074     00E4  28AD               	goto	l1739
  2075     00E5                     u1150:
  2076     00E5                     l1747:
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2079     00E5  0835               	movf	vfpfcnvrt@c,w
  2080     00E6  1903               	btfsc	3,2
  2081     00E7  28E9               	goto	u1161
  2082     00E8  28EA               	goto	u1160
  2083     00E9                     u1161:
  2084     00E9  290F               	goto	l1757
  2085     00EA                     u1160:
  2086     00EA                     l1749:
  2087     00EA  082E               	movf	vfpfcnvrt@done,w
  2088     00EB  1903               	btfsc	3,2
  2089     00EC  28EE               	goto	u1171
  2090     00ED  28EF               	goto	u1170
  2091     00EE                     u1171:
  2092     00EE  290F               	goto	l1757
  2093     00EF                     u1170:
  2094     00EF                     l1751:
  2095                           
  2096                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2097     00EF  3001               	movlw	1
  2098     00F0  02B5               	subwf	vfpfcnvrt@c,f
  2099     00F1  0835               	movf	vfpfcnvrt@c,w
  2100     00F2  3ED0               	addlw	(low (_dbuf| 0))& (0+255)
  2101     00F3  0086               	movwf	6
  2102     00F4  0187               	clrf	7
  2103     00F5  302D               	movlw	45
  2104     00F6  0081               	movwf	1
  2105     00F7  290F               	goto	l1757
  2106     00F8                     l1753:
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2109     00F8  0835               	movf	vfpfcnvrt@c,w
  2110     00F9  3ED0               	addlw	(low (_dbuf| 0))& (0+255)
  2111     00FA  0086               	movwf	6
  2112     00FB  0187               	clrf	7
  2113     00FC  0801               	movf	1,w
  2114     00FD  00AA               	movwf	??_vfpfcnvrt
  2115     00FE  01AB               	clrf	??_vfpfcnvrt+1
  2116     00FF  082A               	movf	??_vfpfcnvrt,w
  2117     0100  00F3               	movwf	fputc@c
  2118     0101  082B               	movf	??_vfpfcnvrt+1,w
  2119     0102  00F4               	movwf	fputc@c+1
  2120     0103  0827               	movf	vfpfcnvrt@fp+1,w
  2121     0104  00F6               	movwf	fputc@fp+1
  2122     0105  0826               	movf	vfpfcnvrt@fp,w
  2123     0106  00F5               	movwf	fputc@fp
  2124     0107  3181  219B  3180   	fcall	_fputc
  2125     010A                     l1755:
  2126     010A  3001               	movlw	1
  2127     010B  0020               	movlb	0	; select bank0
  2128     010C  00AA               	movwf	??_vfpfcnvrt
  2129     010D  082A               	movf	??_vfpfcnvrt,w
  2130     010E  07B5               	addwf	vfpfcnvrt@c,f
  2131     010F                     l1757:
  2132                           
  2133                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2134     010F  3020               	movlw	32
  2135     0110  0635               	xorwf	vfpfcnvrt@c,w
  2136     0111  1D03               	btfss	3,2
  2137     0112  2914               	goto	u1181
  2138     0113  2915               	goto	u1180
  2139     0114                     u1181:
  2140     0114  28F8               	goto	l1753
  2141     0115                     u1180:
  2142     0115  293A               	goto	l917
  2143     0116                     l1759:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2146     0116  0020               	movlb	0	; select bank0
  2147     0117  0828               	movf	vfpfcnvrt@fmt,w
  2148     0118  0086               	movwf	6
  2149     0119  0187               	clrf	7
  2150     011A  3001               	movlw	1
  2151     011B  0781               	addwf	1,f
  2152     011C  3141               	addfsr 1,1
  2153     011D  1803               	skipnc
  2154     011E  0A81               	incf	1,f
  2155     011F  293A               	goto	l917
  2156     0120                     l1763:
  2157                           
  2158                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2159     0120  0828               	movf	vfpfcnvrt@fmt,w
  2160     0121  0086               	movwf	6
  2161     0122  0187               	clrf	7
  2162     0123  3F40               	moviw [0]fsr1
  2163     0124  00AA               	movwf	??_vfpfcnvrt
  2164     0125  3F41               	moviw [1]fsr1
  2165     0126  00AB               	movwf	??_vfpfcnvrt+1
  2166     0127  082A               	movf	??_vfpfcnvrt,w
  2167     0128  0084               	movwf	4
  2168     0129  082B               	movf	??_vfpfcnvrt+1,w
  2169     012A  0085               	movwf	5
  2170     012B  0800               	movf	0,w	;code access
  2171     012C  00AC               	movwf	??_vfpfcnvrt+2
  2172     012D  01AD               	clrf	??_vfpfcnvrt+3
  2173     012E  082C               	movf	??_vfpfcnvrt+2,w
  2174     012F  00F3               	movwf	fputc@c
  2175     0130  082D               	movf	??_vfpfcnvrt+3,w
  2176     0131  00F4               	movwf	fputc@c+1
  2177     0132  0827               	movf	vfpfcnvrt@fp+1,w
  2178     0133  00F6               	movwf	fputc@fp+1
  2179     0134  0826               	movf	vfpfcnvrt@fp,w
  2180     0135  00F5               	movwf	fputc@fp
  2181     0136  3181  219B  3180   	fcall	_fputc
  2182     0139  2916               	goto	l1759
  2183     013A                     l917:
  2184     013A  0008               	return
  2185     013B                     __end_of_vfpfcnvrt:
  2186                           
  2187                           	psect	text4
  2188     019B                     __ptext4:	
  2189 ;; *************** function _fputc *****************
  2190 ;; Defined at:
  2191 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  c               2    3[COMMON] int 
  2194 ;;  fp              2    5[COMMON] PTR struct _IO_FILE
  2195 ;;		 -> NULL(0), 
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  2    3[COMMON] int 
  2200 ;; Registers used:
  2201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2207 ;;      Params:         4       0       0       0
  2208 ;;      Locals:         0       0       0       0
  2209 ;;      Temps:          0       5       0       0
  2210 ;;      Totals:         4       5       0       0
  2211 ;;Total ram usage:        9 bytes
  2212 ;; Hardware stack levels used: 1
  2213 ;; Hardware stack levels required when called: 4
  2214 ;; This function calls:
  2215 ;;		_putch
  2216 ;; This function is called by:
  2217 ;;		_vfpfcnvrt
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221     019B                     _fputc:	
  2222                           ;psect for function _fputc
  2223                           
  2224     019B                     l1417:	
  2225                           ;incstack = 0
  2226                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2227                           
  2228     019B  0875               	movf	fputc@fp,w
  2229     019C  0476               	iorwf	fputc@fp+1,w
  2230     019D  1903               	btfsc	3,2
  2231     019E  29A0               	goto	u711
  2232     019F  29A1               	goto	u710
  2233     01A0                     u711:
  2234     01A0  29A7               	goto	l1421
  2235     01A1                     u710:
  2236     01A1                     l1419:
  2237     01A1  0875               	movf	fputc@fp,w
  2238     01A2  0476               	iorwf	fputc@fp+1,w
  2239     01A3  1D03               	btfss	3,2
  2240     01A4  29A6               	goto	u721
  2241     01A5  29A7               	goto	u720
  2242     01A6                     u721:
  2243     01A6  29AC               	goto	l1423
  2244     01A7                     u720:
  2245     01A7                     l1421:
  2246     01A7  0873               	movf	fputc@c,w
  2247     01A8  3184  242C  3181   	fcall	_putch
  2248     01AB  29F9               	goto	l942
  2249     01AC                     l1423:
  2250     01AC  0875               	movf	fputc@fp,w
  2251     01AD  0086               	movwf	6
  2252     01AE  0876               	movf	fputc@fp+1,w
  2253     01AF  0087               	movwf	7
  2254     01B0  3149               	addfsr 1,9
  2255     01B1  0016               	moviw fsr1++
  2256     01B2  0401               	iorwf	1,w
  2257     01B3  1903               	btfsc	3,2
  2258     01B4  29B6               	goto	u731
  2259     01B5  29B7               	goto	u730
  2260     01B6                     u731:
  2261     01B6  29D8               	goto	l1427
  2262     01B7                     u730:
  2263     01B7                     l1425:
  2264     01B7  0875               	movf	fputc@fp,w
  2265     01B8  0086               	movwf	6
  2266     01B9  0876               	movf	fputc@fp+1,w
  2267     01BA  0087               	movwf	7
  2268     01BB  3149               	addfsr 1,9
  2269     01BC  3F40               	moviw [0]fsr1
  2270     01BD  0020               	movlb	0	; select bank0
  2271     01BE  00A0               	movwf	??_fputc
  2272     01BF  3F41               	moviw [1]fsr1
  2273     01C0  00A1               	movwf	??_fputc+1
  2274     01C1  0875               	movf	fputc@fp,w
  2275     01C2  0086               	movwf	6
  2276     01C3  0876               	movf	fputc@fp+1,w
  2277     01C4  0087               	movwf	7
  2278     01C5  3142               	addfsr 1,2
  2279     01C6  3F40               	moviw [0]fsr1
  2280     01C7  00A2               	movwf	??_fputc+2
  2281     01C8  3F41               	moviw [1]fsr1
  2282     01C9  00A3               	movwf	??_fputc+3
  2283     01CA  0823               	movf	??_fputc+3,w
  2284     01CB  3A80               	xorlw	128
  2285     01CC  00A4               	movwf	??_fputc+4
  2286     01CD  0821               	movf	??_fputc+1,w
  2287     01CE  3A80               	xorlw	128
  2288     01CF  0224               	subwf	??_fputc+4,w
  2289     01D0  1D03               	skipz
  2290     01D1  29D4               	goto	u745
  2291     01D2  0820               	movf	??_fputc,w
  2292     01D3  0222               	subwf	??_fputc+2,w
  2293     01D4                     u745:
  2294     01D4  1803               	skipnc
  2295     01D5  29D7               	goto	u741
  2296     01D6  29D8               	goto	u740
  2297     01D7                     u741:
  2298     01D7  29F9               	goto	l942
  2299     01D8                     u740:
  2300     01D8                     l1427:
  2301     01D8  0875               	movf	fputc@fp,w
  2302     01D9  0086               	movwf	6
  2303     01DA  0876               	movf	fputc@fp+1,w
  2304     01DB  0087               	movwf	7
  2305     01DC  3142               	addfsr 1,2
  2306     01DD  0875               	movf	fputc@fp,w
  2307     01DE  0084               	movwf	4
  2308     01DF  0876               	movf	fputc@fp+1,w
  2309     01E0  0085               	movwf	5
  2310     01E1  3F40               	moviw [0]fsr1
  2311     01E2  0700               	addwf	0,w
  2312     01E3  0020               	movlb	0	; select bank0
  2313     01E4  00A0               	movwf	??_fputc
  2314     01E5  3101               	addfsr 0,1
  2315     01E6  3F41               	moviw [1]fsr1
  2316     01E7  3D00               	addwfc	0,w
  2317     01E8  00A1               	movwf	??_fputc+1
  2318     01E9  0820               	movf	??_fputc,w
  2319     01EA  0086               	movwf	6
  2320     01EB  0821               	movf	??_fputc+1,w
  2321     01EC  0087               	movwf	7
  2322     01ED  0873               	movf	fputc@c,w
  2323     01EE  0081               	movwf	1
  2324     01EF                     l1429:
  2325     01EF  0875               	movf	fputc@fp,w
  2326     01F0  0086               	movwf	6
  2327     01F1  0876               	movf	fputc@fp+1,w
  2328     01F2  0087               	movwf	7
  2329     01F3  3142               	addfsr 1,2
  2330     01F4  3001               	movlw	1
  2331     01F5  0781               	addwf	1,f
  2332     01F6  3141               	addfsr 1,1
  2333     01F7  1803               	skipnc
  2334     01F8  0A81               	incf	1,f
  2335     01F9                     l942:
  2336     01F9  0008               	return
  2337     01FA                     __end_of_fputc:
  2338                           
  2339                           	psect	text5
  2340     042C                     __ptext5:	
  2341 ;; *************** function _putch *****************
  2342 ;; Defined at:
  2343 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  c               1    wreg     unsigned char 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  c               1    0[COMMON] unsigned char 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2357 ;;      Params:         0       0       0       0
  2358 ;;      Locals:         0       0       0       0
  2359 ;;      Temps:          0       0       0       0
  2360 ;;      Totals:         0       0       0       0
  2361 ;;Total ram usage:        0 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 3
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_fputc
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371     042C                     _putch:	
  2372                           ;psect for function _putch
  2373                           
  2374     042C                     l953:	
  2375                           ;incstack = 0
  2376                           ; Regs used in _putch: [wreg]
  2377                           
  2378     042C  0008               	return
  2379     042D                     __end_of_putch:
  2380                           
  2381                           	psect	text6
  2382     03B9                     __ptext6:	
  2383 ;; *************** function _abs *****************
  2384 ;; Defined at:
  2385 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  a               2    2[BANK0 ] int 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;		None
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  2    2[BANK0 ] int 
  2392 ;; Registers used:
  2393 ;;		wreg, status,2, status,0
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2399 ;;      Params:         0       2       0       0
  2400 ;;      Locals:         0       0       0       0
  2401 ;;      Temps:          0       2       0       0
  2402 ;;      Totals:         0       4       0       0
  2403 ;;Total ram usage:        4 bytes
  2404 ;; Hardware stack levels used: 1
  2405 ;; Hardware stack levels required when called: 3
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		_vfpfcnvrt
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413     03B9                     _abs:	
  2414                           ;psect for function _abs
  2415                           
  2416     03B9                     l1433:	
  2417                           ;incstack = 0
  2418                           ; Regs used in _abs: [wreg+status,2+status,0]
  2419                           
  2420     03B9  0020               	movlb	0	; select bank0
  2421     03BA  1BA3               	btfsc	abs@a+1,7
  2422     03BB  2BBD               	goto	u751
  2423     03BC  2BBE               	goto	u750
  2424     03BD                     u751:
  2425     03BD  2BBF               	goto	l1437
  2426     03BE                     u750:
  2427     03BE                     l1435:
  2428     03BE  2BCA               	goto	l930
  2429     03BF                     l1437:
  2430     03BF  0922               	comf	abs@a,w
  2431     03C0  00A4               	movwf	??_abs
  2432     03C1  0923               	comf	abs@a+1,w
  2433     03C2  00A5               	movwf	??_abs+1
  2434     03C3  0AA4               	incf	??_abs,f
  2435     03C4  1903               	skipnz
  2436     03C5  0AA5               	incf	??_abs+1,f
  2437     03C6  0824               	movf	??_abs,w
  2438     03C7  00A2               	movwf	?_abs
  2439     03C8  0825               	movf	??_abs+1,w
  2440     03C9  00A3               	movwf	?_abs+1
  2441     03CA                     l930:
  2442     03CA  0008               	return
  2443     03CB                     __end_of_abs:
  2444                           
  2445                           	psect	text7
  2446     01FA                     __ptext7:	
  2447 ;; *************** function ___awmod *****************
  2448 ;; Defined at:
  2449 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  divisor         2    3[COMMON] int 
  2452 ;;  dividend        2    5[COMMON] int 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  sign            1    1[BANK0 ] unsigned char 
  2455 ;;  counter         1    0[BANK0 ] unsigned char 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  2    3[COMMON] int 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2465 ;;      Params:         4       0       0       0
  2466 ;;      Locals:         0       2       0       0
  2467 ;;      Temps:          1       0       0       0
  2468 ;;      Totals:         5       2       0       0
  2469 ;;Total ram usage:        7 bytes
  2470 ;; Hardware stack levels used: 1
  2471 ;; Hardware stack levels required when called: 3
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		_vfpfcnvrt
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479     01FA                     ___awmod:	
  2480                           ;psect for function ___awmod
  2481                           
  2482     01FA                     l1679:	
  2483                           ;incstack = 0
  2484                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2485                           
  2486     01FA  0020               	movlb	0	; select bank0
  2487     01FB  01A1               	clrf	___awmod@sign
  2488     01FC                     l1681:
  2489     01FC  1FF6               	btfss	___awmod@dividend+1,7
  2490     01FD  29FF               	goto	u1001
  2491     01FE  2A00               	goto	u1000
  2492     01FF                     u1001:
  2493     01FF  2A07               	goto	l1687
  2494     0200                     u1000:
  2495     0200                     l1683:
  2496     0200  09F5               	comf	___awmod@dividend,f
  2497     0201  09F6               	comf	___awmod@dividend+1,f
  2498     0202  0AF5               	incf	___awmod@dividend,f
  2499     0203  1903               	skipnz
  2500     0204  0AF6               	incf	___awmod@dividend+1,f
  2501     0205                     l1685:
  2502     0205  01A1               	clrf	___awmod@sign
  2503     0206  0AA1               	incf	___awmod@sign,f
  2504     0207                     l1687:
  2505     0207  1FF4               	btfss	___awmod@divisor+1,7
  2506     0208  2A0A               	goto	u1011
  2507     0209  2A0B               	goto	u1010
  2508     020A                     u1011:
  2509     020A  2A10               	goto	l1691
  2510     020B                     u1010:
  2511     020B                     l1689:
  2512     020B  09F3               	comf	___awmod@divisor,f
  2513     020C  09F4               	comf	___awmod@divisor+1,f
  2514     020D  0AF3               	incf	___awmod@divisor,f
  2515     020E  1903               	skipnz
  2516     020F  0AF4               	incf	___awmod@divisor+1,f
  2517     0210                     l1691:
  2518     0210  0873               	movf	___awmod@divisor,w
  2519     0211  0474               	iorwf	___awmod@divisor+1,w
  2520     0212  1903               	btfsc	3,2
  2521     0213  2A15               	goto	u1021
  2522     0214  2A16               	goto	u1020
  2523     0215                     u1021:
  2524     0215  2A3F               	goto	l1709
  2525     0216                     u1020:
  2526     0216                     l1693:
  2527     0216  01A0               	clrf	___awmod@counter
  2528     0217  0AA0               	incf	___awmod@counter,f
  2529     0218  2A22               	goto	l1699
  2530     0219                     l1695:
  2531     0219  3001               	movlw	1
  2532     021A                     u1035:
  2533     021A  35F3               	lslf	___awmod@divisor,f
  2534     021B  0DF4               	rlf	___awmod@divisor+1,f
  2535     021C  0B89               	decfsz	9,f
  2536     021D  2A1A               	goto	u1035
  2537     021E                     l1697:
  2538     021E  3001               	movlw	1
  2539     021F  00F7               	movwf	??___awmod
  2540     0220  0877               	movf	??___awmod,w
  2541     0221  07A0               	addwf	___awmod@counter,f
  2542     0222                     l1699:
  2543     0222  1FF4               	btfss	___awmod@divisor+1,7
  2544     0223  2A25               	goto	u1041
  2545     0224  2A26               	goto	u1040
  2546     0225                     u1041:
  2547     0225  2A19               	goto	l1695
  2548     0226                     u1040:
  2549     0226                     l1701:
  2550     0226  0874               	movf	___awmod@divisor+1,w
  2551     0227  0276               	subwf	___awmod@dividend+1,w
  2552     0228  1D03               	skipz
  2553     0229  2A2C               	goto	u1055
  2554     022A  0873               	movf	___awmod@divisor,w
  2555     022B  0275               	subwf	___awmod@dividend,w
  2556     022C                     u1055:
  2557     022C  1C03               	skipc
  2558     022D  2A2F               	goto	u1051
  2559     022E  2A30               	goto	u1050
  2560     022F                     u1051:
  2561     022F  2A34               	goto	l1705
  2562     0230                     u1050:
  2563     0230                     l1703:
  2564     0230  0873               	movf	___awmod@divisor,w
  2565     0231  02F5               	subwf	___awmod@dividend,f
  2566     0232  0874               	movf	___awmod@divisor+1,w
  2567     0233  3BF6               	subwfb	___awmod@dividend+1,f
  2568     0234                     l1705:
  2569     0234  3001               	movlw	1
  2570     0235                     u1065:
  2571     0235  36F4               	lsrf	___awmod@divisor+1,f
  2572     0236  0CF3               	rrf	___awmod@divisor,f
  2573     0237  0B89               	decfsz	9,f
  2574     0238  2A35               	goto	u1065
  2575     0239                     l1707:
  2576     0239  3001               	movlw	1
  2577     023A  02A0               	subwf	___awmod@counter,f
  2578     023B  1D03               	btfss	3,2
  2579     023C  2A3E               	goto	u1071
  2580     023D  2A3F               	goto	u1070
  2581     023E                     u1071:
  2582     023E  2A26               	goto	l1701
  2583     023F                     u1070:
  2584     023F                     l1709:
  2585     023F  0821               	movf	___awmod@sign,w
  2586     0240  1903               	btfsc	3,2
  2587     0241  2A43               	goto	u1081
  2588     0242  2A44               	goto	u1080
  2589     0243                     u1081:
  2590     0243  2A49               	goto	l1713
  2591     0244                     u1080:
  2592     0244                     l1711:
  2593     0244  09F5               	comf	___awmod@dividend,f
  2594     0245  09F6               	comf	___awmod@dividend+1,f
  2595     0246  0AF5               	incf	___awmod@dividend,f
  2596     0247  1903               	skipnz
  2597     0248  0AF6               	incf	___awmod@dividend+1,f
  2598     0249                     l1713:
  2599     0249  0876               	movf	___awmod@dividend+1,w
  2600     024A  00F4               	movwf	?___awmod+1
  2601     024B  0875               	movf	___awmod@dividend,w
  2602     024C  00F3               	movwf	?___awmod
  2603     024D                     l582:
  2604     024D  0008               	return
  2605     024E                     __end_of___awmod:
  2606                           
  2607                           	psect	text8
  2608     013B                     __ptext8:	
  2609 ;; *************** function ___awdiv *****************
  2610 ;; Defined at:
  2611 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  divisor         2    3[COMMON] int 
  2614 ;;  dividend        2    5[COMMON] int 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  quotient        2    2[BANK0 ] int 
  2617 ;;  sign            1    1[BANK0 ] unsigned char 
  2618 ;;  counter         1    0[BANK0 ] unsigned char 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  2    3[COMMON] int 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2628 ;;      Params:         4       0       0       0
  2629 ;;      Locals:         0       4       0       0
  2630 ;;      Temps:          1       0       0       0
  2631 ;;      Totals:         5       4       0       0
  2632 ;;Total ram usage:        9 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; Hardware stack levels required when called: 3
  2635 ;; This function calls:
  2636 ;;		Nothing
  2637 ;; This function is called by:
  2638 ;;		_vfpfcnvrt
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642     013B                     ___awdiv:	
  2643                           ;psect for function ___awdiv
  2644                           
  2645     013B                     l1335:	
  2646                           ;incstack = 0
  2647                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2648                           
  2649     013B  0020               	movlb	0	; select bank0
  2650     013C  01A1               	clrf	___awdiv@sign
  2651     013D                     l1337:
  2652     013D  1FF4               	btfss	___awdiv@divisor+1,7
  2653     013E  2940               	goto	u521
  2654     013F  2941               	goto	u520
  2655     0140                     u521:
  2656     0140  2948               	goto	l1343
  2657     0141                     u520:
  2658     0141                     l1339:
  2659     0141  09F3               	comf	___awdiv@divisor,f
  2660     0142  09F4               	comf	___awdiv@divisor+1,f
  2661     0143  0AF3               	incf	___awdiv@divisor,f
  2662     0144  1903               	skipnz
  2663     0145  0AF4               	incf	___awdiv@divisor+1,f
  2664     0146                     l1341:
  2665     0146  01A1               	clrf	___awdiv@sign
  2666     0147  0AA1               	incf	___awdiv@sign,f
  2667     0148                     l1343:
  2668     0148  1FF6               	btfss	___awdiv@dividend+1,7
  2669     0149  294B               	goto	u531
  2670     014A  294C               	goto	u530
  2671     014B                     u531:
  2672     014B  2955               	goto	l1349
  2673     014C                     u530:
  2674     014C                     l1345:
  2675     014C  09F5               	comf	___awdiv@dividend,f
  2676     014D  09F6               	comf	___awdiv@dividend+1,f
  2677     014E  0AF5               	incf	___awdiv@dividend,f
  2678     014F  1903               	skipnz
  2679     0150  0AF6               	incf	___awdiv@dividend+1,f
  2680     0151                     l1347:
  2681     0151  3001               	movlw	1
  2682     0152  00F7               	movwf	??___awdiv
  2683     0153  0877               	movf	??___awdiv,w
  2684     0154  06A1               	xorwf	___awdiv@sign,f
  2685     0155                     l1349:
  2686     0155  01A2               	clrf	___awdiv@quotient
  2687     0156  01A3               	clrf	___awdiv@quotient+1
  2688     0157                     l1351:
  2689     0157  0873               	movf	___awdiv@divisor,w
  2690     0158  0474               	iorwf	___awdiv@divisor+1,w
  2691     0159  1903               	btfsc	3,2
  2692     015A  295C               	goto	u541
  2693     015B  295D               	goto	u540
  2694     015C                     u541:
  2695     015C  298C               	goto	l1371
  2696     015D                     u540:
  2697     015D                     l1353:
  2698     015D  01A0               	clrf	___awdiv@counter
  2699     015E  0AA0               	incf	___awdiv@counter,f
  2700     015F  2969               	goto	l1359
  2701     0160                     l1355:
  2702     0160  3001               	movlw	1
  2703     0161                     u555:
  2704     0161  35F3               	lslf	___awdiv@divisor,f
  2705     0162  0DF4               	rlf	___awdiv@divisor+1,f
  2706     0163  0B89               	decfsz	9,f
  2707     0164  2961               	goto	u555
  2708     0165                     l1357:
  2709     0165  3001               	movlw	1
  2710     0166  00F7               	movwf	??___awdiv
  2711     0167  0877               	movf	??___awdiv,w
  2712     0168  07A0               	addwf	___awdiv@counter,f
  2713     0169                     l1359:
  2714     0169  1FF4               	btfss	___awdiv@divisor+1,7
  2715     016A  296C               	goto	u561
  2716     016B  296D               	goto	u560
  2717     016C                     u561:
  2718     016C  2960               	goto	l1355
  2719     016D                     u560:
  2720     016D                     l1361:
  2721     016D  3001               	movlw	1
  2722     016E                     u575:
  2723     016E  35A2               	lslf	___awdiv@quotient,f
  2724     016F  0DA3               	rlf	___awdiv@quotient+1,f
  2725     0170  0B89               	decfsz	9,f
  2726     0171  296E               	goto	u575
  2727     0172  0874               	movf	___awdiv@divisor+1,w
  2728     0173  0276               	subwf	___awdiv@dividend+1,w
  2729     0174  1D03               	skipz
  2730     0175  2978               	goto	u585
  2731     0176  0873               	movf	___awdiv@divisor,w
  2732     0177  0275               	subwf	___awdiv@dividend,w
  2733     0178                     u585:
  2734     0178  1C03               	skipc
  2735     0179  297B               	goto	u581
  2736     017A  297C               	goto	u580
  2737     017B                     u581:
  2738     017B  2981               	goto	l1367
  2739     017C                     u580:
  2740     017C                     l1363:
  2741     017C  0873               	movf	___awdiv@divisor,w
  2742     017D  02F5               	subwf	___awdiv@dividend,f
  2743     017E  0874               	movf	___awdiv@divisor+1,w
  2744     017F  3BF6               	subwfb	___awdiv@dividend+1,f
  2745     0180                     l1365:
  2746     0180  1422               	bsf	___awdiv@quotient,0
  2747     0181                     l1367:
  2748     0181  3001               	movlw	1
  2749     0182                     u595:
  2750     0182  36F4               	lsrf	___awdiv@divisor+1,f
  2751     0183  0CF3               	rrf	___awdiv@divisor,f
  2752     0184  0B89               	decfsz	9,f
  2753     0185  2982               	goto	u595
  2754     0186                     l1369:
  2755     0186  3001               	movlw	1
  2756     0187  02A0               	subwf	___awdiv@counter,f
  2757     0188  1D03               	btfss	3,2
  2758     0189  298B               	goto	u601
  2759     018A  298C               	goto	u600
  2760     018B                     u601:
  2761     018B  296D               	goto	l1361
  2762     018C                     u600:
  2763     018C                     l1371:
  2764     018C  0821               	movf	___awdiv@sign,w
  2765     018D  1903               	btfsc	3,2
  2766     018E  2990               	goto	u611
  2767     018F  2991               	goto	u610
  2768     0190                     u611:
  2769     0190  2996               	goto	l1375
  2770     0191                     u610:
  2771     0191                     l1373:
  2772     0191  09A2               	comf	___awdiv@quotient,f
  2773     0192  09A3               	comf	___awdiv@quotient+1,f
  2774     0193  0AA2               	incf	___awdiv@quotient,f
  2775     0194  1903               	skipnz
  2776     0195  0AA3               	incf	___awdiv@quotient+1,f
  2777     0196                     l1375:
  2778     0196  0823               	movf	___awdiv@quotient+1,w
  2779     0197  00F4               	movwf	?___awdiv+1
  2780     0198  0822               	movf	___awdiv@quotient,w
  2781     0199  00F3               	movwf	?___awdiv
  2782     019A                     l569:
  2783     019A  0008               	return
  2784     019B                     __end_of___awdiv:
  2785                           
  2786                           	psect	text9
  2787     03EC                     __ptext9:	
  2788 ;; *************** function _SYSTEM_Initialize *****************
  2789 ;; Defined at:
  2790 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;		None
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;		None
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      void 
  2797 ;; Registers used:
  2798 ;;		wreg, status,2, status,0, pclath, cstack
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2804 ;;      Params:         0       0       0       0
  2805 ;;      Locals:         0       0       0       0
  2806 ;;      Temps:          0       0       0       0
  2807 ;;      Totals:         0       0       0       0
  2808 ;;Total ram usage:        0 bytes
  2809 ;; Hardware stack levels used: 1
  2810 ;; Hardware stack levels required when called: 5
  2811 ;; This function calls:
  2812 ;;		_EUSART_Initialize
  2813 ;;		_OSCILLATOR_Initialize
  2814 ;;		_PIN_MANAGER_Initialize
  2815 ;;		_TMR1_Initialize
  2816 ;;		_WDT_Initialize
  2817 ;; This function is called by:
  2818 ;;		_main
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822     03EC                     _SYSTEM_Initialize:	
  2823                           ;psect for function _SYSTEM_Initialize
  2824                           
  2825     03EC                     l1589:	
  2826                           ;incstack = 0
  2827                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2828                           
  2829                           
  2830                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2831     03EC  3183  238E  3183   	fcall	_PIN_MANAGER_Initialize
  2832                           
  2833                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2834     03EF  3183  23FC  3183   	fcall	_OSCILLATOR_Initialize
  2835                           
  2836                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2837     03F2  3184  2427  3183   	fcall	_WDT_Initialize
  2838                           
  2839                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  2840     03F5  3183  2376  3183   	fcall	_TMR1_Initialize
  2841                           
  2842                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  2843     03F8  3183  2338  3183   	fcall	_EUSART_Initialize
  2844     03FB                     l49:
  2845     03FB  0008               	return
  2846     03FC                     __end_of_SYSTEM_Initialize:
  2847                           
  2848                           	psect	text10
  2849     0427                     __ptext10:	
  2850 ;; *************** function _WDT_Initialize *****************
  2851 ;; Defined at:
  2852 ;;		line 70 in file "mcc_generated_files/mcc.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;		None
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;		None
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1    wreg      void 
  2859 ;; Registers used:
  2860 ;;		wreg
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2866 ;;      Params:         0       0       0       0
  2867 ;;      Locals:         0       0       0       0
  2868 ;;      Temps:          0       0       0       0
  2869 ;;      Totals:         0       0       0       0
  2870 ;;Total ram usage:        0 bytes
  2871 ;; Hardware stack levels used: 1
  2872 ;; Hardware stack levels required when called: 3
  2873 ;; This function calls:
  2874 ;;		Nothing
  2875 ;; This function is called by:
  2876 ;;		_SYSTEM_Initialize
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880     0427                     _WDT_Initialize:	
  2881                           ;psect for function _WDT_Initialize
  2882                           
  2883     0427                     l1519:	
  2884                           ;incstack = 0
  2885                           ; Regs used in _WDT_Initialize: [wreg]
  2886                           
  2887                           
  2888                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  2889     0427  3016               	movlw	22
  2890     0428  0021               	movlb	1	; select bank1
  2891     0429  0097               	movwf	23	;volatile
  2892     042A                     l55:
  2893     042A  0008               	return
  2894     042B                     __end_of_WDT_Initialize:
  2895                           
  2896                           	psect	text11
  2897     0376                     __ptext11:	
  2898 ;; *************** function _TMR1_Initialize *****************
  2899 ;; Defined at:
  2900 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;		None
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;		None
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0, pclath, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2914 ;;      Params:         0       0       0       0
  2915 ;;      Locals:         0       0       0       0
  2916 ;;      Temps:          0       0       0       0
  2917 ;;      Totals:         0       0       0       0
  2918 ;;Total ram usage:        0 bytes
  2919 ;; Hardware stack levels used: 1
  2920 ;; Hardware stack levels required when called: 4
  2921 ;; This function calls:
  2922 ;;		_TMR1_SetInterruptHandler
  2923 ;; This function is called by:
  2924 ;;		_SYSTEM_Initialize
  2925 ;;		_main
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929     0376                     _TMR1_Initialize:	
  2930                           ;psect for function _TMR1_Initialize
  2931                           
  2932     0376                     l1521:	
  2933                           ;incstack = 0
  2934                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2935                           
  2936                           
  2937                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  2938     0376  0020               	movlb	0	; select bank0
  2939     0377  0199               	clrf	25	;volatile
  2940     0378                     l1523:
  2941                           
  2942                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xFC;
  2943     0378  30FC               	movlw	252
  2944     0379  0097               	movwf	23	;volatile
  2945     037A                     l1525:
  2946                           
  2947                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x18;
  2948     037A  3018               	movlw	24
  2949     037B  0096               	movwf	22	;volatile
  2950     037C                     l1527:
  2951                           
  2952                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  2953     037C  1011               	bcf	17,0	;volatile
  2954     037D                     l1529:
  2955                           
  2956                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2957     037D  0817               	movf	23,w	;volatile
  2958     037E  00CB               	movwf	_timer1ReloadVal+1	;volatile
  2959     037F  0816               	movf	22,w	;volatile
  2960     0380  00CA               	movwf	_timer1ReloadVal	;volatile
  2961     0381                     l1531:
  2962                           
  2963                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  2964     0381  0021               	movlb	1	; select bank1
  2965     0382  1411               	bsf	17,0	;volatile
  2966     0383                     l1533:
  2967                           
  2968                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  2969     0383  302D               	movlw	low _TMR1_DefaultInterruptHandler
  2970     0384  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2971     0385  3004               	movlw	high _TMR1_DefaultInterruptHandler
  2972     0386  00F4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2973     0387  3184  240F  3183   	fcall	_TMR1_SetInterruptHandler
  2974     038A                     l1535:
  2975                           
  2976                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  2977     038A  3001               	movlw	1
  2978     038B  0020               	movlb	0	; select bank0
  2979     038C  0098               	movwf	24	;volatile
  2980     038D                     l82:
  2981     038D  0008               	return
  2982     038E                     __end_of_TMR1_Initialize:
  2983                           
  2984                           	psect	text12
  2985     040F                     __ptext12:	
  2986 ;; *************** function _TMR1_SetInterruptHandler *****************
  2987 ;; Defined at:
  2988 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  2991 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		wreg
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3003 ;;      Params:         2       0       0       0
  3004 ;;      Locals:         0       0       0       0
  3005 ;;      Temps:          0       0       0       0
  3006 ;;      Totals:         2       0       0       0
  3007 ;;Total ram usage:        2 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; Hardware stack levels required when called: 3
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_TMR1_Initialize
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017     040F                     _TMR1_SetInterruptHandler:	
  3018                           ;psect for function _TMR1_SetInterruptHandler
  3019                           
  3020     040F                     l1441:	
  3021                           ;incstack = 0
  3022                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  3023                           
  3024                           
  3025                           ;mcc_generated_files/tmr1.c: 178:     TMR1_InterruptHandler = InterruptHandler;
  3026     040F  0874               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  3027     0410  0020               	movlb	0	; select bank0
  3028     0411  00D6               	movwf	_TMR1_InterruptHandler+1
  3029     0412  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  3030     0413  00D5               	movwf	_TMR1_InterruptHandler
  3031     0414                     l108:
  3032     0414  0008               	return
  3033     0415                     __end_of_TMR1_SetInterruptHandler:
  3034                           
  3035                           	psect	text13
  3036     038E                     __ptext13:	
  3037 ;; *************** function _PIN_MANAGER_Initialize *****************
  3038 ;; Defined at:
  3039 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;		None
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1    wreg      void 
  3046 ;; Registers used:
  3047 ;;		wreg, status,2
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3053 ;;      Params:         0       0       0       0
  3054 ;;      Locals:         0       0       0       0
  3055 ;;      Temps:          0       0       0       0
  3056 ;;      Totals:         0       0       0       0
  3057 ;;Total ram usage:        0 bytes
  3058 ;; Hardware stack levels used: 1
  3059 ;; Hardware stack levels required when called: 3
  3060 ;; This function calls:
  3061 ;;		Nothing
  3062 ;; This function is called by:
  3063 ;;		_SYSTEM_Initialize
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067     038E                     _PIN_MANAGER_Initialize:	
  3068                           ;psect for function _PIN_MANAGER_Initialize
  3069                           
  3070     038E                     l1501:	
  3071                           ;incstack = 0
  3072                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3073                           
  3074                           
  3075                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x15;
  3076     038E  3015               	movlw	21
  3077     038F  0022               	movlb	2	; select bank2
  3078     0390  008C               	movwf	12	;volatile
  3079     0391                     l1503:
  3080                           
  3081                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3082     0391  018D               	clrf	13	;volatile
  3083     0392                     l1505:
  3084                           
  3085                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xE0;
  3086     0392  30E0               	movlw	224
  3087     0393  0021               	movlb	1	; select bank1
  3088     0394  008C               	movwf	12	;volatile
  3089     0395                     l1507:
  3090                           
  3091                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  3092     0395  30FF               	movlw	255
  3093     0396  008D               	movwf	13	;volatile
  3094     0397                     l1509:
  3095                           
  3096                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF8;
  3097     0397  30F8               	movlw	248
  3098     0398  0023               	movlb	3	; select bank3
  3099     0399  008D               	movwf	13	;volatile
  3100                           
  3101                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x00;
  3102     039A  018C               	clrf	12	;volatile
  3103                           
  3104                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  3105     039B  0024               	movlb	4	; select bank4
  3106     039C  018D               	clrf	13	;volatile
  3107                           
  3108                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  3109     039D  018C               	clrf	12	;volatile
  3110     039E                     l1511:
  3111                           
  3112                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  3113     039E  0021               	movlb	1	; select bank1
  3114     039F  1795               	bsf	21,7	;volatile
  3115                           
  3116                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  3117     03A0  0022               	movlb	2	; select bank2
  3118     03A1  019D               	clrf	29	;volatile
  3119                           
  3120                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  3121     03A2  019E               	clrf	30	;volatile
  3122     03A3                     l25:
  3123     03A3  0008               	return
  3124     03A4                     __end_of_PIN_MANAGER_Initialize:
  3125                           
  3126                           	psect	text14
  3127     03FC                     __ptext14:	
  3128 ;; *************** function _OSCILLATOR_Initialize *****************
  3129 ;; Defined at:
  3130 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;		None
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      void 
  3137 ;; Registers used:
  3138 ;;		wreg, status,2
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3144 ;;      Params:         0       0       0       0
  3145 ;;      Locals:         0       0       0       0
  3146 ;;      Temps:          0       0       0       0
  3147 ;;      Totals:         0       0       0       0
  3148 ;;Total ram usage:        0 bytes
  3149 ;; Hardware stack levels used: 1
  3150 ;; Hardware stack levels required when called: 3
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_SYSTEM_Initialize
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158     03FC                     _OSCILLATOR_Initialize:	
  3159                           ;psect for function _OSCILLATOR_Initialize
  3160                           
  3161     03FC                     l1513:	
  3162                           ;incstack = 0
  3163                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3164                           
  3165                           
  3166                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x48;
  3167     03FC  3048               	movlw	72
  3168     03FD  0021               	movlb	1	; select bank1
  3169     03FE  0099               	movwf	25	;volatile
  3170     03FF                     l1515:
  3171                           
  3172                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  3173     03FF  0198               	clrf	24	;volatile
  3174     0400                     l1517:
  3175                           
  3176                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  3177     0400  0022               	movlb	2	; select bank2
  3178     0401  0196               	clrf	22	;volatile
  3179     0402                     l52:
  3180     0402  0008               	return
  3181     0403                     __end_of_OSCILLATOR_Initialize:
  3182                           
  3183                           	psect	text15
  3184     0338                     __ptext15:	
  3185 ;; *************** function _EUSART_Initialize *****************
  3186 ;; Defined at:
  3187 ;;		line 65 in file "mcc_generated_files/eusart.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0, pclath, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3201 ;;      Params:         0       0       0       0
  3202 ;;      Locals:         0       0       0       0
  3203 ;;      Temps:          0       0       0       0
  3204 ;;      Totals:         0       0       0       0
  3205 ;;Total ram usage:        0 bytes
  3206 ;; Hardware stack levels used: 1
  3207 ;; Hardware stack levels required when called: 4
  3208 ;; This function calls:
  3209 ;;		_EUSART_SetErrorHandler
  3210 ;;		_EUSART_SetFramingErrorHandler
  3211 ;;		_EUSART_SetOverrunErrorHandler
  3212 ;; This function is called by:
  3213 ;;		_SYSTEM_Initialize
  3214 ;;		_main
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218     0338                     _EUSART_Initialize:	
  3219                           ;psect for function _EUSART_Initialize
  3220                           
  3221     0338                     l1537:	
  3222                           ;incstack = 0
  3223                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3224                           
  3225                           
  3226                           ;mcc_generated_files/eusart.c: 70:     BAUDCON = 0x18;
  3227     0338  3018               	movlw	24
  3228     0339  0023               	movlb	3	; select bank3
  3229     033A  009F               	movwf	31	;volatile
  3230                           
  3231                           ;mcc_generated_files/eusart.c: 73:     RCSTA = 0x80;
  3232     033B  3080               	movlw	128
  3233     033C  009D               	movwf	29	;volatile
  3234                           
  3235                           ;mcc_generated_files/eusart.c: 76:     TXSTA = 0xB4;
  3236     033D  30B4               	movlw	180
  3237     033E  009E               	movwf	30	;volatile
  3238     033F                     l1539:
  3239                           
  3240                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0x00;
  3241     033F  019B               	clrf	27	;volatile
  3242     0340                     l1541:
  3243                           
  3244                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x00;
  3245     0340  019C               	clrf	28	;volatile
  3246     0341                     l1543:
  3247                           
  3248                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  3249     0341  3000               	movlw	0
  3250     0342  00F3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3251     0343  3000               	movlw	0
  3252     0344  00F4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3253     0345  3184  241B  3183   	fcall	_EUSART_SetFramingErrorHandler
  3254     0348                     l1545:
  3255                           
  3256                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  3257     0348  3000               	movlw	0
  3258     0349  00F3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3259     034A  3000               	movlw	0
  3260     034B  00F4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3261     034C  3184  2415  3183   	fcall	_EUSART_SetOverrunErrorHandler
  3262     034F                     l1547:
  3263                           
  3264                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  3265     034F  3000               	movlw	0
  3266     0350  00F3               	movwf	EUSART_SetErrorHandler@interruptHandler
  3267     0351  3000               	movlw	0
  3268     0352  00F4               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3269     0353  3184  2421  3183   	fcall	_EUSART_SetErrorHandler
  3270     0356                     l1549:
  3271                           
  3272                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  3273     0356  01F9               	clrf	_eusartRxLastError	;volatile
  3274     0357                     l154:
  3275     0357  0008               	return
  3276     0358                     __end_of_EUSART_Initialize:
  3277                           
  3278                           	psect	text16
  3279     0415                     __ptext16:	
  3280 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3281 ;; Defined at:
  3282 ;;		line 167 in file "mcc_generated_files/eusart.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  3285 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3297 ;;      Params:         2       0       0       0
  3298 ;;      Locals:         0       0       0       0
  3299 ;;      Temps:          0       0       0       0
  3300 ;;      Totals:         2       0       0       0
  3301 ;;Total ram usage:        2 bytes
  3302 ;; Hardware stack levels used: 1
  3303 ;; Hardware stack levels required when called: 3
  3304 ;; This function calls:
  3305 ;;		Nothing
  3306 ;; This function is called by:
  3307 ;;		_EUSART_Initialize
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311     0415                     _EUSART_SetOverrunErrorHandler:	
  3312                           ;psect for function _EUSART_SetOverrunErrorHandler
  3313                           
  3314     0415                     l1445:	
  3315                           ;incstack = 0
  3316                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3317                           
  3318                           
  3319                           ;mcc_generated_files/eusart.c: 168:     EUSART_OverrunErrorHandler = interruptHandler;
  3320     0415  0874               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3321     0416  0020               	movlb	0	; select bank0
  3322     0417  00D2               	movwf	_EUSART_OverrunErrorHandler+1
  3323     0418  0873               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3324     0419  00D1               	movwf	_EUSART_OverrunErrorHandler
  3325     041A                     l198:
  3326     041A  0008               	return
  3327     041B                     __end_of_EUSART_SetOverrunErrorHandler:
  3328                           
  3329                           	psect	text17
  3330     041B                     __ptext17:	
  3331 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3332 ;; Defined at:
  3333 ;;		line 163 in file "mcc_generated_files/eusart.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  3336 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;		None
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3348 ;;      Params:         2       0       0       0
  3349 ;;      Locals:         0       0       0       0
  3350 ;;      Temps:          0       0       0       0
  3351 ;;      Totals:         2       0       0       0
  3352 ;;Total ram usage:        2 bytes
  3353 ;; Hardware stack levels used: 1
  3354 ;; Hardware stack levels required when called: 3
  3355 ;; This function calls:
  3356 ;;		Nothing
  3357 ;; This function is called by:
  3358 ;;		_EUSART_Initialize
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362     041B                     _EUSART_SetFramingErrorHandler:	
  3363                           ;psect for function _EUSART_SetFramingErrorHandler
  3364                           
  3365     041B                     l1443:	
  3366                           ;incstack = 0
  3367                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3368                           
  3369                           
  3370                           ;mcc_generated_files/eusart.c: 164:     EUSART_FramingErrorHandler = interruptHandler;
  3371     041B  0874               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3372     041C  0020               	movlb	0	; select bank0
  3373     041D  00D4               	movwf	_EUSART_FramingErrorHandler+1
  3374     041E  0873               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3375     041F  00D3               	movwf	_EUSART_FramingErrorHandler
  3376     0420                     l195:
  3377     0420  0008               	return
  3378     0421                     __end_of_EUSART_SetFramingErrorHandler:
  3379                           
  3380                           	psect	text18
  3381     0421                     __ptext18:	
  3382 ;; *************** function _EUSART_SetErrorHandler *****************
  3383 ;; Defined at:
  3384 ;;		line 171 in file "mcc_generated_files/eusart.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  3387 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3399 ;;      Params:         2       0       0       0
  3400 ;;      Locals:         0       0       0       0
  3401 ;;      Temps:          0       0       0       0
  3402 ;;      Totals:         2       0       0       0
  3403 ;;Total ram usage:        2 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; Hardware stack levels required when called: 3
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_EUSART_Initialize
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413     0421                     _EUSART_SetErrorHandler:	
  3414                           ;psect for function _EUSART_SetErrorHandler
  3415                           
  3416     0421                     l1447:	
  3417                           ;incstack = 0
  3418                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3419                           
  3420                           
  3421                           ;mcc_generated_files/eusart.c: 172:     EUSART_ErrorHandler = interruptHandler;
  3422     0421  0874               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3423     0422  0020               	movlb	0	; select bank0
  3424     0423  00D0               	movwf	_EUSART_ErrorHandler+1
  3425     0424  0873               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3426     0425  00CF               	movwf	_EUSART_ErrorHandler
  3427     0426                     l201:
  3428     0426  0008               	return
  3429     0427                     __end_of_EUSART_SetErrorHandler:
  3430                           
  3431                           	psect	text19
  3432     02F6                     __ptext19:	
  3433 ;; *************** function _ComLn_Extract_Data *****************
  3434 ;; Defined at:
  3435 ;;		line 165 in file "main.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  Column          1    wreg     unsigned char 
  3438 ;;  Character       1    7[COMMON] PTR unsigned char [6]
  3439 ;;		 -> ZeroChar(48), 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  Column          1    2[BANK0 ] unsigned char 
  3442 ;;  i               1    4[BANK0 ] unsigned char 
  3443 ;;  ColData         1    3[BANK0 ] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      unsigned char 
  3446 ;; Registers used:
  3447 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3453 ;;      Params:         1       0       0       0
  3454 ;;      Locals:         0       3       0       0
  3455 ;;      Temps:          0       2       0       0
  3456 ;;      Totals:         1       5       0       0
  3457 ;;Total ram usage:        6 bytes
  3458 ;; Hardware stack levels used: 1
  3459 ;; Hardware stack levels required when called: 4
  3460 ;; This function calls:
  3461 ;;		___bmul
  3462 ;; This function is called by:
  3463 ;;		_main
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467     02F6                     _ComLn_Extract_Data:	
  3468                           ;psect for function _ComLn_Extract_Data
  3469                           
  3470                           
  3471                           ;incstack = 0
  3472                           ; Regs used in _ComLn_Extract_Data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3473                           ;ComLn_Extract_Data@Column stored from wreg
  3474     02F6  0020               	movlb	0	; select bank0
  3475     02F7  00A2               	movwf	ComLn_Extract_Data@Column
  3476     02F8                     l1779:
  3477                           
  3478                           ;main.c: 166:     uint8_t ColData = 0;
  3479     02F8  01A3               	clrf	ComLn_Extract_Data@ColData
  3480                           
  3481                           ;main.c: 167:     for(uint8_t i = 0; i<8; i++){
  3482     02F9  01A4               	clrf	ComLn_Extract_Data@i
  3483     02FA                     l1785:
  3484                           
  3485                           ;main.c: 168:         ColData = (ColData << 1) | (Character[i][Column]);
  3486     02FA  3006               	movlw	6
  3487     02FB  00F3               	movwf	___bmul@multiplicand
  3488     02FC  0824               	movf	ComLn_Extract_Data@i,w
  3489     02FD  3183  23A4  3182   	fcall	___bmul
  3490     0300  0777               	addwf	ComLn_Extract_Data@Character,w
  3491     0301  0020               	movlb	0	; select bank0
  3492     0302  00A0               	movwf	??_ComLn_Extract_Data
  3493     0303  0822               	movf	ComLn_Extract_Data@Column,w
  3494     0304  0720               	addwf	??_ComLn_Extract_Data,w
  3495     0305  00A1               	movwf	??_ComLn_Extract_Data+1
  3496     0306  0821               	movf	??_ComLn_Extract_Data+1,w
  3497     0307  0086               	movwf	6
  3498     0308  0187               	clrf	7
  3499     0309  3523               	lslf	ComLn_Extract_Data@ColData,w
  3500     030A  0401               	iorwf	1,w
  3501     030B  00A3               	movwf	ComLn_Extract_Data@ColData
  3502     030C                     l1787:
  3503                           
  3504                           ;main.c: 169:     }
  3505     030C  3001               	movlw	1
  3506     030D  00A0               	movwf	??_ComLn_Extract_Data
  3507     030E  0820               	movf	??_ComLn_Extract_Data,w
  3508     030F  07A4               	addwf	ComLn_Extract_Data@i,f
  3509     0310                     l1789:
  3510     0310  3008               	movlw	8
  3511     0311  0224               	subwf	ComLn_Extract_Data@i,w
  3512     0312  1C03               	skipc
  3513     0313  2B15               	goto	u1201
  3514     0314  2B16               	goto	u1200
  3515     0315                     u1201:
  3516     0315  2AFA               	goto	l1785
  3517     0316                     u1200:
  3518     0316                     l1791:
  3519                           
  3520                           ;main.c: 170:     return ColData;
  3521     0316  0823               	movf	ComLn_Extract_Data@ColData,w
  3522     0317                     l253:
  3523     0317  0008               	return
  3524     0318                     __end_of_ComLn_Extract_Data:
  3525                           
  3526                           	psect	text20
  3527     03A4                     __ptext20:	
  3528 ;; *************** function ___bmul *****************
  3529 ;; Defined at:
  3530 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  multiplier      1    wreg     unsigned char 
  3533 ;;  multiplicand    1    3[COMMON] unsigned char 
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;  multiplier      1    6[COMMON] unsigned char 
  3536 ;;  product         1    5[COMMON] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      unsigned char 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3546 ;;      Params:         1       0       0       0
  3547 ;;      Locals:         2       0       0       0
  3548 ;;      Temps:          1       0       0       0
  3549 ;;      Totals:         4       0       0       0
  3550 ;;Total ram usage:        4 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 3
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_ComLn_Extract_Data
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560     03A4                     ___bmul:	
  3561                           ;psect for function ___bmul
  3562                           
  3563                           
  3564                           ;incstack = 0
  3565                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3566                           ;___bmul@multiplier stored from wreg
  3567     03A4  00F6               	movwf	___bmul@multiplier
  3568     03A5                     l1565:
  3569     03A5  01F5               	clrf	___bmul@product
  3570     03A6                     l1567:
  3571     03A6  1C76               	btfss	___bmul@multiplier,0
  3572     03A7  2BA9               	goto	u871
  3573     03A8  2BAA               	goto	u870
  3574     03A9                     u871:
  3575     03A9  2BAE               	goto	l1571
  3576     03AA                     u870:
  3577     03AA                     l1569:
  3578     03AA  0873               	movf	___bmul@multiplicand,w
  3579     03AB  00F4               	movwf	??___bmul
  3580     03AC  0874               	movf	??___bmul,w
  3581     03AD  07F5               	addwf	___bmul@product,f
  3582     03AE                     l1571:
  3583     03AE  1003               	clrc
  3584     03AF  0DF3               	rlf	___bmul@multiplicand,f
  3585     03B0                     l1573:
  3586     03B0  1003               	clrc
  3587     03B1  0CF6               	rrf	___bmul@multiplier,f
  3588     03B2  0876               	movf	___bmul@multiplier,w
  3589     03B3  1D03               	btfss	3,2
  3590     03B4  2BB6               	goto	u881
  3591     03B5  2BB7               	goto	u880
  3592     03B6                     u881:
  3593     03B6  2BA6               	goto	l1567
  3594     03B7                     u880:
  3595     03B7                     l1575:
  3596     03B7  0875               	movf	___bmul@product,w
  3597     03B8                     l442:
  3598     03B8  0008               	return
  3599     03B9                     __end_of___bmul:
  3600                           
  3601                           	psect	intentry
  3602     0004                     __pintentry:	
  3603 ;; *************** function _INTERRUPT_InterruptManager *****************
  3604 ;; Defined at:
  3605 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0, pclath, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3619 ;;      Params:         0       0       0       0
  3620 ;;      Locals:         0       0       0       0
  3621 ;;      Temps:          0       0       0       0
  3622 ;;      Totals:         0       0       0       0
  3623 ;;Total ram usage:        0 bytes
  3624 ;; Hardware stack levels used: 1
  3625 ;; Hardware stack levels required when called: 2
  3626 ;; This function calls:
  3627 ;;		_TMR1_ISR
  3628 ;; This function is called by:
  3629 ;;		Interrupt level 1
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633     0004                     _INTERRUPT_InterruptManager:
  3634                           
  3635                           ;incstack = 0
  3636     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3637                           
  3638                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  3639     0005  3180               	pagesel	$
  3640     0006                     i1l1657:
  3641                           
  3642                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  3643     0006  1F0B               	btfss	11,6	;volatile
  3644     0007  2809               	goto	u97_21
  3645     0008  280A               	goto	u97_20
  3646     0009                     u97_21:
  3647     0009  2817               	goto	i1l218
  3648     000A                     u97_20:
  3649     000A                     i1l1659:
  3650                           
  3651                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  3652     000A  0021               	movlb	1	; select bank1
  3653     000B  1C11               	btfss	17,0	;volatile
  3654     000C  280E               	goto	u98_21
  3655     000D  280F               	goto	u98_20
  3656     000E                     u98_21:
  3657     000E  2817               	goto	i1l218
  3658     000F                     u98_20:
  3659     000F                     i1l1661:
  3660     000F  0020               	movlb	0	; select bank0
  3661     0010  1C11               	btfss	17,0	;volatile
  3662     0011  2813               	goto	u99_21
  3663     0012  2814               	goto	u99_20
  3664     0013                     u99_21:
  3665     0013  2817               	goto	i1l218
  3666     0014                     u99_20:
  3667     0014                     i1l1663:
  3668                           
  3669                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  3670     0014  3182  22AE  3180   	fcall	_TMR1_ISR
  3671     0017                     i1l218:	
  3672                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  3673                           
  3674     0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3675     0018  0009               	retfie
  3676     0019                     __end_of_INTERRUPT_InterruptManager:
  3677                           
  3678                           	psect	text22
  3679     02AE                     __ptext22:	
  3680 ;; *************** function _TMR1_ISR *****************
  3681 ;; Defined at:
  3682 ;;		line 206 in file "main.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;		None
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;		None
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      void 
  3689 ;; Registers used:
  3690 ;;		wreg, status,2, status,0, pclath, cstack
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3696 ;;      Params:         0       0       0       0
  3697 ;;      Locals:         0       0       0       0
  3698 ;;      Temps:          1       0       0       0
  3699 ;;      Totals:         1       0       0       0
  3700 ;;Total ram usage:        1 bytes
  3701 ;; Hardware stack levels used: 1
  3702 ;; Hardware stack levels required when called: 1
  3703 ;; This function calls:
  3704 ;;		NULL
  3705 ;;		_TMR1_DefaultInterruptHandler
  3706 ;;		_TMR1_WriteTimer
  3707 ;; This function is called by:
  3708 ;;		_INTERRUPT_InterruptManager
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712     02AE                     _TMR1_ISR:	
  3713                           ;psect for function _TMR1_ISR
  3714                           
  3715     02AE                     i1l1591:	
  3716                           ;incstack = 0
  3717                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  3718                           
  3719                           
  3720                           ;main.c: 210:     PIR1bits.TMR1IF = 0;
  3721     02AE  0020               	movlb	0	; select bank0
  3722     02AF  1011               	bcf	17,0	;volatile
  3723     02B0                     i1l1593:
  3724                           
  3725                           ;main.c: 211:     TMR1_WriteTimer(timer1ReloadVal);
  3726     02B0  084B               	movf	_timer1ReloadVal+1,w	;volatile
  3727     02B1  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  3728     02B2  084A               	movf	_timer1ReloadVal,w	;volatile
  3729     02B3  00F0               	movwf	TMR1_WriteTimer@timerVal
  3730     02B4  3183  23CB  3182   	fcall	_TMR1_WriteTimer
  3731     02B7                     i1l1595:
  3732                           
  3733                           ;main.c: 213:     NewDataFlag++;
  3734     02B7  3001               	movlw	1
  3735     02B8  00F2               	movwf	??_TMR1_ISR
  3736     02B9  0872               	movf	??_TMR1_ISR,w
  3737     02BA  07F8               	addwf	_NewDataFlag,f
  3738     02BB                     i1l1597:
  3739                           
  3740                           ;main.c: 214:     column++;
  3741     02BB  3001               	movlw	1
  3742     02BC  00F2               	movwf	??_TMR1_ISR
  3743     02BD  0872               	movf	??_TMR1_ISR,w
  3744     02BE  07FA               	addwf	_column,f	;volatile
  3745     02BF                     i1l1599:
  3746                           
  3747                           ;main.c: 215:     if(column > 2){
  3748     02BF  3003               	movlw	3
  3749     02C0  027A               	subwf	_column,w	;volatile
  3750     02C1  1C03               	skipc
  3751     02C2  2AC4               	goto	u90_21
  3752     02C3  2AC5               	goto	u90_20
  3753     02C4                     u90_21:
  3754     02C4  2AC6               	goto	i1l1603
  3755     02C5                     u90_20:
  3756     02C5                     i1l1601:
  3757                           
  3758                           ;main.c: 216:         column = 0;
  3759     02C5  01FA               	clrf	_column	;volatile
  3760     02C6                     i1l1603:
  3761                           
  3762                           ;main.c: 219:     if(TMR1_InterruptHandler)
  3763     02C6  0020               	movlb	0	; select bank0
  3764     02C7  0855               	movf	_TMR1_InterruptHandler,w
  3765     02C8  0456               	iorwf	_TMR1_InterruptHandler+1,w
  3766     02C9  1903               	btfsc	3,2
  3767     02CA  2ACC               	goto	u91_21
  3768     02CB  2ACD               	goto	u91_20
  3769     02CC                     u91_21:
  3770     02CC  2AD2               	goto	i1l266
  3771     02CD                     u91_20:
  3772     02CD                     i1l1605:
  3773                           
  3774                           ;main.c: 220:     {;main.c: 221:         TMR1_InterruptHandler();
  3775     02CD  0856               	movf	_TMR1_InterruptHandler+1,w
  3776     02CE  008A               	movwf	10
  3777     02CF  0855               	movf	_TMR1_InterruptHandler,w
  3778     02D0  000A               	callw
  3779     02D1  3182               	pagesel	$
  3780     02D2                     i1l266:
  3781     02D2  0008               	return
  3782     02D3                     __end_of_TMR1_ISR:
  3783                           
  3784                           	psect	text23
  3785     03CB                     __ptext23:	
  3786 ;; *************** function _TMR1_WriteTimer *****************
  3787 ;; Defined at:
  3788 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  timerVal        2    0[COMMON] unsigned short 
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;		None
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      void 
  3795 ;; Registers used:
  3796 ;;		wreg, status,2
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3802 ;;      Params:         2       0       0       0
  3803 ;;      Locals:         0       0       0       0
  3804 ;;      Temps:          0       0       0       0
  3805 ;;      Totals:         2       0       0       0
  3806 ;;Total ram usage:        2 bytes
  3807 ;; Hardware stack levels used: 1
  3808 ;; This function calls:
  3809 ;;		Nothing
  3810 ;; This function is called by:
  3811 ;;		_TMR1_ISR
  3812 ;;		_TMR1_Reload
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816     03CB                     _TMR1_WriteTimer:	
  3817                           ;psect for function _TMR1_WriteTimer
  3818                           
  3819     03CB                     i1l1551:	
  3820                           ;incstack = 0
  3821                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  3822                           
  3823                           
  3824                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  3825     03CB  0020               	movlb	0	; select bank0
  3826     03CC  1D18               	btfss	24,2	;volatile
  3827     03CD  2BCF               	goto	u86_21
  3828     03CE  2BD0               	goto	u86_20
  3829     03CF                     u86_21:
  3830     03CF  2BD7               	goto	i1l1561
  3831     03D0                     u86_20:
  3832     03D0                     i1l1553:
  3833                           
  3834                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  3835     03D0  1018               	bcf	24,0	;volatile
  3836     03D1                     i1l1555:
  3837                           
  3838                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  3839     03D1  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  3840     03D2  0097               	movwf	23	;volatile
  3841     03D3                     i1l1557:
  3842                           
  3843                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  3844     03D3  0870               	movf	TMR1_WriteTimer@timerVal,w
  3845     03D4  0096               	movwf	22	;volatile
  3846     03D5                     i1l1559:
  3847                           
  3848                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  3849     03D5  1418               	bsf	24,0	;volatile
  3850                           
  3851                           ;mcc_generated_files/tmr1.c: 133:     }
  3852     03D6  2BDB               	goto	i1l96
  3853     03D7                     i1l1561:
  3854                           
  3855                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  3856     03D7  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  3857     03D8  0097               	movwf	23	;volatile
  3858     03D9                     i1l1563:
  3859                           
  3860                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  3861     03D9  0870               	movf	TMR1_WriteTimer@timerVal,w
  3862     03DA  0096               	movwf	22	;volatile
  3863     03DB                     i1l96:
  3864     03DB  0008               	return
  3865     03DC                     __end_of_TMR1_WriteTimer:
  3866                           
  3867                           	psect	text24
  3868     042D                     __ptext24:	
  3869 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  3870 ;; Defined at:
  3871 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;		None
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;		None
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		None
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3885 ;;      Params:         0       0       0       0
  3886 ;;      Locals:         0       0       0       0
  3887 ;;      Temps:          0       0       0       0
  3888 ;;      Totals:         0       0       0       0
  3889 ;;Total ram usage:        0 bytes
  3890 ;; Hardware stack levels used: 1
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_TMR1_Initialize
  3895 ;;		_TMR1_ISR
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899     042D                     _TMR1_DefaultInterruptHandler:	
  3900                           ;psect for function _TMR1_DefaultInterruptHandler
  3901                           
  3902     042D                     i1l111:	
  3903                           ;incstack = 0
  3904                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  3905                           
  3906     042D  0008               	return
  3907     042E                     __end_of_TMR1_DefaultInterruptHandler:
  3908     007E                     btemp	set	126	;btemp
  3909     007E                     int$flags	set	126
  3910     007E                     wtemp0	set	126
  3911                           
  3912                           	psect	config
  3913                           
  3914                           ;Config register CONFIG1 @ 0x8007
  3915                           ;	Oscillator Selection
  3916                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3917                           ;	Watchdog Timer Enable
  3918                           ;	WDTE = OFF, WDT disabled
  3919                           ;	Power-up Timer Enable
  3920                           ;	PWRTE = OFF, PWRT disabled
  3921                           ;	MCLR Pin Function Select
  3922                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3923                           ;	Flash Program Memory Code Protection
  3924                           ;	CP = OFF, Program memory code protection is disabled
  3925                           ;	Data Memory Code Protection
  3926                           ;	CPD = OFF, Data memory code protection is disabled
  3927                           ;	Brown-out Reset Enable
  3928                           ;	BOREN = ON, Brown-out Reset enabled
  3929                           ;	Clock Out Enable
  3930                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3931                           ;	Internal/External Switchover
  3932                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3933                           ;	Fail-Safe Clock Monitor Enable
  3934                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3935     8007                     	org	32775
  3936     8007  3FE4               	dw	16356
  3937                           
  3938                           ;Config register CONFIG2 @ 0x8008
  3939                           ;	Flash Memory Self-Write Protection
  3940                           ;	WRT = OFF, Write protection off
  3941                           ;	PLL Enable
  3942                           ;	PLLEN = OFF, 4x PLL disabled
  3943                           ;	Stack Overflow/Underflow Reset Enable
  3944                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3945                           ;	Brown-out Reset Voltage Selection
  3946                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3947                           ;	In-Circuit Debugger Mode
  3948                           ;	DEBUG = 0x1, unprogrammed default
  3949                           ;	Low-Voltage Programming Enable
  3950                           ;	LVP = ON, Low-voltage programming enabled
  3951     8008                     	org	32776
  3952     8008  3EFF               	dw	16127

Data Sizes:
    Strings     32
    Constant    0
    Data        97
    BSS         43
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     38      55
    BANK1            80      0      80
    BANK2            64      0      48

Pointer List with Targets:

    ComLn_Extract_Data@Character	PTR unsigned char [6] size(1) Largest target is 48
		 -> ZeroChar(BANK1[48]), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_1(CODE[32]), 

    S1018$buffer	PTR unsigned char  size(2) Largest target is 0

    S1018$source	PTR const unsigned char  size(2) Largest target is 0

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 32
		 -> STR_1(CODE[32]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 32
		 -> STR_1(CODE[32]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_1(CODE[32]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _main->_ComLn_Extract_Data
    _vfpfcnvrt->___awdiv
    _vfpfcnvrt->___awmod
    _abs->___awmod
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _ComLn_Extract_Data->___bmul

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_TMR1_ISR
    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4972
                                             35 BANK0      3     3      0
                 _ComLn_Extract_Data
                  _EUSART_Initialize
                  _SYSTEM_Initialize
                    _TMR1_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               7     3      4    3653
                                             30 BANK0      5     1      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     3      5    3482
                                             22 BANK0      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           16    12      4    3021
                                              6 BANK0     16    12      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     782
                                              3 COMMON     4     0      4
                                              0 BANK0      5     5      0
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                              2 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     613
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     392
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ComLn_Extract_Data                                   6     5      1     464
                                              7 COMMON     1     0      1
                                              0 BANK0      5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     145
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             1     1      0     240
                                              2 COMMON     1     1      0
                                NULL *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ComLn_Extract_Data
     ___bmul
   _EUSART_Initialize
     _EUSART_SetErrorHandler
     _EUSART_SetFramingErrorHandler
     _EUSART_SetOverrunErrorHandler
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     NULL(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C2       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     26      37       6       68.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            40      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               40      0      30      10       75.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      C2      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Dec 09 00:52:49 2023

                                  main@ColData 0045                                     _AccessLine 004E  
                               ___bmul@product 0075                                             l25 03A3  
                                           l52 0402                                             l55 042A  
                                           l49 03FB                                             l82 038D  
                                 ___awdiv@sign 0021                     __end_of_ComLn_Extract_Data 0318  
                                          l201 0426                                            l108 0414  
                                          l154 0357                                            l253 0317  
                                          l442 03B8                                            l258 02F4  
                                          l195 0420                                            l259 02F4  
                                          l198 041A                                            l582 024D  
                                          l569 019A                                            l930 03CA  
                                          l923 0375                                            l917 013A  
                                          l942 01F9                                            l953 042C  
                                          l879 03EB                                            u600 018C  
                                          u520 0141                                            u601 018B  
                                          u521 0140                                            u610 0191  
                                          u530 014C                                            u611 0190  
                                          u531 014B                                            u540 015D  
                                          u541 015C                                            u710 01A1  
                                          u711 01A0                                            u560 016D  
                                          u720 01A7                                            u561 016C  
                                          u721 01A6                                            u730 01B7  
                                          u555 0161                                            u731 01B6  
                                          u580 017C                                            u740 01D8  
                                          u581 017B                                            u741 01D7  
                                          u750 03BE                                            u575 016E  
                                          u751 03BD                                            u585 0178  
                                          u745 01D4                                            u595 0182  
                                          u870 03AA                                            u871 03A9  
                                          u880 03B7                                            u881 03B6  
                              _timer1ReloadVal 004A                                            _abs 03B9  
                    ComLn_Extract_Data@ColData 0023                 ?_EUSART_SetFramingErrorHandler 0073  
                                 ___awmod@sign 0021                                            wreg 0009  
                                         ?_abs 0022                                           l1501 038E  
                                         l1341 0146                                           l1421 01A7  
                                         l1511 039E                                           l1503 0391  
                                         l1351 0157                                           l1343 0148  
                                         l1335 013B                                           l1423 01AC  
                                         l1513 03FC                                           l1505 0392  
                                         l1441 040F                                           l1521 0376  
                                         l1361 016D                                           l1353 015D  
                                         l1345 014C                                           l1337 013D  
                                         l1433 03B9                                           l1425 01B7  
                                         l1417 019B                                           l1443 041B  
                                         l1515 03FF                                           l1507 0395  
                                         l1531 0381                                           l1523 0378  
                                         l1363 017C                                           l1355 0160  
                                         l1371 018C                                           l1347 0151  
                                         l1339 0141                                           l1435 03BE  
                                         l1427 01D8                                           l1419 01A1  
                                         l1445 0415                                           l1541 0340  
                                         l1517 0400                                           l1509 0397  
                                         l1533 0383                                           l1525 037A  
                                         l1373 0191                                           l1365 0180  
                                         l1357 0165                                           l1349 0155  
                                         l1701 0226                                           l1437 03BF  
                                         l1429 01EF                                           l1447 0421  
                                         l1543 0341                                           l1535 038A  
                                         l1527 037C                                           l1519 0427  
                                         l1375 0196                                           l1367 0181  
                                         l1359 0169                                           l1711 0244  
                                         l1703 0230                                           l1545 0348  
                                         l1537 0338                                           l1529 037D  
                                         l1369 0186                                           l1713 0249  
                                         l1705 0234                                           l1721 0065  
                                         l1801 02D3                                           l1571 03AE  
                                         l1547 034F                                           l1539 033F  
                                         l1707 0239                                           l1731 008B  
                                         l1723 006C                                           l1811 02DE  
                                         l1803 02DC                                           l1573 03B0  
                                         l1565 03A5                                           l1549 0356  
                                         l1709 023F                                           l1741 00CA  
                                         l1733 0097                                           l1725 0070  
                                         l1717 004B                                           l1813 02E6  
                                         l1805 02DD                                           l1575 03B7  
                                         l1567 03A6                                           l1751 00EF  
                                         l1743 00DA                                           l1735 00A4  
                                         l1727 0077                                           l1719 005D  
                                         l1807 02DE                                           l1569 03AA  
                                         l1681 01FC                                           l1753 00F8  
                                         l1745 00E0                                           l1737 00A6  
                                         l1729 0081                                           l1809 02DE  
                                         l1691 0210                                           l1683 0200  
                                         l1755 010A                                           l1747 00E5  
                                         l1739 00AD                                           l1763 0120  
                                         l1771 035E                                           l1589 03EC  
                                         l1693 0216                                           l1685 0205  
                                         l1749 00EA                                           l1757 010F  
                                         l1773 0369                                           l1791 0316  
                                         l1695 0219                                           l1687 0207  
                                         l1679 01FA                                           l1759 0116  
                                         l1775 0373                                           l1785 02FA  
                                         l1697 021E                                           l1689 020B  
                                         l1769 0358                                           l1787 030C  
                                         l1779 02F8                                           l1699 0222  
                                         l1795 03DC                                           l1789 0310  
                                         l1797 03DF                                           STR_1 0318  
                                         u1000 0200                                           u1001 01FF  
                                         u1010 020B                                           u1011 020A  
                                         u1020 0216                                           u1100 0081  
                                         u1021 0215                                           u1101 0080  
                                         u1110 008B                                           u1111 008A  
                                         u1200 0316                                           u1040 0226  
                                         u1120 00AB                                           u1201 0315  
                                         u1041 0225                                           u1121 00A9  
                                         u1050 0230                                           u1130 00AC  
                                         u1051 022F                                           u1035 021A  
                                         u1140 00E0                                           u1141 00DF  
                                         u1070 023F                                           u1150 00E5  
                                         u1071 023E                                           u1055 022C  
                                         u1151 00E4                                           u1080 0244  
                                         u1160 00EA                                           u1081 0243  
                                         u1065 0235                                           u1161 00E9  
                                         u1170 00EF                                           u1090 005D  
                                         u1171 00EE                                           u1091 005C  
                                         u1180 0115                                           u1181 0114  
                                         _LATA 010C                                           u1190 0373  
                                         _LATB 010D                                           u1191 0372  
                                         i1l96 03DB                                           _WPUA 020C  
                                         _WPUB 020D                                           abs@a 0022  
                                         _dbuf 00D0                                           _main 02D3  
                                         _prec 0048                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0019                     ??_TMR1_SetInterruptHandler 0075  
                            ___bmul@multiplier 0076                                          ??_abs 0024  
                __end_of_OSCILLATOR_Initialize 0403                                          ?_main 0070  
                              __end_of___awdiv 019B                                __end_of___awmod 024E  
                              ___awdiv@divisor 0073                                          _T1CON 0018  
                                        i1l111 042D                                          i1l218 0017  
                                        i1l266 02D2                                ___awdiv@counter 0020  
                                        _RCREG 0199                                          _RCSTA 019D  
                                 vfpfcnvrt@fmt 0028                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TRISB 008D                                          u90_20 02C5  
                                        u90_21 02C4                                          u91_20 02CD  
                                        u91_21 02CC                                          u86_20 03D0  
                                        u86_21 03CF                                          u97_20 000A  
                                        u97_21 0009                                          _TXREG 019A  
                                        u98_20 000F                                          u98_21 000E  
                                        u99_20 0014                                          u99_21 0013  
                                        _TXSTA 019E                               __end_of_TMR1_ISR 02D3  
                                   _CommonLine 004D                                          _flags 004C  
                               _WDT_Initialize 0427                                          _fputc 019B  
                                        _width 0046                                          _putch 042C  
                      __end_of_TMR1_Initialize 038E                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                              _TMR1_WriteTimer 03CB                                __initialization 001A  
                                 __end_of_main 02F6                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 0043                         __end_of_WDT_Initialize 042B  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 0051  
                                       ?_fputc 0073                               ___awdiv@dividend 0075  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _BORCON 0116  
                                       _T1GCON 0019                        TMR1_WriteTimer@timerVal 0070  
                                       i1l1601 02C5                                         i1l1603 02C6  
                                       i1l1605 02CD                                         i1l1551 03CB  
                                       i1l1553 03D0                                         i1l1561 03D7  
                                       i1l1563 03D9                                         i1l1555 03D1  
                                       i1l1557 03D3                                         i1l1661 000F  
                                       i1l1559 03D5                                         i1l1591 02AE  
                                       i1l1663 0014                                         i1l1593 02B0  
                                       i1l1657 0006                                         i1l1595 02B7  
                                       i1l1659 000A                                         i1l1597 02BB  
                                       i1l1599 02BF                                         _OSCCON 0099  
                                vfpfcnvrt@done 002E                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
         __end_of_TMR1_DefaultInterruptHandler 042E                   _TMR1_DefaultInterruptHandler 042D  
                                 vfprintf@cfmt 003C                                         ___bmul 03A4  
                                    ??___awdiv 0077                                      ??___awmod 0077  
                                       _column 007A                               ___awdiv@quotient 0022  
                              ___awmod@divisor 0073                                ___awmod@counter 0020  
                                       _printf 03DC                                         fputc@c 0073  
                                 __pdataCOMMON 007A                                ?_WDT_Initialize 0070  
                                       putch@c 0070                               __end_of_vfprintf 0376  
     TMR1_SetInterruptHandler@InterruptHandler 0073                        __end_of_TMR1_WriteTimer 03DC  
                             ?_TMR1_Initialize 0070                              _SYSTEM_Initialize 03EC  
                      __end_of__initialization 0048                                    _NewDataFlag 0078  
                           ?_SYSTEM_Initialize 0070                            ___bmul@multiplicand 0073  
                               __pcstackCOMMON 0070                                   __pidataBANK1 024E  
                                 __pidataBANK2 027E                            ??_SYSTEM_Initialize 0075  
                                    ?_TMR1_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                                __end_of_fputc 01FA                                  __end_of_putch 042D  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 0075  
                                      ??_fputc 0020                      __end_of_SYSTEM_Initialize 03FC  
                                      ??_putch 0073                             _ComLn_Extract_Data 02F6  
                                   __pbssBANK0 0046                                     __pbssBANK1 00D0  
                          ?_ComLn_Extract_Data 0077                                     __pmaintext 02D3  
                                      ?___bmul 0073                                     ??_TMR1_ISR 0072  
                                   __pintentry 0004                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                      ?_printf 003E                           ??_ComLn_Extract_Data 0020  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0075  
                             ?_TMR1_WriteTimer 0070                                        _OneChar 0120  
                                      ___awdiv 013B                                        ___awmod 01FA  
                                    ?_vfprintf 0036                                        __ptext1 03DC  
                                      __ptext2 0358                                        __ptext3 004B  
                                      __ptext4 019B                                        __ptext5 042C  
                                      __ptext6 03B9                                        __ptext7 01FA  
                                      __ptext8 013B                                        __ptext9 03EC  
               ??_TMR1_DefaultInterruptHandler 0070                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 03FC                               ___awmod@dividend 0075  
                     ??_PIN_MANAGER_Initialize 0073                      ?_TMR1_SetInterruptHandler 0073  
                                      clrloop0 040A                           end_of_initialization 0048  
        __end_of_EUSART_SetOverrunErrorHandler 041B                  _EUSART_SetOverrunErrorHandler 0415  
                                      fputc@fp 0075                                        init_ram 0403  
                                      initloop 0404                              _EUSART_Initialize 0338  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 013B  
                                    _RCSTAbits 019D                               vfpfcnvrt@convarg 0031  
                                   ??_vfprintf 003B                            ??_EUSART_Initialize 0075  
                             ??_WDT_Initialize 0073                      __end_of_EUSART_Initialize 0358  
                                    _TXSTAbits 019E                            ComLn_Extract_Data@i 0024  
                               __end_of___bmul 03B9                     _EUSART_DefaultErrorHandler 0000  
                                  vfpfcnvrt@ap 0029                                    vfpfcnvrt@cp 002F  
                                  vfpfcnvrt@fp 0026                                  __pidataCOMMON 042B  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_printf 03EC  
                          start_initialization 001A                                    __end_of_abs 03CB  
               ?_EUSART_SetOverrunErrorHandler 0073                                    vfprintf@fmt 0038  
                   _EUSART_FramingErrorHandler 0053                                       ??___bmul 0074  
                       _EUSART_SetErrorHandler 0421                                    __pdataBANK1 00A0  
                                  __pdataBANK2 0120                                       ??_printf 0078  
                                  __pbssCOMMON 0078                                      ___latbits 0000  
                                __pcstackBANK0 0020                                      __pnvBANK0 004F  
                       _PIN_MANAGER_Initialize 038E               __end_of_TMR1_SetInterruptHandler 0415  
                                     ?___awdiv 0073                                       ?___awmod 0073  
                 ??_INTERRUPT_InterruptManager 0073                    ComLn_Extract_Data@Character 0077  
       EUSART_SetErrorHandler@interruptHandler 0073                       ComLn_Extract_Data@Column 0022  
                                    clear_ram0 0409                                       _PIE1bits 0091  
                            _eusartRxLastError 0079                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0075              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR1_ISR 02AE                                      _vfpfcnvrt 004B  
                            ??_TMR1_Initialize 0075                                     vfpfcnvrt@c 0035  
                                   vfprintf@ap 003A                                     vfprintf@fp 0036  
                      ??_OSCILLATOR_Initialize 0073                            _EUSART_ErrorHandler 004F  
                                     _ZeroChar 00A0                                     ?_vfpfcnvrt 0026  
                     _TMR1_SetInterruptHandler 040F                          _TMR1_InterruptHandler 0055  
                                     __ptext10 0427                                       __ptext11 0376  
                                     __ptext20 03A4                                       __ptext12 040F  
                                     __ptext13 038E                                     _T1GCONbits 0019  
                                     __ptext22 02AE                                       __ptext14 03FC  
                                     __ptext23 03CB                                       __ptext15 0338  
                                     __ptext24 042D                                       __ptext16 0415  
                                     __ptext17 041B                                       __ptext18 0421  
                                     __ptext19 02F6                        ?_EUSART_SetErrorHandler 0073  
EUSART_SetOverrunErrorHandler@interruptHandler 0073                                       int$flags 007E  
                                     _vfprintf 0358             __end_of_INTERRUPT_InterruptManager 0019  
                   _INTERRUPT_InterruptManager 0004                                      printf@fmt 003E  
        __end_of_EUSART_SetFramingErrorHandler 0421                  _EUSART_SetFramingErrorHandler 041B  
                            ??_TMR1_WriteTimer 0072                                     _INTCONbits 000B  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0427                                       printf@ap 0042  
EUSART_SetFramingErrorHandler@interruptHandler 0073                                    ??_vfpfcnvrt 002A  
                                __pstringtext1 0318                                  __pstringtext2 0000  
               __end_of_PIN_MANAGER_Initialize 03A4                                _TMR1_Initialize 0376  
