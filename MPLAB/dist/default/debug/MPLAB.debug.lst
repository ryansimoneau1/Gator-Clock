

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Dec 08 11:46:46 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16LF1826
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34     0000                     
    35                           ; Generated 06/07/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16LF1826 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     001E                     	;# 
    95     001F                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0095                     	;# 
   101     0096                     	;# 
   102     0097                     	;# 
   103     0098                     	;# 
   104     0099                     	;# 
   105     009A                     	;# 
   106     009B                     	;# 
   107     009B                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     0111                     	;# 
   114     0112                     	;# 
   115     0113                     	;# 
   116     0114                     	;# 
   117     0115                     	;# 
   118     0116                     	;# 
   119     0117                     	;# 
   120     0118                     	;# 
   121     0119                     	;# 
   122     011A                     	;# 
   123     011B                     	;# 
   124     011D                     	;# 
   125     011E                     	;# 
   126     018C                     	;# 
   127     018D                     	;# 
   128     0191                     	;# 
   129     0191                     	;# 
   130     0192                     	;# 
   131     0193                     	;# 
   132     0193                     	;# 
   133     0193                     	;# 
   134     0194                     	;# 
   135     0195                     	;# 
   136     0196                     	;# 
   137     0199                     	;# 
   138     019A                     	;# 
   139     019B                     	;# 
   140     019B                     	;# 
   141     019B                     	;# 
   142     019B                     	;# 
   143     019C                     	;# 
   144     019C                     	;# 
   145     019D                     	;# 
   146     019E                     	;# 
   147     019F                     	;# 
   148     020C                     	;# 
   149     020D                     	;# 
   150     0211                     	;# 
   151     0211                     	;# 
   152     0212                     	;# 
   153     0212                     	;# 
   154     0213                     	;# 
   155     0213                     	;# 
   156     0214                     	;# 
   157     0214                     	;# 
   158     0215                     	;# 
   159     0215                     	;# 
   160     0215                     	;# 
   161     0216                     	;# 
   162     0216                     	;# 
   163     0217                     	;# 
   164     0217                     	;# 
   165     0291                     	;# 
   166     0291                     	;# 
   167     0292                     	;# 
   168     0293                     	;# 
   169     0294                     	;# 
   170     0295                     	;# 
   171     0295                     	;# 
   172     0296                     	;# 
   173     0394                     	;# 
   174     0395                     	;# 
   175     0396                     	;# 
   176     039A                     	;# 
   177     039C                     	;# 
   178     039D                     	;# 
   179     039E                     	;# 
   180     039F                     	;# 
   181     0FE4                     	;# 
   182     0FE5                     	;# 
   183     0FE6                     	;# 
   184     0FE7                     	;# 
   185     0FE8                     	;# 
   186     0FE9                     	;# 
   187     0FEA                     	;# 
   188     0FEB                     	;# 
   189     0FED                     	;# 
   190     0FEE                     	;# 
   191     0FEF                     	;# 
   192     0000                     	;# 
   193     0001                     	;# 
   194     0002                     	;# 
   195     0003                     	;# 
   196     0004                     	;# 
   197     0005                     	;# 
   198     0006                     	;# 
   199     0007                     	;# 
   200     0008                     	;# 
   201     0009                     	;# 
   202     000A                     	;# 
   203     000B                     	;# 
   204     000C                     	;# 
   205     000D                     	;# 
   206     0011                     	;# 
   207     0012                     	;# 
   208     0015                     	;# 
   209     0016                     	;# 
   210     0016                     	;# 
   211     0017                     	;# 
   212     0018                     	;# 
   213     0019                     	;# 
   214     001A                     	;# 
   215     001B                     	;# 
   216     001C                     	;# 
   217     001E                     	;# 
   218     001F                     	;# 
   219     008C                     	;# 
   220     008D                     	;# 
   221     0091                     	;# 
   222     0092                     	;# 
   223     0095                     	;# 
   224     0096                     	;# 
   225     0097                     	;# 
   226     0098                     	;# 
   227     0099                     	;# 
   228     009A                     	;# 
   229     009B                     	;# 
   230     009B                     	;# 
   231     009C                     	;# 
   232     009D                     	;# 
   233     009E                     	;# 
   234     010C                     	;# 
   235     010D                     	;# 
   236     0111                     	;# 
   237     0112                     	;# 
   238     0113                     	;# 
   239     0114                     	;# 
   240     0115                     	;# 
   241     0116                     	;# 
   242     0117                     	;# 
   243     0118                     	;# 
   244     0119                     	;# 
   245     011A                     	;# 
   246     011B                     	;# 
   247     011D                     	;# 
   248     011E                     	;# 
   249     018C                     	;# 
   250     018D                     	;# 
   251     0191                     	;# 
   252     0191                     	;# 
   253     0192                     	;# 
   254     0193                     	;# 
   255     0193                     	;# 
   256     0193                     	;# 
   257     0194                     	;# 
   258     0195                     	;# 
   259     0196                     	;# 
   260     0199                     	;# 
   261     019A                     	;# 
   262     019B                     	;# 
   263     019B                     	;# 
   264     019B                     	;# 
   265     019B                     	;# 
   266     019C                     	;# 
   267     019C                     	;# 
   268     019D                     	;# 
   269     019E                     	;# 
   270     019F                     	;# 
   271     020C                     	;# 
   272     020D                     	;# 
   273     0211                     	;# 
   274     0211                     	;# 
   275     0212                     	;# 
   276     0212                     	;# 
   277     0213                     	;# 
   278     0213                     	;# 
   279     0214                     	;# 
   280     0214                     	;# 
   281     0215                     	;# 
   282     0215                     	;# 
   283     0215                     	;# 
   284     0216                     	;# 
   285     0216                     	;# 
   286     0217                     	;# 
   287     0217                     	;# 
   288     0291                     	;# 
   289     0291                     	;# 
   290     0292                     	;# 
   291     0293                     	;# 
   292     0294                     	;# 
   293     0295                     	;# 
   294     0295                     	;# 
   295     0296                     	;# 
   296     0394                     	;# 
   297     0395                     	;# 
   298     0396                     	;# 
   299     039A                     	;# 
   300     039C                     	;# 
   301     039D                     	;# 
   302     039E                     	;# 
   303     039F                     	;# 
   304     0FE4                     	;# 
   305     0FE5                     	;# 
   306     0FE6                     	;# 
   307     0FE7                     	;# 
   308     0FE8                     	;# 
   309     0FE9                     	;# 
   310     0FEA                     	;# 
   311     0FEB                     	;# 
   312     0FED                     	;# 
   313     0FEE                     	;# 
   314     0FEF                     	;# 
   315     0000                     	;# 
   316     0001                     	;# 
   317     0002                     	;# 
   318     0003                     	;# 
   319     0004                     	;# 
   320     0005                     	;# 
   321     0006                     	;# 
   322     0007                     	;# 
   323     0008                     	;# 
   324     0009                     	;# 
   325     000A                     	;# 
   326     000B                     	;# 
   327     000C                     	;# 
   328     000D                     	;# 
   329     0011                     	;# 
   330     0012                     	;# 
   331     0015                     	;# 
   332     0016                     	;# 
   333     0016                     	;# 
   334     0017                     	;# 
   335     0018                     	;# 
   336     0019                     	;# 
   337     001A                     	;# 
   338     001B                     	;# 
   339     001C                     	;# 
   340     001E                     	;# 
   341     001F                     	;# 
   342     008C                     	;# 
   343     008D                     	;# 
   344     0091                     	;# 
   345     0092                     	;# 
   346     0095                     	;# 
   347     0096                     	;# 
   348     0097                     	;# 
   349     0098                     	;# 
   350     0099                     	;# 
   351     009A                     	;# 
   352     009B                     	;# 
   353     009B                     	;# 
   354     009C                     	;# 
   355     009D                     	;# 
   356     009E                     	;# 
   357     010C                     	;# 
   358     010D                     	;# 
   359     0111                     	;# 
   360     0112                     	;# 
   361     0113                     	;# 
   362     0114                     	;# 
   363     0115                     	;# 
   364     0116                     	;# 
   365     0117                     	;# 
   366     0118                     	;# 
   367     0119                     	;# 
   368     011A                     	;# 
   369     011B                     	;# 
   370     011D                     	;# 
   371     011E                     	;# 
   372     018C                     	;# 
   373     018D                     	;# 
   374     0191                     	;# 
   375     0191                     	;# 
   376     0192                     	;# 
   377     0193                     	;# 
   378     0193                     	;# 
   379     0193                     	;# 
   380     0194                     	;# 
   381     0195                     	;# 
   382     0196                     	;# 
   383     0199                     	;# 
   384     019A                     	;# 
   385     019B                     	;# 
   386     019B                     	;# 
   387     019B                     	;# 
   388     019B                     	;# 
   389     019C                     	;# 
   390     019C                     	;# 
   391     019D                     	;# 
   392     019E                     	;# 
   393     019F                     	;# 
   394     020C                     	;# 
   395     020D                     	;# 
   396     0211                     	;# 
   397     0211                     	;# 
   398     0212                     	;# 
   399     0212                     	;# 
   400     0213                     	;# 
   401     0213                     	;# 
   402     0214                     	;# 
   403     0214                     	;# 
   404     0215                     	;# 
   405     0215                     	;# 
   406     0215                     	;# 
   407     0216                     	;# 
   408     0216                     	;# 
   409     0217                     	;# 
   410     0217                     	;# 
   411     0291                     	;# 
   412     0291                     	;# 
   413     0292                     	;# 
   414     0293                     	;# 
   415     0294                     	;# 
   416     0295                     	;# 
   417     0295                     	;# 
   418     0296                     	;# 
   419     0394                     	;# 
   420     0395                     	;# 
   421     0396                     	;# 
   422     039A                     	;# 
   423     039C                     	;# 
   424     039D                     	;# 
   425     039E                     	;# 
   426     039F                     	;# 
   427     0FE4                     	;# 
   428     0FE5                     	;# 
   429     0FE6                     	;# 
   430     0FE7                     	;# 
   431     0FE8                     	;# 
   432     0FE9                     	;# 
   433     0FEA                     	;# 
   434     0FEB                     	;# 
   435     0FED                     	;# 
   436     0FEE                     	;# 
   437     0FEF                     	;# 
   438     0000                     	;# 
   439     0001                     	;# 
   440     0002                     	;# 
   441     0003                     	;# 
   442     0004                     	;# 
   443     0005                     	;# 
   444     0006                     	;# 
   445     0007                     	;# 
   446     0008                     	;# 
   447     0009                     	;# 
   448     000A                     	;# 
   449     000B                     	;# 
   450     000C                     	;# 
   451     000D                     	;# 
   452     0011                     	;# 
   453     0012                     	;# 
   454     0015                     	;# 
   455     0016                     	;# 
   456     0016                     	;# 
   457     0017                     	;# 
   458     0018                     	;# 
   459     0019                     	;# 
   460     001A                     	;# 
   461     001B                     	;# 
   462     001C                     	;# 
   463     001E                     	;# 
   464     001F                     	;# 
   465     008C                     	;# 
   466     008D                     	;# 
   467     0091                     	;# 
   468     0092                     	;# 
   469     0095                     	;# 
   470     0096                     	;# 
   471     0097                     	;# 
   472     0098                     	;# 
   473     0099                     	;# 
   474     009A                     	;# 
   475     009B                     	;# 
   476     009B                     	;# 
   477     009C                     	;# 
   478     009D                     	;# 
   479     009E                     	;# 
   480     010C                     	;# 
   481     010D                     	;# 
   482     0111                     	;# 
   483     0112                     	;# 
   484     0113                     	;# 
   485     0114                     	;# 
   486     0115                     	;# 
   487     0116                     	;# 
   488     0117                     	;# 
   489     0118                     	;# 
   490     0119                     	;# 
   491     011A                     	;# 
   492     011B                     	;# 
   493     011D                     	;# 
   494     011E                     	;# 
   495     018C                     	;# 
   496     018D                     	;# 
   497     0191                     	;# 
   498     0191                     	;# 
   499     0192                     	;# 
   500     0193                     	;# 
   501     0193                     	;# 
   502     0193                     	;# 
   503     0194                     	;# 
   504     0195                     	;# 
   505     0196                     	;# 
   506     0199                     	;# 
   507     019A                     	;# 
   508     019B                     	;# 
   509     019B                     	;# 
   510     019B                     	;# 
   511     019B                     	;# 
   512     019C                     	;# 
   513     019C                     	;# 
   514     019D                     	;# 
   515     019E                     	;# 
   516     019F                     	;# 
   517     020C                     	;# 
   518     020D                     	;# 
   519     0211                     	;# 
   520     0211                     	;# 
   521     0212                     	;# 
   522     0212                     	;# 
   523     0213                     	;# 
   524     0213                     	;# 
   525     0214                     	;# 
   526     0214                     	;# 
   527     0215                     	;# 
   528     0215                     	;# 
   529     0215                     	;# 
   530     0216                     	;# 
   531     0216                     	;# 
   532     0217                     	;# 
   533     0217                     	;# 
   534     0291                     	;# 
   535     0291                     	;# 
   536     0292                     	;# 
   537     0293                     	;# 
   538     0294                     	;# 
   539     0295                     	;# 
   540     0295                     	;# 
   541     0296                     	;# 
   542     0394                     	;# 
   543     0395                     	;# 
   544     0396                     	;# 
   545     039A                     	;# 
   546     039C                     	;# 
   547     039D                     	;# 
   548     039E                     	;# 
   549     039F                     	;# 
   550     0FE4                     	;# 
   551     0FE5                     	;# 
   552     0FE6                     	;# 
   553     0FE7                     	;# 
   554     0FE8                     	;# 
   555     0FE9                     	;# 
   556     0FEA                     	;# 
   557     0FEB                     	;# 
   558     0FED                     	;# 
   559     0FEE                     	;# 
   560     0FEF                     	;# 
   561     0000                     	;# 
   562     0001                     	;# 
   563     0002                     	;# 
   564     0003                     	;# 
   565     0004                     	;# 
   566     0005                     	;# 
   567     0006                     	;# 
   568     0007                     	;# 
   569     0008                     	;# 
   570     0009                     	;# 
   571     000A                     	;# 
   572     000B                     	;# 
   573     000C                     	;# 
   574     000D                     	;# 
   575     0011                     	;# 
   576     0012                     	;# 
   577     0015                     	;# 
   578     0016                     	;# 
   579     0016                     	;# 
   580     0017                     	;# 
   581     0018                     	;# 
   582     0019                     	;# 
   583     001A                     	;# 
   584     001B                     	;# 
   585     001C                     	;# 
   586     001E                     	;# 
   587     001F                     	;# 
   588     008C                     	;# 
   589     008D                     	;# 
   590     0091                     	;# 
   591     0092                     	;# 
   592     0095                     	;# 
   593     0096                     	;# 
   594     0097                     	;# 
   595     0098                     	;# 
   596     0099                     	;# 
   597     009A                     	;# 
   598     009B                     	;# 
   599     009B                     	;# 
   600     009C                     	;# 
   601     009D                     	;# 
   602     009E                     	;# 
   603     010C                     	;# 
   604     010D                     	;# 
   605     0111                     	;# 
   606     0112                     	;# 
   607     0113                     	;# 
   608     0114                     	;# 
   609     0115                     	;# 
   610     0116                     	;# 
   611     0117                     	;# 
   612     0118                     	;# 
   613     0119                     	;# 
   614     011A                     	;# 
   615     011B                     	;# 
   616     011D                     	;# 
   617     011E                     	;# 
   618     018C                     	;# 
   619     018D                     	;# 
   620     0191                     	;# 
   621     0191                     	;# 
   622     0192                     	;# 
   623     0193                     	;# 
   624     0193                     	;# 
   625     0193                     	;# 
   626     0194                     	;# 
   627     0195                     	;# 
   628     0196                     	;# 
   629     0199                     	;# 
   630     019A                     	;# 
   631     019B                     	;# 
   632     019B                     	;# 
   633     019B                     	;# 
   634     019B                     	;# 
   635     019C                     	;# 
   636     019C                     	;# 
   637     019D                     	;# 
   638     019E                     	;# 
   639     019F                     	;# 
   640     020C                     	;# 
   641     020D                     	;# 
   642     0211                     	;# 
   643     0211                     	;# 
   644     0212                     	;# 
   645     0212                     	;# 
   646     0213                     	;# 
   647     0213                     	;# 
   648     0214                     	;# 
   649     0214                     	;# 
   650     0215                     	;# 
   651     0215                     	;# 
   652     0215                     	;# 
   653     0216                     	;# 
   654     0216                     	;# 
   655     0217                     	;# 
   656     0217                     	;# 
   657     0291                     	;# 
   658     0291                     	;# 
   659     0292                     	;# 
   660     0293                     	;# 
   661     0294                     	;# 
   662     0295                     	;# 
   663     0295                     	;# 
   664     0296                     	;# 
   665     0394                     	;# 
   666     0395                     	;# 
   667     0396                     	;# 
   668     039A                     	;# 
   669     039C                     	;# 
   670     039D                     	;# 
   671     039E                     	;# 
   672     039F                     	;# 
   673     0FE4                     	;# 
   674     0FE5                     	;# 
   675     0FE6                     	;# 
   676     0FE7                     	;# 
   677     0FE8                     	;# 
   678     0FE9                     	;# 
   679     0FEA                     	;# 
   680     0FEB                     	;# 
   681     0FED                     	;# 
   682     0FEE                     	;# 
   683     0FEF                     	;# 
   684     0000                     	;# 
   685     0001                     	;# 
   686     0002                     	;# 
   687     0003                     	;# 
   688     0004                     	;# 
   689     0005                     	;# 
   690     0006                     	;# 
   691     0007                     	;# 
   692     0008                     	;# 
   693     0009                     	;# 
   694     000A                     	;# 
   695     000B                     	;# 
   696     000C                     	;# 
   697     000D                     	;# 
   698     0011                     	;# 
   699     0012                     	;# 
   700     0015                     	;# 
   701     0016                     	;# 
   702     0016                     	;# 
   703     0017                     	;# 
   704     0018                     	;# 
   705     0019                     	;# 
   706     001A                     	;# 
   707     001B                     	;# 
   708     001C                     	;# 
   709     001E                     	;# 
   710     001F                     	;# 
   711     008C                     	;# 
   712     008D                     	;# 
   713     0091                     	;# 
   714     0092                     	;# 
   715     0095                     	;# 
   716     0096                     	;# 
   717     0097                     	;# 
   718     0098                     	;# 
   719     0099                     	;# 
   720     009A                     	;# 
   721     009B                     	;# 
   722     009B                     	;# 
   723     009C                     	;# 
   724     009D                     	;# 
   725     009E                     	;# 
   726     010C                     	;# 
   727     010D                     	;# 
   728     0111                     	;# 
   729     0112                     	;# 
   730     0113                     	;# 
   731     0114                     	;# 
   732     0115                     	;# 
   733     0116                     	;# 
   734     0117                     	;# 
   735     0118                     	;# 
   736     0119                     	;# 
   737     011A                     	;# 
   738     011B                     	;# 
   739     011D                     	;# 
   740     011E                     	;# 
   741     018C                     	;# 
   742     018D                     	;# 
   743     0191                     	;# 
   744     0191                     	;# 
   745     0192                     	;# 
   746     0193                     	;# 
   747     0193                     	;# 
   748     0193                     	;# 
   749     0194                     	;# 
   750     0195                     	;# 
   751     0196                     	;# 
   752     0199                     	;# 
   753     019A                     	;# 
   754     019B                     	;# 
   755     019B                     	;# 
   756     019B                     	;# 
   757     019B                     	;# 
   758     019C                     	;# 
   759     019C                     	;# 
   760     019D                     	;# 
   761     019E                     	;# 
   762     019F                     	;# 
   763     020C                     	;# 
   764     020D                     	;# 
   765     0211                     	;# 
   766     0211                     	;# 
   767     0212                     	;# 
   768     0212                     	;# 
   769     0213                     	;# 
   770     0213                     	;# 
   771     0214                     	;# 
   772     0214                     	;# 
   773     0215                     	;# 
   774     0215                     	;# 
   775     0215                     	;# 
   776     0216                     	;# 
   777     0216                     	;# 
   778     0217                     	;# 
   779     0217                     	;# 
   780     0291                     	;# 
   781     0291                     	;# 
   782     0292                     	;# 
   783     0293                     	;# 
   784     0294                     	;# 
   785     0295                     	;# 
   786     0295                     	;# 
   787     0296                     	;# 
   788     0394                     	;# 
   789     0395                     	;# 
   790     0396                     	;# 
   791     039A                     	;# 
   792     039C                     	;# 
   793     039D                     	;# 
   794     039E                     	;# 
   795     039F                     	;# 
   796     0FE4                     	;# 
   797     0FE5                     	;# 
   798     0FE6                     	;# 
   799     0FE7                     	;# 
   800     0FE8                     	;# 
   801     0FE9                     	;# 
   802     0FEA                     	;# 
   803     0FEB                     	;# 
   804     0FED                     	;# 
   805     0FEE                     	;# 
   806     0FEF                     	;# 
   807     0000                     	;# 
   808     0001                     	;# 
   809     0002                     	;# 
   810     0003                     	;# 
   811     0004                     	;# 
   812     0005                     	;# 
   813     0006                     	;# 
   814     0007                     	;# 
   815     0008                     	;# 
   816     0009                     	;# 
   817     000A                     	;# 
   818     000B                     	;# 
   819     000C                     	;# 
   820     000D                     	;# 
   821     0011                     	;# 
   822     0012                     	;# 
   823     0015                     	;# 
   824     0016                     	;# 
   825     0016                     	;# 
   826     0017                     	;# 
   827     0018                     	;# 
   828     0019                     	;# 
   829     001A                     	;# 
   830     001B                     	;# 
   831     001C                     	;# 
   832     001E                     	;# 
   833     001F                     	;# 
   834     008C                     	;# 
   835     008D                     	;# 
   836     0091                     	;# 
   837     0092                     	;# 
   838     0095                     	;# 
   839     0096                     	;# 
   840     0097                     	;# 
   841     0098                     	;# 
   842     0099                     	;# 
   843     009A                     	;# 
   844     009B                     	;# 
   845     009B                     	;# 
   846     009C                     	;# 
   847     009D                     	;# 
   848     009E                     	;# 
   849     010C                     	;# 
   850     010D                     	;# 
   851     0111                     	;# 
   852     0112                     	;# 
   853     0113                     	;# 
   854     0114                     	;# 
   855     0115                     	;# 
   856     0116                     	;# 
   857     0117                     	;# 
   858     0118                     	;# 
   859     0119                     	;# 
   860     011A                     	;# 
   861     011B                     	;# 
   862     011D                     	;# 
   863     011E                     	;# 
   864     018C                     	;# 
   865     018D                     	;# 
   866     0191                     	;# 
   867     0191                     	;# 
   868     0192                     	;# 
   869     0193                     	;# 
   870     0193                     	;# 
   871     0193                     	;# 
   872     0194                     	;# 
   873     0195                     	;# 
   874     0196                     	;# 
   875     0199                     	;# 
   876     019A                     	;# 
   877     019B                     	;# 
   878     019B                     	;# 
   879     019B                     	;# 
   880     019B                     	;# 
   881     019C                     	;# 
   882     019C                     	;# 
   883     019D                     	;# 
   884     019E                     	;# 
   885     019F                     	;# 
   886     020C                     	;# 
   887     020D                     	;# 
   888     0211                     	;# 
   889     0211                     	;# 
   890     0212                     	;# 
   891     0212                     	;# 
   892     0213                     	;# 
   893     0213                     	;# 
   894     0214                     	;# 
   895     0214                     	;# 
   896     0215                     	;# 
   897     0215                     	;# 
   898     0215                     	;# 
   899     0216                     	;# 
   900     0216                     	;# 
   901     0217                     	;# 
   902     0217                     	;# 
   903     0291                     	;# 
   904     0291                     	;# 
   905     0292                     	;# 
   906     0293                     	;# 
   907     0294                     	;# 
   908     0295                     	;# 
   909     0295                     	;# 
   910     0296                     	;# 
   911     0394                     	;# 
   912     0395                     	;# 
   913     0396                     	;# 
   914     039A                     	;# 
   915     039C                     	;# 
   916     039D                     	;# 
   917     039E                     	;# 
   918     039F                     	;# 
   919     0FE4                     	;# 
   920     0FE5                     	;# 
   921     0FE6                     	;# 
   922     0FE7                     	;# 
   923     0FE8                     	;# 
   924     0FE9                     	;# 
   925     0FEA                     	;# 
   926     0FEB                     	;# 
   927     0FED                     	;# 
   928     0FEE                     	;# 
   929     0FEF                     	;# 
   930                           
   931 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
   932     0000                     
   933 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
   934     0000                     
   935 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
   936     0000                     
   937                           	psect	idataCOMMON
   938     01A5                     __pidataCOMMON:
   939                           
   940                           ;initializer for _column
   941     01A5  3402               	retlw	2
   942                           
   943                           	psect	idataBANK0
   944     015B                     __pidataBANK0:
   945                           
   946                           ;initializer for _HChar
   947     015B  3407               	retlw	7
   948     015C  3402               	retlw	2
   949     015D  3407               	retlw	7
   950                           
   951                           ;initializer for _LChar
   952     015E  3401               	retlw	1
   953     015F  3401               	retlw	1
   954     0160  3407               	retlw	7
   955                           
   956                           ;initializer for _IChar
   957     0161  3405               	retlw	5
   958     0162  3407               	retlw	7
   959     0163  3405               	retlw	5
   960                           
   961                           ;initializer for _TChar
   962     0164  3404               	retlw	4
   963     0165  3407               	retlw	7
   964     0166  3404               	retlw	4
   965                           
   966                           ;initializer for _CChar
   967     0167  3405               	retlw	5
   968     0168  3405               	retlw	5
   969     0169  3407               	retlw	7
   970                           
   971                           	psect	nvCOMMON
   972     0079                     __pnvCOMMON:
   973     0079                     _TMR1_InterruptHandler:
   974     0079                     	ds	2
   975                           
   976                           	psect	nvBANK0
   977     002F                     __pnvBANK0:
   978     002F                     _EUSART_ErrorHandler:
   979     002F                     	ds	2
   980     0031                     _EUSART_OverrunErrorHandler:
   981     0031                     	ds	2
   982     0033                     _EUSART_FramingErrorHandler:
   983     0033                     	ds	2
   984     000B                     _INTCONbits	set	11
   985     0019                     _T1GCONbits	set	25
   986     0018                     _T1CONbits	set	24
   987     0018                     _T1CON	set	24
   988     0011                     _PIR1bits	set	17
   989     0016                     _TMR1L	set	22
   990     0017                     _TMR1H	set	23
   991     0019                     _T1GCON	set	25
   992     0091                     _PIE1bits	set	145
   993     0097                     _WDTCON	set	151
   994     0098                     _OSCTUNE	set	152
   995     0099                     _OSCCON	set	153
   996     0095                     _OPTION_REGbits	set	149
   997     008D                     _TRISB	set	141
   998     008C                     _TRISA	set	140
   999     010C                     _LATAbits	set	268
  1000     0116                     _BORCON	set	278
  1001     011E                     _APFCON1	set	286
  1002     011D                     _APFCON0	set	285
  1003     010D                     _LATB	set	269
  1004     010C                     _LATA	set	268
  1005     019A                     _TXREG	set	410
  1006     0199                     _RCREG	set	409
  1007     019D                     _RCSTAbits	set	413
  1008     019E                     _TXSTAbits	set	414
  1009     019C                     _SPBRGH	set	412
  1010     019B                     _SPBRGL	set	411
  1011     019E                     _TXSTA	set	414
  1012     019D                     _RCSTA	set	413
  1013     019F                     _BAUDCON	set	415
  1014     018C                     _ANSELA	set	396
  1015     018D                     _ANSELB	set	397
  1016     020C                     _WPUA	set	524
  1017     020D                     _WPUB	set	525
  1018                           
  1019                           	psect	cinit
  1020     001A                     start_initialization:	
  1021                           ; #config settings
  1022                           
  1023     001A                     __initialization:
  1024                           
  1025                           ; Initialize objects allocated to COMMON
  1026     001A  3181  21A5  3180   	fcall	__pidataCOMMON	;fetch initializer
  1027     001D  00FB               	movwf	__pdataCOMMON& (0+127)
  1028                           
  1029                           ; Initialize objects allocated to BANK0
  1030     001E  305B               	movlw	low __pidataBANK0
  1031     001F  0084               	movwf	4
  1032     0020  3081               	movlw	(high __pidataBANK0)| (0+128)
  1033     0021  0085               	movwf	5
  1034     0022  3020               	movlw	low __pdataBANK0
  1035     0023  0086               	movwf	6
  1036     0024  3000               	movlw	high __pdataBANK0
  1037     0025  0087               	movwf	7
  1038     0026  300F               	movlw	15
  1039     0027  3181  217F  3180   	fcall	init_ram
  1040                           
  1041                           ; Clear objects allocated to COMMON
  1042     002A  01F0               	clrf	__pbssCOMMON& (0+127)
  1043     002B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1044     002C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1045     002D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1046     002E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1047     002F  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1048     0030                     end_of_initialization:	
  1049                           ;End of C runtime variable initialization code
  1050                           
  1051     0030                     __end_of__initialization:
  1052     0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1053     0031  0020               	movlb	0
  1054     0032  2833               	ljmp	_main	;jump to C main() function
  1055                           
  1056                           	psect	bssCOMMON
  1057     0070                     __pbssCOMMON:
  1058     0070                     _timer1ReloadVal:
  1059     0070                     	ds	2
  1060     0072                     _CommonLine:
  1061     0072                     	ds	1
  1062     0073                     _AccessLine:
  1063     0073                     	ds	1
  1064     0074                     _NewDataFlag:
  1065     0074                     	ds	1
  1066     0075                     _eusartRxLastError:
  1067     0075                     	ds	1
  1068                           
  1069                           	psect	dataCOMMON
  1070     007B                     __pdataCOMMON:
  1071     007B                     _column:
  1072     007B                     	ds	1
  1073                           
  1074                           	psect	dataBANK0
  1075     0020                     __pdataBANK0:
  1076     0020                     _HChar:
  1077     0020                     	ds	3
  1078     0023                     _LChar:
  1079     0023                     	ds	3
  1080     0026                     _IChar:
  1081     0026                     	ds	3
  1082     0029                     _TChar:
  1083     0029                     	ds	3
  1084     002C                     _CChar:
  1085     002C                     	ds	3
  1086                           
  1087                           	psect	inittext
  1088     017F                     init_ram:
  1089     017F  00FE               	movwf	btemp
  1090     0180                     initloop:
  1091     0180  0012               	moviw fsr0++
  1092     0181  001E               	movwi fsr1++
  1093     0182  0BFE               	decfsz	btemp,f
  1094     0183  2980               	goto	initloop
  1095     0184  3400               	retlw	0
  1096                           
  1097                           	psect	cstackCOMMON
  1098     0076                     __pcstackCOMMON:
  1099     0076                     ?_OSCILLATOR_Initialize:
  1100     0076                     ?_WDT_Initialize:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103     0076                     ?_TMR1_Initialize:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106     0076                     ?_EUSART_Initialize:	
  1107                           ; 1 bytes @ 0x0
  1108                           
  1109     0076                     ?_TMR1_DefaultInterruptHandler:	
  1110                           ; 1 bytes @ 0x0
  1111                           
  1112     0076                     ??_TMR1_DefaultInterruptHandler:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115     0076                     ?_TMR1_ISR:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118     0076                     ?_PIN_MANAGER_Initialize:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121     0076                     ?_SYSTEM_Initialize:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124     0076                     ?_TMR1_WriteTimer:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127     0076                     ?_EUSART_is_tx_done:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130     0076                     ?_EUSART_Write:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133     0076                     ?_INTERRUPT_InterruptManager:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136     0076                     ?_main:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139     0076                     TMR1_WriteTimer@timerVal:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142                           
  1143                           ; 2 bytes @ 0x0
  1144     0076                     	ds	2
  1145     0078                     ??_TMR1_ISR:
  1146     0078                     ??_TMR1_WriteTimer:	
  1147                           ; 1 bytes @ 0x2
  1148                           
  1149                           
  1150                           ; 1 bytes @ 0x2
  1151     0078                     	ds	1
  1152     0079                     ??_INTERRUPT_InterruptManager:
  1153                           
  1154                           	psect	cstackBANK0
  1155     0035                     __pcstackBANK0:	
  1156                           ; 1 bytes @ 0x3
  1157                           
  1158     0035                     ??_OSCILLATOR_Initialize:
  1159     0035                     ??_WDT_Initialize:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162     0035                     ?_TMR1_SetInterruptHandler:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165     0035                     ?_EUSART_SetFramingErrorHandler:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168     0035                     ?_EUSART_SetOverrunErrorHandler:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171     0035                     ?_EUSART_SetErrorHandler:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174     0035                     ??_PIN_MANAGER_Initialize:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177     0035                     ??_EUSART_is_tx_done:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180     0035                     ??_EUSART_Write:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183     0035                     EUSART_Write@txData:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186     0035                     TMR1_SetInterruptHandler@InterruptHandler:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189     0035                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1190                           ; 2 bytes @ 0x0
  1191                           
  1192     0035                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1193                           ; 2 bytes @ 0x0
  1194                           
  1195     0035                     EUSART_SetErrorHandler@interruptHandler:	
  1196                           ; 2 bytes @ 0x0
  1197                           
  1198                           
  1199                           ; 2 bytes @ 0x0
  1200     0035                     	ds	2
  1201     0037                     ??_TMR1_Initialize:
  1202     0037                     ??_EUSART_Initialize:	
  1203                           ; 1 bytes @ 0x2
  1204                           
  1205     0037                     ??_TMR1_SetInterruptHandler:	
  1206                           ; 1 bytes @ 0x2
  1207                           
  1208     0037                     ??_EUSART_SetFramingErrorHandler:	
  1209                           ; 1 bytes @ 0x2
  1210                           
  1211     0037                     ??_EUSART_SetOverrunErrorHandler:	
  1212                           ; 1 bytes @ 0x2
  1213                           
  1214     0037                     ??_EUSART_SetErrorHandler:	
  1215                           ; 1 bytes @ 0x2
  1216                           
  1217     0037                     ??_SYSTEM_Initialize:	
  1218                           ; 1 bytes @ 0x2
  1219                           
  1220     0037                     ??_main:	
  1221                           ; 1 bytes @ 0x2
  1222                           
  1223                           
  1224                           	psect	maintext
  1225     0033                     __pmaintext:	
  1226                           ; 1 bytes @ 0x2
  1227 ;;
  1228 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1229 ;;
  1230 ;; *************** function _main *****************
  1231 ;; Defined at:
  1232 ;;		line 90 in file "main.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;		None
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;		None
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      void 
  1239 ;; Registers used:
  1240 ;;		wreg, status,2, status,0, pclath, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : B1F/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1246 ;;      Params:         0       0       0       0
  1247 ;;      Locals:         0       0       0       0
  1248 ;;      Temps:          0       0       0       0
  1249 ;;      Totals:         0       0       0       0
  1250 ;;Total ram usage:        0 bytes
  1251 ;; Hardware stack levels required when called: 6
  1252 ;; This function calls:
  1253 ;;		_EUSART_Initialize
  1254 ;;		_EUSART_Write
  1255 ;;		_EUSART_is_tx_done
  1256 ;;		_SYSTEM_Initialize
  1257 ;;		_TMR1_Initialize
  1258 ;; This function is called by:
  1259 ;;		Startup code after reset
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263     0033                     _main:	
  1264                           ;psect for function _main
  1265                           
  1266     0033                     l1359:	
  1267                           ;incstack = 0
  1268                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1269                           
  1270                           
  1271                           ;main.c: 92:     SYSTEM_Initialize();
  1272     0033  3181  214B  3180   	fcall	_SYSTEM_Initialize
  1273                           
  1274                           ;main.c: 94:     EUSART_Initialize();
  1275     0036  3180  20E8  3180   	fcall	_EUSART_Initialize
  1276                           
  1277                           ;main.c: 96:     TMR1_Initialize();
  1278     0039  3181  210B  3180   	fcall	_TMR1_Initialize
  1279     003C                     l1361:
  1280                           
  1281                           ;main.c: 102:     (INTCONbits.GIE = 1);
  1282     003C  178B               	bsf	11,7	;volatile
  1283     003D                     l1363:
  1284                           
  1285                           ;main.c: 105:     (INTCONbits.PEIE = 1);
  1286     003D  170B               	bsf	11,6	;volatile
  1287     003E                     l1365:
  1288     003E  0022               	movlb	2	; select bank2
  1289     003F  150C               	bsf	12,2	;volatile
  1290     0040                     l1367:
  1291     0040  160C               	bsf	12,4	;volatile
  1292     0041                     l273:
  1293                           
  1294                           ;main.c: 159:         EUSART_Write(0x20);
  1295     0041  3020               	movlw	32
  1296     0042  3181  216A  3180   	fcall	_EUSART_Write
  1297     0045                     l1369:	
  1298                           ;main.c: 160:         while(!EUSART_is_tx_done());
  1299                           
  1300     0045  3181  21A1  3180   	fcall	_EUSART_is_tx_done
  1301     0048  3A00               	xorlw	0
  1302     0049  1903               	skipnz
  1303     004A  284C               	goto	u371
  1304     004B  284D               	goto	u370
  1305     004C                     u371:
  1306     004C  2845               	goto	l1369
  1307     004D                     u370:
  1308     004D                     l276:
  1309                           
  1310                           ;main.c: 161:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1311     004D  3200               	nop2	;2 cycle nop
  1312     004E  3200               	nop2	;2 cycle nop
  1313     004F  3200               	nop2	;2 cycle nop
  1314     0050                     l1371:
  1315                           
  1316                           ;main.c: 162:         EUSART_Write(0xE0);
  1317     0050  30E0               	movlw	224
  1318     0051  3181  216A  3180   	fcall	_EUSART_Write
  1319     0054                     l1373:	
  1320                           ;main.c: 163:         while(!EUSART_is_tx_done());
  1321                           
  1322     0054  3181  21A1  3180   	fcall	_EUSART_is_tx_done
  1323     0057  3A00               	xorlw	0
  1324     0058  1903               	skipnz
  1325     0059  285B               	goto	u381
  1326     005A  285C               	goto	u380
  1327     005B                     u381:
  1328     005B  2854               	goto	l1373
  1329     005C                     u380:
  1330     005C                     l280:	
  1331                           ;main.c: 165:         do { LATAbits.LATA1 = 1; } while(0);
  1332                           
  1333     005C  0022               	movlb	2	; select bank2
  1334     005D  148C               	bsf	12,1	;volatile
  1335     005E                     l282:	
  1336                           ;main.c: 166:         do { LATAbits.LATA3 = 1; } while(0);
  1337                           
  1338     005E  158C               	bsf	12,3	;volatile
  1339     005F                     l283:
  1340                           
  1341                           ;main.c: 167:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1342     005F  3200               	nop2	;2 cycle nop
  1343     0060  3200               	nop2	;2 cycle nop
  1344     0061  3200               	nop2	;2 cycle nop
  1345     0062                     l284:	
  1346                           ;main.c: 168:         do { LATAbits.LATA1 = 0; } while(0);
  1347                           
  1348     0062  0022               	movlb	2	; select bank2
  1349     0063  108C               	bcf	12,1	;volatile
  1350     0064                     l286:	
  1351                           ;main.c: 169:         do { LATAbits.LATA3 = 0; } while(0);
  1352                           
  1353     0064  118C               	bcf	12,3	;volatile
  1354     0065                     l288:	
  1355                           ;main.c: 171:         do { LATAbits.LATA2 = 0; } while(0);
  1356                           
  1357     0065  110C               	bcf	12,2	;volatile
  1358     0066                     l290:	
  1359                           ;main.c: 172:         do { LATAbits.LATA4 = 0; } while(0);
  1360                           
  1361     0066  120C               	bcf	12,4	;volatile
  1362     0067                     l291:
  1363                           
  1364                           ;main.c: 173:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1365     0067  3200               	nop2	;2 cycle nop
  1366     0068  3200               	nop2	;2 cycle nop
  1367     0069  3200               	nop2	;2 cycle nop
  1368     006A                     l292:	
  1369                           ;main.c: 175:         do { LATAbits.LATA2 = 1; } while(0);
  1370                           
  1371     006A  0022               	movlb	2	; select bank2
  1372     006B  150C               	bsf	12,2	;volatile
  1373     006C                     l294:	
  1374                           ;main.c: 176:         do { LATAbits.LATA4 = 1; } while(0);
  1375                           
  1376     006C  160C               	bsf	12,4	;volatile
  1377     006D                     l1375:
  1378                           
  1379                           ;main.c: 177:         EUSART_Write(0x40);
  1380     006D  3040               	movlw	64
  1381     006E  3181  216A  3180   	fcall	_EUSART_Write
  1382     0071                     l1377:	
  1383                           ;main.c: 178:         while(!EUSART_is_tx_done());
  1384                           
  1385     0071  3181  21A1  3180   	fcall	_EUSART_is_tx_done
  1386     0074  3A00               	xorlw	0
  1387     0075  1903               	skipnz
  1388     0076  2878               	goto	u391
  1389     0077  2879               	goto	u390
  1390     0078                     u391:
  1391     0078  2871               	goto	l1377
  1392     0079                     u390:
  1393     0079                     l298:
  1394                           
  1395                           ;main.c: 179:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1396     0079  3200               	nop2	;2 cycle nop
  1397     007A  3200               	nop2	;2 cycle nop
  1398     007B  3200               	nop2	;2 cycle nop
  1399     007C                     l1379:
  1400                           
  1401                           ;main.c: 180:         EUSART_Write(0x40);
  1402     007C  3040               	movlw	64
  1403     007D  3181  216A  3180   	fcall	_EUSART_Write
  1404     0080                     l1381:	
  1405                           ;main.c: 181:         while(!EUSART_is_tx_done());
  1406                           
  1407     0080  3181  21A1  3180   	fcall	_EUSART_is_tx_done
  1408     0083  3A00               	xorlw	0
  1409     0084  1903               	skipnz
  1410     0085  2887               	goto	u401
  1411     0086  2888               	goto	u400
  1412     0087                     u401:
  1413     0087  2880               	goto	l1381
  1414     0088                     u400:
  1415     0088                     l302:	
  1416                           ;main.c: 183:         do { LATAbits.LATA1 = 1; } while(0);
  1417                           
  1418     0088  0022               	movlb	2	; select bank2
  1419     0089  148C               	bsf	12,1	;volatile
  1420     008A                     l304:	
  1421                           ;main.c: 184:         do { LATAbits.LATA3 = 1; } while(0);
  1422                           
  1423     008A  158C               	bsf	12,3	;volatile
  1424     008B                     l305:
  1425                           
  1426                           ;main.c: 185:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1427     008B  3200               	nop2	;2 cycle nop
  1428     008C  3200               	nop2	;2 cycle nop
  1429     008D  3200               	nop2	;2 cycle nop
  1430     008E                     l306:	
  1431                           ;main.c: 186:         do { LATAbits.LATA1 = 0; } while(0);
  1432                           
  1433     008E  0022               	movlb	2	; select bank2
  1434     008F  108C               	bcf	12,1	;volatile
  1435     0090                     l308:	
  1436                           ;main.c: 187:         do { LATAbits.LATA3 = 0; } while(0);
  1437                           
  1438     0090  118C               	bcf	12,3	;volatile
  1439     0091                     l310:	
  1440                           ;main.c: 189:         do { LATAbits.LATA2 = 0; } while(0);
  1441                           
  1442     0091  110C               	bcf	12,2	;volatile
  1443     0092                     l312:	
  1444                           ;main.c: 190:         do { LATAbits.LATA4 = 0; } while(0);
  1445                           
  1446     0092  120C               	bcf	12,4	;volatile
  1447     0093                     l313:
  1448                           
  1449                           ;main.c: 191:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1450     0093  3200               	nop2	;2 cycle nop
  1451     0094  3200               	nop2	;2 cycle nop
  1452     0095  3200               	nop2	;2 cycle nop
  1453     0096                     l314:	
  1454                           ;main.c: 193:         do { LATAbits.LATA2 = 1; } while(0);
  1455                           
  1456     0096  0022               	movlb	2	; select bank2
  1457     0097  150C               	bsf	12,2	;volatile
  1458     0098                     l316:	
  1459                           ;main.c: 194:         do { LATAbits.LATA4 = 1; } while(0);
  1460                           
  1461     0098  160C               	bsf	12,4	;volatile
  1462     0099                     l1383:
  1463                           
  1464                           ;main.c: 195:         EUSART_Write(0x80);
  1465     0099  3080               	movlw	128
  1466     009A  3181  216A  3180   	fcall	_EUSART_Write
  1467     009D                     l1385:	
  1468                           ;main.c: 196:         while(!EUSART_is_tx_done());
  1469                           
  1470     009D  3181  21A1  3180   	fcall	_EUSART_is_tx_done
  1471     00A0  3A00               	xorlw	0
  1472     00A1  1903               	skipnz
  1473     00A2  28A4               	goto	u411
  1474     00A3  28A5               	goto	u410
  1475     00A4                     u411:
  1476     00A4  289D               	goto	l1385
  1477     00A5                     u410:
  1478     00A5                     l320:
  1479                           
  1480                           ;main.c: 197:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1481     00A5  3200               	nop2	;2 cycle nop
  1482     00A6  3200               	nop2	;2 cycle nop
  1483     00A7  3200               	nop2	;2 cycle nop
  1484     00A8                     l1387:
  1485                           
  1486                           ;main.c: 198:         EUSART_Write(0xE0);
  1487     00A8  30E0               	movlw	224
  1488     00A9  3181  216A  3180   	fcall	_EUSART_Write
  1489     00AC                     l1389:	
  1490                           ;main.c: 199:         while(!EUSART_is_tx_done());
  1491                           
  1492     00AC  3181  21A1  3180   	fcall	_EUSART_is_tx_done
  1493     00AF  3A00               	xorlw	0
  1494     00B0  1903               	skipnz
  1495     00B1  28B3               	goto	u421
  1496     00B2  28B4               	goto	u420
  1497     00B3                     u421:
  1498     00B3  28AC               	goto	l1389
  1499     00B4                     u420:
  1500     00B4                     l324:	
  1501                           ;main.c: 201:         do { LATAbits.LATA1 = 1; } while(0);
  1502                           
  1503     00B4  0022               	movlb	2	; select bank2
  1504     00B5  148C               	bsf	12,1	;volatile
  1505     00B6                     l326:	
  1506                           ;main.c: 202:         do { LATAbits.LATA3 = 1; } while(0);
  1507                           
  1508     00B6  158C               	bsf	12,3	;volatile
  1509     00B7                     l327:
  1510                           
  1511                           ;main.c: 203:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1512     00B7  3200               	nop2	;2 cycle nop
  1513     00B8  3200               	nop2	;2 cycle nop
  1514     00B9  3200               	nop2	;2 cycle nop
  1515     00BA                     l328:	
  1516                           ;main.c: 204:         do { LATAbits.LATA1 = 0; } while(0);
  1517                           
  1518     00BA  0022               	movlb	2	; select bank2
  1519     00BB  108C               	bcf	12,1	;volatile
  1520     00BC                     l330:	
  1521                           ;main.c: 205:         do { LATAbits.LATA3 = 0; } while(0);
  1522                           
  1523     00BC  118C               	bcf	12,3	;volatile
  1524     00BD                     l332:	
  1525                           ;main.c: 207:         do { LATAbits.LATA2 = 0; } while(0);
  1526                           
  1527     00BD  110C               	bcf	12,2	;volatile
  1528     00BE                     l334:	
  1529                           ;main.c: 208:         do { LATAbits.LATA4 = 0; } while(0);
  1530                           
  1531     00BE  120C               	bcf	12,4	;volatile
  1532     00BF                     l335:
  1533                           
  1534                           ;main.c: 209:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1535     00BF  3200               	nop2	;2 cycle nop
  1536     00C0  3200               	nop2	;2 cycle nop
  1537     00C1  3200               	nop2	;2 cycle nop
  1538     00C2  283E               	goto	l1365
  1539     00C3  2819               	ljmp	start
  1540     00C4                     __end_of_main:
  1541                           
  1542                           	psect	text1
  1543     014B                     __ptext1:	
  1544 ;; *************** function _SYSTEM_Initialize *****************
  1545 ;; Defined at:
  1546 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;		None
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      void 
  1553 ;; Registers used:
  1554 ;;		wreg, status,2, status,0, pclath, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1560 ;;      Params:         0       0       0       0
  1561 ;;      Locals:         0       0       0       0
  1562 ;;      Temps:          0       0       0       0
  1563 ;;      Totals:         0       0       0       0
  1564 ;;Total ram usage:        0 bytes
  1565 ;; Hardware stack levels used: 1
  1566 ;; Hardware stack levels required when called: 5
  1567 ;; This function calls:
  1568 ;;		_EUSART_Initialize
  1569 ;;		_OSCILLATOR_Initialize
  1570 ;;		_PIN_MANAGER_Initialize
  1571 ;;		_TMR1_Initialize
  1572 ;;		_WDT_Initialize
  1573 ;; This function is called by:
  1574 ;;		_main
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578     014B                     _SYSTEM_Initialize:	
  1579                           ;psect for function _SYSTEM_Initialize
  1580                           
  1581     014B                     l1349:	
  1582                           ;incstack = 0
  1583                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1584                           
  1585                           
  1586                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1587     014B  3181  2124  3181   	fcall	_PIN_MANAGER_Initialize
  1588                           
  1589                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1590     014E  3181  2178  3181   	fcall	_OSCILLATOR_Initialize
  1591                           
  1592                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1593     0151  3181  219D  3181   	fcall	_WDT_Initialize
  1594                           
  1595                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1596     0154  3181  210B  3181   	fcall	_TMR1_Initialize
  1597                           
  1598                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  1599     0157  3180  20E8  3181   	fcall	_EUSART_Initialize
  1600     015A                     l49:
  1601     015A  0008               	return
  1602     015B                     __end_of_SYSTEM_Initialize:
  1603                           
  1604                           	psect	text2
  1605     019D                     __ptext2:	
  1606 ;; *************** function _WDT_Initialize *****************
  1607 ;; Defined at:
  1608 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1622 ;;      Params:         0       0       0       0
  1623 ;;      Locals:         0       0       0       0
  1624 ;;      Temps:          0       0       0       0
  1625 ;;      Totals:         0       0       0       0
  1626 ;;Total ram usage:        0 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; Hardware stack levels required when called: 3
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_SYSTEM_Initialize
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636     019D                     _WDT_Initialize:	
  1637                           ;psect for function _WDT_Initialize
  1638                           
  1639     019D                     l1317:	
  1640                           ;incstack = 0
  1641                           ; Regs used in _WDT_Initialize: [wreg]
  1642                           
  1643                           
  1644                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  1645     019D  3016               	movlw	22
  1646     019E  0021               	movlb	1	; select bank1
  1647     019F  0097               	movwf	23	;volatile
  1648     01A0                     l55:
  1649     01A0  0008               	return
  1650     01A1                     __end_of_WDT_Initialize:
  1651                           
  1652                           	psect	text3
  1653     010B                     __ptext3:	
  1654 ;; *************** function _TMR1_Initialize *****************
  1655 ;; Defined at:
  1656 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;		None
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0, pclath, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1670 ;;      Params:         0       0       0       0
  1671 ;;      Locals:         0       0       0       0
  1672 ;;      Temps:          0       0       0       0
  1673 ;;      Totals:         0       0       0       0
  1674 ;;Total ram usage:        0 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; Hardware stack levels required when called: 4
  1677 ;; This function calls:
  1678 ;;		_TMR1_SetInterruptHandler
  1679 ;; This function is called by:
  1680 ;;		_SYSTEM_Initialize
  1681 ;;		_main
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685     010B                     _TMR1_Initialize:	
  1686                           ;psect for function _TMR1_Initialize
  1687                           
  1688     010B                     l1319:	
  1689                           ;incstack = 0
  1690                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1691                           
  1692                           
  1693                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1694     010B  0020               	movlb	0	; select bank0
  1695     010C  0199               	clrf	25	;volatile
  1696     010D                     l1321:
  1697                           
  1698                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xFC;
  1699     010D  30FC               	movlw	252
  1700     010E  0097               	movwf	23	;volatile
  1701     010F                     l1323:
  1702                           
  1703                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x18;
  1704     010F  3018               	movlw	24
  1705     0110  0096               	movwf	22	;volatile
  1706     0111                     l1325:
  1707                           
  1708                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1709     0111  1011               	bcf	17,0	;volatile
  1710     0112                     l1327:
  1711                           
  1712                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1713     0112  0817               	movf	23,w	;volatile
  1714     0113  00F1               	movwf	_timer1ReloadVal+1	;volatile
  1715     0114  0816               	movf	22,w	;volatile
  1716     0115  00F0               	movwf	_timer1ReloadVal	;volatile
  1717     0116                     l1329:
  1718                           
  1719                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1720     0116  0021               	movlb	1	; select bank1
  1721     0117  1411               	bsf	17,0	;volatile
  1722     0118                     l1331:
  1723                           
  1724                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1725     0118  30A6               	movlw	low _TMR1_DefaultInterruptHandler
  1726     0119  0020               	movlb	0	; select bank0
  1727     011A  00B5               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1728     011B  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1729     011C  00B6               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1730     011D  3181  2185  3181   	fcall	_TMR1_SetInterruptHandler
  1731     0120                     l1333:
  1732                           
  1733                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  1734     0120  3001               	movlw	1
  1735     0121  0020               	movlb	0	; select bank0
  1736     0122  0098               	movwf	24	;volatile
  1737     0123                     l82:
  1738     0123  0008               	return
  1739     0124                     __end_of_TMR1_Initialize:
  1740                           
  1741                           	psect	text4
  1742     0185                     __ptext4:	
  1743 ;; *************** function _TMR1_SetInterruptHandler *****************
  1744 ;; Defined at:
  1745 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1748 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1760 ;;      Params:         0       2       0       0
  1761 ;;      Locals:         0       0       0       0
  1762 ;;      Temps:          0       0       0       0
  1763 ;;      Totals:         0       2       0       0
  1764 ;;Total ram usage:        2 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; Hardware stack levels required when called: 3
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_TMR1_Initialize
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774     0185                     _TMR1_SetInterruptHandler:	
  1775                           ;psect for function _TMR1_SetInterruptHandler
  1776                           
  1777     0185                     l1291:	
  1778                           ;incstack = 0
  1779                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1780                           
  1781                           
  1782                           ;mcc_generated_files/tmr1.c: 178:     TMR1_InterruptHandler = InterruptHandler;
  1783     0185  0020               	movlb	0	; select bank0
  1784     0186  0836               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1785     0187  00FA               	movwf	_TMR1_InterruptHandler+1
  1786     0188  0835               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1787     0189  00F9               	movwf	_TMR1_InterruptHandler
  1788     018A                     l108:
  1789     018A  0008               	return
  1790     018B                     __end_of_TMR1_SetInterruptHandler:
  1791                           
  1792                           	psect	text5
  1793     0124                     __ptext5:	
  1794 ;; *************** function _PIN_MANAGER_Initialize *****************
  1795 ;; Defined at:
  1796 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;		None
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;		None
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		wreg, status,2
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1810 ;;      Params:         0       0       0       0
  1811 ;;      Locals:         0       0       0       0
  1812 ;;      Temps:          0       0       0       0
  1813 ;;      Totals:         0       0       0       0
  1814 ;;Total ram usage:        0 bytes
  1815 ;; Hardware stack levels used: 1
  1816 ;; Hardware stack levels required when called: 3
  1817 ;; This function calls:
  1818 ;;		Nothing
  1819 ;; This function is called by:
  1820 ;;		_SYSTEM_Initialize
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824     0124                     _PIN_MANAGER_Initialize:	
  1825                           ;psect for function _PIN_MANAGER_Initialize
  1826                           
  1827     0124                     l1299:	
  1828                           ;incstack = 0
  1829                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1830                           
  1831                           
  1832                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x15;
  1833     0124  3015               	movlw	21
  1834     0125  0022               	movlb	2	; select bank2
  1835     0126  008C               	movwf	12	;volatile
  1836     0127                     l1301:
  1837                           
  1838                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1839     0127  018D               	clrf	13	;volatile
  1840     0128                     l1303:
  1841                           
  1842                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xE0;
  1843     0128  30E0               	movlw	224
  1844     0129  0021               	movlb	1	; select bank1
  1845     012A  008C               	movwf	12	;volatile
  1846     012B                     l1305:
  1847                           
  1848                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  1849     012B  30FF               	movlw	255
  1850     012C  008D               	movwf	13	;volatile
  1851     012D                     l1307:
  1852                           
  1853                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF8;
  1854     012D  30F8               	movlw	248
  1855     012E  0023               	movlb	3	; select bank3
  1856     012F  008D               	movwf	13	;volatile
  1857                           
  1858                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x00;
  1859     0130  018C               	clrf	12	;volatile
  1860                           
  1861                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  1862     0131  0024               	movlb	4	; select bank4
  1863     0132  018D               	clrf	13	;volatile
  1864                           
  1865                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  1866     0133  018C               	clrf	12	;volatile
  1867     0134                     l1309:
  1868                           
  1869                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  1870     0134  0021               	movlb	1	; select bank1
  1871     0135  1795               	bsf	21,7	;volatile
  1872                           
  1873                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  1874     0136  0022               	movlb	2	; select bank2
  1875     0137  019D               	clrf	29	;volatile
  1876                           
  1877                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  1878     0138  019E               	clrf	30	;volatile
  1879     0139                     l25:
  1880     0139  0008               	return
  1881     013A                     __end_of_PIN_MANAGER_Initialize:
  1882                           
  1883                           	psect	text6
  1884     0178                     __ptext6:	
  1885 ;; *************** function _OSCILLATOR_Initialize *****************
  1886 ;; Defined at:
  1887 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;		None
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1901 ;;      Params:         0       0       0       0
  1902 ;;      Locals:         0       0       0       0
  1903 ;;      Temps:          0       0       0       0
  1904 ;;      Totals:         0       0       0       0
  1905 ;;Total ram usage:        0 bytes
  1906 ;; Hardware stack levels used: 1
  1907 ;; Hardware stack levels required when called: 3
  1908 ;; This function calls:
  1909 ;;		Nothing
  1910 ;; This function is called by:
  1911 ;;		_SYSTEM_Initialize
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915     0178                     _OSCILLATOR_Initialize:	
  1916                           ;psect for function _OSCILLATOR_Initialize
  1917                           
  1918     0178                     l1311:	
  1919                           ;incstack = 0
  1920                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1921                           
  1922                           
  1923                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x48;
  1924     0178  3048               	movlw	72
  1925     0179  0021               	movlb	1	; select bank1
  1926     017A  0099               	movwf	25	;volatile
  1927     017B                     l1313:
  1928                           
  1929                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  1930     017B  0198               	clrf	24	;volatile
  1931     017C                     l1315:
  1932                           
  1933                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  1934     017C  0022               	movlb	2	; select bank2
  1935     017D  0196               	clrf	22	;volatile
  1936     017E                     l52:
  1937     017E  0008               	return
  1938     017F                     __end_of_OSCILLATOR_Initialize:
  1939                           
  1940                           	psect	text7
  1941     00E8                     __ptext7:	
  1942 ;; *************** function _EUSART_Initialize *****************
  1943 ;; Defined at:
  1944 ;;		line 65 in file "mcc_generated_files/eusart.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0, pclath, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1958 ;;      Params:         0       0       0       0
  1959 ;;      Locals:         0       0       0       0
  1960 ;;      Temps:          0       0       0       0
  1961 ;;      Totals:         0       0       0       0
  1962 ;;Total ram usage:        0 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 4
  1965 ;; This function calls:
  1966 ;;		_EUSART_SetErrorHandler
  1967 ;;		_EUSART_SetFramingErrorHandler
  1968 ;;		_EUSART_SetOverrunErrorHandler
  1969 ;; This function is called by:
  1970 ;;		_SYSTEM_Initialize
  1971 ;;		_main
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975     00E8                     _EUSART_Initialize:	
  1976                           ;psect for function _EUSART_Initialize
  1977                           
  1978     00E8                     l1335:	
  1979                           ;incstack = 0
  1980                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1981                           
  1982                           
  1983                           ;mcc_generated_files/eusart.c: 70:     BAUDCON = 0x18;
  1984     00E8  3018               	movlw	24
  1985     00E9  0023               	movlb	3	; select bank3
  1986     00EA  009F               	movwf	31	;volatile
  1987                           
  1988                           ;mcc_generated_files/eusart.c: 73:     RCSTA = 0x80;
  1989     00EB  3080               	movlw	128
  1990     00EC  009D               	movwf	29	;volatile
  1991                           
  1992                           ;mcc_generated_files/eusart.c: 76:     TXSTA = 0xB4;
  1993     00ED  30B4               	movlw	180
  1994     00EE  009E               	movwf	30	;volatile
  1995     00EF                     l1337:
  1996                           
  1997                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0x00;
  1998     00EF  019B               	clrf	27	;volatile
  1999     00F0                     l1339:
  2000                           
  2001                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x00;
  2002     00F0  019C               	clrf	28	;volatile
  2003     00F1                     l1341:
  2004                           
  2005                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  2006     00F1  3000               	movlw	0
  2007     00F2  0020               	movlb	0	; select bank0
  2008     00F3  00B5               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  2009     00F4  3000               	movlw	0
  2010     00F5  00B6               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  2011     00F6  3181  2191  3180   	fcall	_EUSART_SetFramingErrorHandler
  2012     00F9                     l1343:
  2013                           
  2014                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  2015     00F9  3000               	movlw	0
  2016     00FA  0020               	movlb	0	; select bank0
  2017     00FB  00B5               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  2018     00FC  3000               	movlw	0
  2019     00FD  00B6               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  2020     00FE  3181  218B  3180   	fcall	_EUSART_SetOverrunErrorHandler
  2021     0101                     l1345:
  2022                           
  2023                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  2024     0101  3000               	movlw	0
  2025     0102  0020               	movlb	0	; select bank0
  2026     0103  00B5               	movwf	EUSART_SetErrorHandler@interruptHandler
  2027     0104  3000               	movlw	0
  2028     0105  00B6               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  2029     0106  3181  2197  3180   	fcall	_EUSART_SetErrorHandler
  2030     0109                     l1347:
  2031                           
  2032                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  2033     0109  01F5               	clrf	_eusartRxLastError	;volatile
  2034     010A                     l154:
  2035     010A  0008               	return
  2036     010B                     __end_of_EUSART_Initialize:
  2037                           
  2038                           	psect	text8
  2039     018B                     __ptext8:	
  2040 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2041 ;; Defined at:
  2042 ;;		line 167 in file "mcc_generated_files/eusart.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  2045 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2057 ;;      Params:         0       2       0       0
  2058 ;;      Locals:         0       0       0       0
  2059 ;;      Temps:          0       0       0       0
  2060 ;;      Totals:         0       2       0       0
  2061 ;;Total ram usage:        2 bytes
  2062 ;; Hardware stack levels used: 1
  2063 ;; Hardware stack levels required when called: 3
  2064 ;; This function calls:
  2065 ;;		Nothing
  2066 ;; This function is called by:
  2067 ;;		_EUSART_Initialize
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071     018B                     _EUSART_SetOverrunErrorHandler:	
  2072                           ;psect for function _EUSART_SetOverrunErrorHandler
  2073                           
  2074     018B                     l1295:	
  2075                           ;incstack = 0
  2076                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  2077                           
  2078                           
  2079                           ;mcc_generated_files/eusart.c: 168:     EUSART_OverrunErrorHandler = interruptHandler;
  2080     018B  0020               	movlb	0	; select bank0
  2081     018C  0836               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  2082     018D  00B2               	movwf	_EUSART_OverrunErrorHandler+1
  2083     018E  0835               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  2084     018F  00B1               	movwf	_EUSART_OverrunErrorHandler
  2085     0190                     l198:
  2086     0190  0008               	return
  2087     0191                     __end_of_EUSART_SetOverrunErrorHandler:
  2088                           
  2089                           	psect	text9
  2090     0191                     __ptext9:	
  2091 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2092 ;; Defined at:
  2093 ;;		line 163 in file "mcc_generated_files/eusart.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  2096 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;		None
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      void 
  2101 ;; Registers used:
  2102 ;;		wreg
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2108 ;;      Params:         0       2       0       0
  2109 ;;      Locals:         0       0       0       0
  2110 ;;      Temps:          0       0       0       0
  2111 ;;      Totals:         0       2       0       0
  2112 ;;Total ram usage:        2 bytes
  2113 ;; Hardware stack levels used: 1
  2114 ;; Hardware stack levels required when called: 3
  2115 ;; This function calls:
  2116 ;;		Nothing
  2117 ;; This function is called by:
  2118 ;;		_EUSART_Initialize
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122     0191                     _EUSART_SetFramingErrorHandler:	
  2123                           ;psect for function _EUSART_SetFramingErrorHandler
  2124                           
  2125     0191                     l1293:	
  2126                           ;incstack = 0
  2127                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2128                           
  2129                           
  2130                           ;mcc_generated_files/eusart.c: 164:     EUSART_FramingErrorHandler = interruptHandler;
  2131     0191  0020               	movlb	0	; select bank0
  2132     0192  0836               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  2133     0193  00B4               	movwf	_EUSART_FramingErrorHandler+1
  2134     0194  0835               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  2135     0195  00B3               	movwf	_EUSART_FramingErrorHandler
  2136     0196                     l195:
  2137     0196  0008               	return
  2138     0197                     __end_of_EUSART_SetFramingErrorHandler:
  2139                           
  2140                           	psect	text10
  2141     0197                     __ptext10:	
  2142 ;; *************** function _EUSART_SetErrorHandler *****************
  2143 ;; Defined at:
  2144 ;;		line 171 in file "mcc_generated_files/eusart.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  2147 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2159 ;;      Params:         0       2       0       0
  2160 ;;      Locals:         0       0       0       0
  2161 ;;      Temps:          0       0       0       0
  2162 ;;      Totals:         0       2       0       0
  2163 ;;Total ram usage:        2 bytes
  2164 ;; Hardware stack levels used: 1
  2165 ;; Hardware stack levels required when called: 3
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_EUSART_Initialize
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173     0197                     _EUSART_SetErrorHandler:	
  2174                           ;psect for function _EUSART_SetErrorHandler
  2175                           
  2176     0197                     l1297:	
  2177                           ;incstack = 0
  2178                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2179                           
  2180                           
  2181                           ;mcc_generated_files/eusart.c: 172:     EUSART_ErrorHandler = interruptHandler;
  2182     0197  0020               	movlb	0	; select bank0
  2183     0198  0836               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  2184     0199  00B0               	movwf	_EUSART_ErrorHandler+1
  2185     019A  0835               	movf	EUSART_SetErrorHandler@interruptHandler,w
  2186     019B  00AF               	movwf	_EUSART_ErrorHandler
  2187     019C                     l201:
  2188     019C  0008               	return
  2189     019D                     __end_of_EUSART_SetErrorHandler:
  2190                           
  2191                           	psect	text11
  2192     01A1                     __ptext11:	
  2193 ;; *************** function _EUSART_is_tx_done *****************
  2194 ;; Defined at:
  2195 ;;		line 103 in file "mcc_generated_files/eusart.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;		None
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;		None
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      _Bool 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2, status,0
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2209 ;;      Params:         0       0       0       0
  2210 ;;      Locals:         0       0       0       0
  2211 ;;      Temps:          0       0       0       0
  2212 ;;      Totals:         0       0       0       0
  2213 ;;Total ram usage:        0 bytes
  2214 ;; Hardware stack levels used: 1
  2215 ;; Hardware stack levels required when called: 3
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_main
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223     01A1                     _EUSART_is_tx_done:	
  2224                           ;psect for function _EUSART_is_tx_done
  2225                           
  2226     01A1                     l1351:	
  2227                           ;incstack = 0
  2228                           ; Regs used in _EUSART_is_tx_done: [wreg+status,2+status,0]
  2229                           
  2230                           
  2231                           ;mcc_generated_files/eusart.c: 105:     return TXSTAbits.TRMT;
  2232     01A1  0023               	movlb	3	; select bank3
  2233     01A2  0C1E               	rrf	30,w	;volatile
  2234     01A3  3901               	andlw	1
  2235     01A4                     l165:
  2236     01A4  0008               	return
  2237     01A5                     __end_of_EUSART_is_tx_done:
  2238                           
  2239                           	psect	text12
  2240     016A                     __ptext12:	
  2241 ;; *************** function _EUSART_Write *****************
  2242 ;; Defined at:
  2243 ;;		line 138 in file "mcc_generated_files/eusart.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  txData          1    wreg     unsigned char 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  txData          1    0[BANK0 ] unsigned char 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2257 ;;      Params:         0       0       0       0
  2258 ;;      Locals:         0       1       0       0
  2259 ;;      Temps:          0       0       0       0
  2260 ;;      Totals:         0       1       0       0
  2261 ;;Total ram usage:        1 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; Hardware stack levels required when called: 3
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_main
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271     016A                     _EUSART_Write:	
  2272                           ;psect for function _EUSART_Write
  2273                           
  2274                           
  2275                           ;incstack = 0
  2276                           ; Regs used in _EUSART_Write: [wreg]
  2277                           ;EUSART_Write@txData stored from wreg
  2278     016A  0020               	movlb	0	; select bank0
  2279     016B  00B5               	movwf	EUSART_Write@txData
  2280     016C                     l1355:
  2281                           
  2282                           ;mcc_generated_files/eusart.c: 138: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 139: {;mcc_generated_files/eusart.c: 140:     RCSTAbits.SREN = 0;
  2283     016C  0023               	movlb	3	; select bank3
  2284     016D  129D               	bcf	29,5	;volatile
  2285                           
  2286                           ;mcc_generated_files/eusart.c: 141:     RCSTAbits.CREN = 0;
  2287     016E  121D               	bcf	29,4	;volatile
  2288     016F                     l180:	
  2289                           ;mcc_generated_files/eusart.c: 143:     {;mcc_generated_files/eusart.c: 144:     }
  2290                           
  2291                           
  2292                           ;mcc_generated_files/eusart.c: 142:     while(0 == PIR1bits.TXIF)
  2293     016F  0020               	movlb	0	; select bank0
  2294     0170  1E11               	btfss	17,4	;volatile
  2295     0171  2973               	goto	u361
  2296     0172  2974               	goto	u360
  2297     0173                     u361:
  2298     0173  296F               	goto	l180
  2299     0174                     u360:
  2300     0174                     l1357:
  2301                           
  2302                           ;mcc_generated_files/eusart.c: 146:     TXREG = txData;
  2303     0174  0835               	movf	EUSART_Write@txData,w
  2304     0175  0023               	movlb	3	; select bank3
  2305     0176  009A               	movwf	26	;volatile
  2306     0177                     l183:
  2307     0177  0008               	return
  2308     0178                     __end_of_EUSART_Write:
  2309                           
  2310                           	psect	intentry
  2311     0004                     __pintentry:	
  2312 ;; *************** function _INTERRUPT_InterruptManager *****************
  2313 ;; Defined at:
  2314 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0, pclath, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2328 ;;      Params:         0       0       0       0
  2329 ;;      Locals:         0       0       0       0
  2330 ;;      Temps:          0       0       0       0
  2331 ;;      Totals:         0       0       0       0
  2332 ;;Total ram usage:        0 bytes
  2333 ;; Hardware stack levels used: 1
  2334 ;; Hardware stack levels required when called: 2
  2335 ;; This function calls:
  2336 ;;		_TMR1_ISR
  2337 ;; This function is called by:
  2338 ;;		Interrupt level 1
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342     0004                     _INTERRUPT_InterruptManager:
  2343                           
  2344                           ;incstack = 0
  2345     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2346                           
  2347                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2348     0005  3180               	pagesel	$
  2349     0006                     i1l1251:
  2350                           
  2351                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  2352     0006  1F0B               	btfss	11,6	;volatile
  2353     0007  2809               	goto	u27_21
  2354     0008  280A               	goto	u27_20
  2355     0009                     u27_21:
  2356     0009  2817               	goto	i1l218
  2357     000A                     u27_20:
  2358     000A                     i1l1253:
  2359                           
  2360                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  2361     000A  0021               	movlb	1	; select bank1
  2362     000B  1C11               	btfss	17,0	;volatile
  2363     000C  280E               	goto	u28_21
  2364     000D  280F               	goto	u28_20
  2365     000E                     u28_21:
  2366     000E  2817               	goto	i1l218
  2367     000F                     u28_20:
  2368     000F                     i1l1255:
  2369     000F  0020               	movlb	0	; select bank0
  2370     0010  1C11               	btfss	17,0	;volatile
  2371     0011  2813               	goto	u29_21
  2372     0012  2814               	goto	u29_20
  2373     0013                     u29_21:
  2374     0013  2817               	goto	i1l218
  2375     0014                     u29_20:
  2376     0014                     i1l1257:
  2377                           
  2378                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  2379     0014  3180  20C4  3180   	fcall	_TMR1_ISR
  2380     0017                     i1l218:	
  2381                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  2382                           
  2383     0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2384     0018  0009               	retfie
  2385     0019                     __end_of_INTERRUPT_InterruptManager:
  2386                           
  2387                           	psect	text14
  2388     00C4                     __ptext14:	
  2389 ;; *************** function _TMR1_ISR *****************
  2390 ;; Defined at:
  2391 ;;		line 293 in file "main.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;		None
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;		None
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0, pclath, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2405 ;;      Params:         0       0       0       0
  2406 ;;      Locals:         0       0       0       0
  2407 ;;      Temps:          1       0       0       0
  2408 ;;      Totals:         1       0       0       0
  2409 ;;Total ram usage:        1 bytes
  2410 ;; Hardware stack levels used: 1
  2411 ;; Hardware stack levels required when called: 1
  2412 ;; This function calls:
  2413 ;;		NULL
  2414 ;;		_TMR1_DefaultInterruptHandler
  2415 ;;		_TMR1_WriteTimer
  2416 ;; This function is called by:
  2417 ;;		_INTERRUPT_InterruptManager
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421     00C4                     _TMR1_ISR:	
  2422                           ;psect for function _TMR1_ISR
  2423                           
  2424     00C4                     i1l1207:	
  2425                           ;incstack = 0
  2426                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  2427                           
  2428                           
  2429                           ;main.c: 297:     PIR1bits.TMR1IF = 0;
  2430     00C4  0020               	movlb	0	; select bank0
  2431     00C5  1011               	bcf	17,0	;volatile
  2432     00C6                     i1l1209:
  2433                           
  2434                           ;main.c: 298:     TMR1_WriteTimer(timer1ReloadVal);
  2435     00C6  0871               	movf	_timer1ReloadVal+1,w	;volatile
  2436     00C7  00F7               	movwf	TMR1_WriteTimer@timerVal+1
  2437     00C8  0870               	movf	_timer1ReloadVal,w	;volatile
  2438     00C9  00F6               	movwf	TMR1_WriteTimer@timerVal
  2439     00CA  3181  213A  3180   	fcall	_TMR1_WriteTimer
  2440     00CD                     i1l1211:
  2441                           
  2442                           ;main.c: 300:     NewDataFlag++;
  2443     00CD  3001               	movlw	1
  2444     00CE  00F8               	movwf	??_TMR1_ISR
  2445     00CF  0878               	movf	??_TMR1_ISR,w
  2446     00D0  07F4               	addwf	_NewDataFlag,f
  2447     00D1                     i1l1213:
  2448                           
  2449                           ;main.c: 301:     column++;
  2450     00D1  3001               	movlw	1
  2451     00D2  00F8               	movwf	??_TMR1_ISR
  2452     00D3  0878               	movf	??_TMR1_ISR,w
  2453     00D4  07FB               	addwf	_column,f	;volatile
  2454     00D5                     i1l1215:
  2455                           
  2456                           ;main.c: 302:     if(column > 2){
  2457     00D5  3003               	movlw	3
  2458     00D6  027B               	subwf	_column,w	;volatile
  2459     00D7  1C03               	skipc
  2460     00D8  28DA               	goto	u21_21
  2461     00D9  28DB               	goto	u21_20
  2462     00DA                     u21_21:
  2463     00DA  28DC               	goto	i1l1219
  2464     00DB                     u21_20:
  2465     00DB                     i1l1217:
  2466                           
  2467                           ;main.c: 303:         column = 0;
  2468     00DB  01FB               	clrf	_column	;volatile
  2469     00DC                     i1l1219:
  2470                           
  2471                           ;main.c: 306:     if(TMR1_InterruptHandler)
  2472     00DC  0879               	movf	_TMR1_InterruptHandler,w
  2473     00DD  047A               	iorwf	_TMR1_InterruptHandler+1,w
  2474     00DE  1903               	btfsc	3,2
  2475     00DF  28E1               	goto	u22_21
  2476     00E0  28E2               	goto	u22_20
  2477     00E1                     u22_21:
  2478     00E1  28E7               	goto	i1l345
  2479     00E2                     u22_20:
  2480     00E2                     i1l1221:
  2481                           
  2482                           ;main.c: 307:     {;main.c: 308:         TMR1_InterruptHandler();
  2483     00E2  087A               	movf	_TMR1_InterruptHandler+1,w
  2484     00E3  008A               	movwf	10
  2485     00E4  0879               	movf	_TMR1_InterruptHandler,w
  2486     00E5  000A               	callw
  2487     00E6  3180               	pagesel	$
  2488     00E7                     i1l345:
  2489     00E7  0008               	return
  2490     00E8                     __end_of_TMR1_ISR:
  2491                           
  2492                           	psect	text15
  2493     013A                     __ptext15:	
  2494 ;; *************** function _TMR1_WriteTimer *****************
  2495 ;; Defined at:
  2496 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  timerVal        2    0[COMMON] unsigned short 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2510 ;;      Params:         2       0       0       0
  2511 ;;      Locals:         0       0       0       0
  2512 ;;      Temps:          0       0       0       0
  2513 ;;      Totals:         2       0       0       0
  2514 ;;Total ram usage:        2 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_TMR1_ISR
  2520 ;;		_TMR1_Reload
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524     013A                     _TMR1_WriteTimer:	
  2525                           ;psect for function _TMR1_WriteTimer
  2526                           
  2527     013A                     i1l1191:	
  2528                           ;incstack = 0
  2529                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  2530                           
  2531                           
  2532                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  2533     013A  0020               	movlb	0	; select bank0
  2534     013B  1D18               	btfss	24,2	;volatile
  2535     013C  293E               	goto	u20_21
  2536     013D  293F               	goto	u20_20
  2537     013E                     u20_21:
  2538     013E  2946               	goto	i1l1201
  2539     013F                     u20_20:
  2540     013F                     i1l1193:
  2541                           
  2542                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  2543     013F  1018               	bcf	24,0	;volatile
  2544     0140                     i1l1195:
  2545                           
  2546                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  2547     0140  0877               	movf	TMR1_WriteTimer@timerVal+1,w
  2548     0141  0097               	movwf	23	;volatile
  2549     0142                     i1l1197:
  2550                           
  2551                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  2552     0142  0876               	movf	TMR1_WriteTimer@timerVal,w
  2553     0143  0096               	movwf	22	;volatile
  2554     0144                     i1l1199:
  2555                           
  2556                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  2557     0144  1418               	bsf	24,0	;volatile
  2558                           
  2559                           ;mcc_generated_files/tmr1.c: 133:     }
  2560     0145  294A               	goto	i1l96
  2561     0146                     i1l1201:
  2562                           
  2563                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  2564     0146  0877               	movf	TMR1_WriteTimer@timerVal+1,w
  2565     0147  0097               	movwf	23	;volatile
  2566     0148                     i1l1203:
  2567                           
  2568                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  2569     0148  0876               	movf	TMR1_WriteTimer@timerVal,w
  2570     0149  0096               	movwf	22	;volatile
  2571     014A                     i1l96:
  2572     014A  0008               	return
  2573     014B                     __end_of_TMR1_WriteTimer:
  2574                           
  2575                           	psect	text16
  2576     01A6                     __ptext16:	
  2577 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2578 ;; Defined at:
  2579 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;		None
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;		None
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  1    wreg      void 
  2586 ;; Registers used:
  2587 ;;		None
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2593 ;;      Params:         0       0       0       0
  2594 ;;      Locals:         0       0       0       0
  2595 ;;      Temps:          0       0       0       0
  2596 ;;      Totals:         0       0       0       0
  2597 ;;Total ram usage:        0 bytes
  2598 ;; Hardware stack levels used: 1
  2599 ;; This function calls:
  2600 ;;		Nothing
  2601 ;; This function is called by:
  2602 ;;		_TMR1_Initialize
  2603 ;;		_TMR1_ISR
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607     01A6                     _TMR1_DefaultInterruptHandler:	
  2608                           ;psect for function _TMR1_DefaultInterruptHandler
  2609                           
  2610     01A6                     i1l111:	
  2611                           ;incstack = 0
  2612                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2613                           
  2614     01A6  0008               	return
  2615     01A7                     __end_of_TMR1_DefaultInterruptHandler:
  2616     007E                     btemp	set	126	;btemp
  2617     007E                     int$flags	set	126
  2618     007E                     wtemp0	set	126
  2619                           
  2620                           	psect	config
  2621                           
  2622                           ;Config register CONFIG1 @ 0x8007
  2623                           ;	Oscillator Selection
  2624                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2625                           ;	Watchdog Timer Enable
  2626                           ;	WDTE = OFF, WDT disabled
  2627                           ;	Power-up Timer Enable
  2628                           ;	PWRTE = OFF, PWRT disabled
  2629                           ;	MCLR Pin Function Select
  2630                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2631                           ;	Flash Program Memory Code Protection
  2632                           ;	CP = OFF, Program memory code protection is disabled
  2633                           ;	Data Memory Code Protection
  2634                           ;	CPD = OFF, Data memory code protection is disabled
  2635                           ;	Brown-out Reset Enable
  2636                           ;	BOREN = ON, Brown-out Reset enabled
  2637                           ;	Clock Out Enable
  2638                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2639                           ;	Internal/External Switchover
  2640                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2641                           ;	Fail-Safe Clock Monitor Enable
  2642                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2643     8007                     	org	32775
  2644     8007  3FE4               	dw	16356
  2645                           
  2646                           ;Config register CONFIG2 @ 0x8008
  2647                           ;	Flash Memory Self-Write Protection
  2648                           ;	WRT = OFF, Write protection off
  2649                           ;	PLL Enable
  2650                           ;	PLLEN = OFF, 4x PLL disabled
  2651                           ;	Stack Overflow/Underflow Reset Enable
  2652                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2653                           ;	Brown-out Reset Voltage Selection
  2654                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2655                           ;	In-Circuit Debugger Mode
  2656                           ;	DEBUG = 0x1, unprogrammed default
  2657                           ;	Low-Voltage Programming Enable
  2658                           ;	LVP = ON, Low-voltage programming enabled
  2659     8008                     	org	32776
  2660     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         6
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      12
    BANK0            80      2      23
    BANK1            80      0       0
    BANK2            64      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_TMR1_ISR
    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     990
                  _EUSART_Initialize
                       _EUSART_Write
                  _EUSART_is_tx_done
                  _SYSTEM_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     484
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0     121
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             1     1      0     240
                                              2 COMMON     1     1      0
                                NULL *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     _EUSART_SetErrorHandler
     _EUSART_SetFramingErrorHandler
     _EUSART_SetOverrunErrorHandler
   _EUSART_Write
   _EUSART_is_tx_done
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     NULL(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      3       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      23       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      17       6       28.7%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            40      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      23      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Dec 08 11:46:46 2023

                                   _AccessLine 0073                                             l25 0139  
                                           l52 017E                                             l55 01A0  
                                           l49 015A                                             l82 0123  
                                          l201 019C                                            l108 018A  
                                          l310 0091                                            l302 0088  
                                          l320 00A5                                            l312 0092  
                                          l304 008A                                            l313 0093  
                                          l305 008B                                            l154 010A  
                                          l330 00BC                                            l314 0096  
                                          l306 008E                                            l180 016F  
                                          l332 00BD                                            l324 00B4  
                                          l316 0098                                            l308 0090  
                                          l165 01A4                                            l334 00BE  
                                          l326 00B6                                            l183 0177  
                                          l335 00BF                                            l327 00B7  
                                          l328 00BA                                            l280 005C  
                                          l273 0041                                            l290 0066  
                                          l282 005E                                            l195 0196  
                                          l291 0067                                            l283 005F  
                                          l292 006A                                            l284 0062  
                                          l276 004D                                            l198 0190  
                                          l294 006C                                            l286 0064  
                                          l288 0065                                            l298 0079  
                                          u400 0088                                            u401 0087  
                                          u410 00A5                                            u411 00A4  
                                          u420 00B4                                            u421 00B3  
                                          u360 0174                                            u361 0173  
                                          u370 004D                                            u371 004C  
                                          u380 005C                                            u381 005B  
                                          u390 0079                                            u391 0078  
                              _timer1ReloadVal 0070                 ?_EUSART_SetFramingErrorHandler 0035  
                                         l1301 0127                                           l1311 0178  
                                         l1303 0128                                           l1313 017B  
                                         l1305 012B                                           l1321 010D  
                                         l1315 017C                                           l1307 012D  
                                         l1331 0118                                           l1323 010F  
                                         l1341 00F1                                           l1309 0134  
                                         l1333 0120                                           l1325 0111  
                                         l1317 019D                                           l1351 01A1  
                                         l1343 00F9                                           l1335 00E8  
                                         l1327 0112                                           l1319 010B  
                                         l1345 0101                                           l1337 00EF  
                                         l1329 0116                                           l1361 003C  
                                         l1355 016C                                           l1347 0109  
                                         l1339 00F0                                           l1291 0185  
                                         l1371 0050                                           l1363 003D  
                                         l1357 0174                                           l1293 0191  
                                         l1349 014B                                           l1381 0080  
                                         l1373 0054                                           l1365 003E  
                                         l1295 018B                                           l1383 0099  
                                         l1375 006D                                           l1367 0040  
                                         l1359 0033                                           l1297 0197  
                                         l1385 009D                                           l1377 0071  
                                         l1369 0045                                           l1299 0124  
                                         l1387 00A8                                           l1379 007C  
                                         l1389 00AC                                           _LATA 010C  
                                         _LATB 010D                                           i1l96 014A  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _main 0033                                           fsr0h 0005  
                                         fsr1h 0007                                           fsr0l 0004  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0019                     ??_TMR1_SetInterruptHandler 0037  
                                ?_EUSART_Write 0076                  __end_of_OSCILLATOR_Initialize 017F  
                                        ?_main 0076                                          _T1CON 0018  
                                        i1l111 01A6                                          i1l218 0017  
                                        i1l345 00E7                                          _CChar 002C  
                                        _RCREG 0199                                          _HChar 0020  
                                        _RCSTA 019D                                          u20_20 013F  
                                        u20_21 013E                                          u21_20 00DB  
                                        u21_21 00DA                                          _IChar 0026  
                                        u22_20 00E2                                          u22_21 00E1  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        u27_20 000A                                          u27_21 0009  
                                        _LChar 0023                                          u28_20 000F  
                                        u28_21 000E                                          u29_20 0014  
                                        u29_21 0013                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                        _TChar 0029                                          _TXSTA 019E  
                             __end_of_TMR1_ISR 00E8                                     _CommonLine 0072  
                               _WDT_Initialize 019D                        __end_of_TMR1_Initialize 0124  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                _TMR1_WriteTimer 013A  
                              __initialization 001A                                   __end_of_main 00C4  
                               ??_EUSART_Write 0035                    ?_INTERRUPT_InterruptManager 0076  
                                       ??_main 0037                         __end_of_WDT_Initialize 01A1  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 0031  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       i1l1201 0146                        TMR1_WriteTimer@timerVal 0076  
                                       i1l1203 0148                                         i1l1211 00CD  
                                       i1l1221 00E2                                         i1l1213 00D1  
                                       i1l1215 00D5                                         i1l1207 00C4  
                                       i1l1217 00DB                                         i1l1209 00C6  
                                       i1l1219 00DC                                         i1l1251 0006  
                                       i1l1253 000A                                         i1l1191 013A  
                                       i1l1255 000F                                         i1l1193 013F  
                                       i1l1257 0014                                         i1l1195 0140  
                                       i1l1197 0142                                         i1l1199 0144  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
         __end_of_TMR1_DefaultInterruptHandler 01A7                   _TMR1_DefaultInterruptHandler 01A6  
                                       _column 007B                                   __pdataCOMMON 007B  
                              ?_WDT_Initialize 0076       TMR1_SetInterruptHandler@InterruptHandler 0035  
                      __end_of_TMR1_WriteTimer 014B                               ?_TMR1_Initialize 0076  
                            _SYSTEM_Initialize 014B                        __end_of__initialization 0030  
                                  _NewDataFlag 0074                             ?_SYSTEM_Initialize 0076  
                               __pcstackCOMMON 0076                                   __pidataBANK0 015B  
                          ??_SYSTEM_Initialize 0037                                      ?_TMR1_ISR 0076  
                ?_TMR1_DefaultInterruptHandler 0076                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 0037                      __end_of_SYSTEM_Initialize 015B  
                         __end_of_EUSART_Write 0178                                     __pnvCOMMON 0079  
                                   __pmaintext 0033                                     ??_TMR1_ISR 0078  
                                   __pintentry 0004                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0037  
                             ?_TMR1_WriteTimer 0076                                        __ptext1 014B  
                                      __ptext2 019D                                        __ptext3 010B  
                                      __ptext4 0185                                        __ptext5 0124  
                                      __ptext6 0178                                        __ptext7 00E8  
                                      __ptext8 018B                                        __ptext9 0191  
               ??_TMR1_DefaultInterruptHandler 0076                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 0178                       ??_PIN_MANAGER_Initialize 0035  
                    ?_TMR1_SetInterruptHandler 0035                           end_of_initialization 0030  
        __end_of_EUSART_SetOverrunErrorHandler 0191                  _EUSART_SetOverrunErrorHandler 018B  
                                      init_ram 017F                                        initloop 0180  
                            _EUSART_Initialize 00E8                             ?_EUSART_Initialize 0076  
                                    _RCSTAbits 019D                            ??_EUSART_Initialize 0037  
                             ??_WDT_Initialize 0035                      __end_of_EUSART_Initialize 010B  
                                    _TXSTAbits 019E                     _EUSART_DefaultErrorHandler 0000  
                                __pidataCOMMON 01A5                                   _EUSART_Write 016A  
                       ?_OSCILLATOR_Initialize 0076                            start_initialization 001A  
               ?_EUSART_SetOverrunErrorHandler 0035                     _EUSART_FramingErrorHandler 0033  
                       _EUSART_SetErrorHandler 0197                                    __pdataBANK0 0020  
                                  __pbssCOMMON 0070                                      ___latbits 0000  
                                __pcstackBANK0 0035                                      __pnvBANK0 002F  
                       _PIN_MANAGER_Initialize 0124               __end_of_TMR1_SetInterruptHandler 018B  
                 ??_INTERRUPT_InterruptManager 0079                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0035                                       _PIE1bits 0091  
                            _eusartRxLastError 0075                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0037                              _EUSART_is_tx_done 01A1  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR1_ISR 00C4  
                           ?_EUSART_is_tx_done 0076                              ??_TMR1_Initialize 0037  
                          ??_EUSART_is_tx_done 0035                      __end_of_EUSART_is_tx_done 01A5  
                      ??_OSCILLATOR_Initialize 0035                            _EUSART_ErrorHandler 002F  
                     _TMR1_SetInterruptHandler 0185                          _TMR1_InterruptHandler 0079  
                                     __ptext10 0197                                       __ptext11 01A1  
                                     __ptext12 016A                                     _T1GCONbits 0019  
                                     __ptext14 00C4                                       __ptext15 013A  
                                     __ptext16 01A6                        ?_EUSART_SetErrorHandler 0035  
EUSART_SetOverrunErrorHandler@interruptHandler 0035                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 0019                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0197                  _EUSART_SetFramingErrorHandler 0191  
                            ??_TMR1_WriteTimer 0078                                     _INTCONbits 000B  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0076  
               __end_of_EUSART_SetErrorHandler 019D  EUSART_SetFramingErrorHandler@interruptHandler 0035  
                           EUSART_Write@txData 0035                 __end_of_PIN_MANAGER_Initialize 013A  
                              _TMR1_Initialize 010B  
