

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Nov 28 21:45:26 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16LF1826
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34     0000                     
    35                           ; Generated 06/07/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16LF1826 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     001E                     	;# 
    95     001F                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0095                     	;# 
   101     0096                     	;# 
   102     0097                     	;# 
   103     0098                     	;# 
   104     0099                     	;# 
   105     009A                     	;# 
   106     009B                     	;# 
   107     009B                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     0111                     	;# 
   114     0112                     	;# 
   115     0113                     	;# 
   116     0114                     	;# 
   117     0115                     	;# 
   118     0116                     	;# 
   119     0117                     	;# 
   120     0118                     	;# 
   121     0119                     	;# 
   122     011A                     	;# 
   123     011B                     	;# 
   124     011D                     	;# 
   125     011E                     	;# 
   126     018C                     	;# 
   127     018D                     	;# 
   128     0191                     	;# 
   129     0191                     	;# 
   130     0192                     	;# 
   131     0193                     	;# 
   132     0193                     	;# 
   133     0193                     	;# 
   134     0194                     	;# 
   135     0195                     	;# 
   136     0196                     	;# 
   137     0199                     	;# 
   138     019A                     	;# 
   139     019B                     	;# 
   140     019B                     	;# 
   141     019B                     	;# 
   142     019B                     	;# 
   143     019C                     	;# 
   144     019C                     	;# 
   145     019D                     	;# 
   146     019E                     	;# 
   147     019F                     	;# 
   148     020C                     	;# 
   149     020D                     	;# 
   150     0211                     	;# 
   151     0211                     	;# 
   152     0212                     	;# 
   153     0212                     	;# 
   154     0213                     	;# 
   155     0213                     	;# 
   156     0214                     	;# 
   157     0214                     	;# 
   158     0215                     	;# 
   159     0215                     	;# 
   160     0215                     	;# 
   161     0216                     	;# 
   162     0216                     	;# 
   163     0217                     	;# 
   164     0217                     	;# 
   165     0291                     	;# 
   166     0291                     	;# 
   167     0292                     	;# 
   168     0293                     	;# 
   169     0294                     	;# 
   170     0295                     	;# 
   171     0295                     	;# 
   172     0296                     	;# 
   173     0394                     	;# 
   174     0395                     	;# 
   175     0396                     	;# 
   176     039A                     	;# 
   177     039C                     	;# 
   178     039D                     	;# 
   179     039E                     	;# 
   180     039F                     	;# 
   181     0FE4                     	;# 
   182     0FE5                     	;# 
   183     0FE6                     	;# 
   184     0FE7                     	;# 
   185     0FE8                     	;# 
   186     0FE9                     	;# 
   187     0FEA                     	;# 
   188     0FEB                     	;# 
   189     0FED                     	;# 
   190     0FEE                     	;# 
   191     0FEF                     	;# 
   192     0000                     	;# 
   193     0001                     	;# 
   194     0002                     	;# 
   195     0003                     	;# 
   196     0004                     	;# 
   197     0005                     	;# 
   198     0006                     	;# 
   199     0007                     	;# 
   200     0008                     	;# 
   201     0009                     	;# 
   202     000A                     	;# 
   203     000B                     	;# 
   204     000C                     	;# 
   205     000D                     	;# 
   206     0011                     	;# 
   207     0012                     	;# 
   208     0015                     	;# 
   209     0016                     	;# 
   210     0016                     	;# 
   211     0017                     	;# 
   212     0018                     	;# 
   213     0019                     	;# 
   214     001A                     	;# 
   215     001B                     	;# 
   216     001C                     	;# 
   217     001E                     	;# 
   218     001F                     	;# 
   219     008C                     	;# 
   220     008D                     	;# 
   221     0091                     	;# 
   222     0092                     	;# 
   223     0095                     	;# 
   224     0096                     	;# 
   225     0097                     	;# 
   226     0098                     	;# 
   227     0099                     	;# 
   228     009A                     	;# 
   229     009B                     	;# 
   230     009B                     	;# 
   231     009C                     	;# 
   232     009D                     	;# 
   233     009E                     	;# 
   234     010C                     	;# 
   235     010D                     	;# 
   236     0111                     	;# 
   237     0112                     	;# 
   238     0113                     	;# 
   239     0114                     	;# 
   240     0115                     	;# 
   241     0116                     	;# 
   242     0117                     	;# 
   243     0118                     	;# 
   244     0119                     	;# 
   245     011A                     	;# 
   246     011B                     	;# 
   247     011D                     	;# 
   248     011E                     	;# 
   249     018C                     	;# 
   250     018D                     	;# 
   251     0191                     	;# 
   252     0191                     	;# 
   253     0192                     	;# 
   254     0193                     	;# 
   255     0193                     	;# 
   256     0193                     	;# 
   257     0194                     	;# 
   258     0195                     	;# 
   259     0196                     	;# 
   260     0199                     	;# 
   261     019A                     	;# 
   262     019B                     	;# 
   263     019B                     	;# 
   264     019B                     	;# 
   265     019B                     	;# 
   266     019C                     	;# 
   267     019C                     	;# 
   268     019D                     	;# 
   269     019E                     	;# 
   270     019F                     	;# 
   271     020C                     	;# 
   272     020D                     	;# 
   273     0211                     	;# 
   274     0211                     	;# 
   275     0212                     	;# 
   276     0212                     	;# 
   277     0213                     	;# 
   278     0213                     	;# 
   279     0214                     	;# 
   280     0214                     	;# 
   281     0215                     	;# 
   282     0215                     	;# 
   283     0215                     	;# 
   284     0216                     	;# 
   285     0216                     	;# 
   286     0217                     	;# 
   287     0217                     	;# 
   288     0291                     	;# 
   289     0291                     	;# 
   290     0292                     	;# 
   291     0293                     	;# 
   292     0294                     	;# 
   293     0295                     	;# 
   294     0295                     	;# 
   295     0296                     	;# 
   296     0394                     	;# 
   297     0395                     	;# 
   298     0396                     	;# 
   299     039A                     	;# 
   300     039C                     	;# 
   301     039D                     	;# 
   302     039E                     	;# 
   303     039F                     	;# 
   304     0FE4                     	;# 
   305     0FE5                     	;# 
   306     0FE6                     	;# 
   307     0FE7                     	;# 
   308     0FE8                     	;# 
   309     0FE9                     	;# 
   310     0FEA                     	;# 
   311     0FEB                     	;# 
   312     0FED                     	;# 
   313     0FEE                     	;# 
   314     0FEF                     	;# 
   315     0000                     	;# 
   316     0001                     	;# 
   317     0002                     	;# 
   318     0003                     	;# 
   319     0004                     	;# 
   320     0005                     	;# 
   321     0006                     	;# 
   322     0007                     	;# 
   323     0008                     	;# 
   324     0009                     	;# 
   325     000A                     	;# 
   326     000B                     	;# 
   327     000C                     	;# 
   328     000D                     	;# 
   329     0011                     	;# 
   330     0012                     	;# 
   331     0015                     	;# 
   332     0016                     	;# 
   333     0016                     	;# 
   334     0017                     	;# 
   335     0018                     	;# 
   336     0019                     	;# 
   337     001A                     	;# 
   338     001B                     	;# 
   339     001C                     	;# 
   340     001E                     	;# 
   341     001F                     	;# 
   342     008C                     	;# 
   343     008D                     	;# 
   344     0091                     	;# 
   345     0092                     	;# 
   346     0095                     	;# 
   347     0096                     	;# 
   348     0097                     	;# 
   349     0098                     	;# 
   350     0099                     	;# 
   351     009A                     	;# 
   352     009B                     	;# 
   353     009B                     	;# 
   354     009C                     	;# 
   355     009D                     	;# 
   356     009E                     	;# 
   357     010C                     	;# 
   358     010D                     	;# 
   359     0111                     	;# 
   360     0112                     	;# 
   361     0113                     	;# 
   362     0114                     	;# 
   363     0115                     	;# 
   364     0116                     	;# 
   365     0117                     	;# 
   366     0118                     	;# 
   367     0119                     	;# 
   368     011A                     	;# 
   369     011B                     	;# 
   370     011D                     	;# 
   371     011E                     	;# 
   372     018C                     	;# 
   373     018D                     	;# 
   374     0191                     	;# 
   375     0191                     	;# 
   376     0192                     	;# 
   377     0193                     	;# 
   378     0193                     	;# 
   379     0193                     	;# 
   380     0194                     	;# 
   381     0195                     	;# 
   382     0196                     	;# 
   383     0199                     	;# 
   384     019A                     	;# 
   385     019B                     	;# 
   386     019B                     	;# 
   387     019B                     	;# 
   388     019B                     	;# 
   389     019C                     	;# 
   390     019C                     	;# 
   391     019D                     	;# 
   392     019E                     	;# 
   393     019F                     	;# 
   394     020C                     	;# 
   395     020D                     	;# 
   396     0211                     	;# 
   397     0211                     	;# 
   398     0212                     	;# 
   399     0212                     	;# 
   400     0213                     	;# 
   401     0213                     	;# 
   402     0214                     	;# 
   403     0214                     	;# 
   404     0215                     	;# 
   405     0215                     	;# 
   406     0215                     	;# 
   407     0216                     	;# 
   408     0216                     	;# 
   409     0217                     	;# 
   410     0217                     	;# 
   411     0291                     	;# 
   412     0291                     	;# 
   413     0292                     	;# 
   414     0293                     	;# 
   415     0294                     	;# 
   416     0295                     	;# 
   417     0295                     	;# 
   418     0296                     	;# 
   419     0394                     	;# 
   420     0395                     	;# 
   421     0396                     	;# 
   422     039A                     	;# 
   423     039C                     	;# 
   424     039D                     	;# 
   425     039E                     	;# 
   426     039F                     	;# 
   427     0FE4                     	;# 
   428     0FE5                     	;# 
   429     0FE6                     	;# 
   430     0FE7                     	;# 
   431     0FE8                     	;# 
   432     0FE9                     	;# 
   433     0FEA                     	;# 
   434     0FEB                     	;# 
   435     0FED                     	;# 
   436     0FEE                     	;# 
   437     0FEF                     	;# 
   438     0000                     	;# 
   439     0001                     	;# 
   440     0002                     	;# 
   441     0003                     	;# 
   442     0004                     	;# 
   443     0005                     	;# 
   444     0006                     	;# 
   445     0007                     	;# 
   446     0008                     	;# 
   447     0009                     	;# 
   448     000A                     	;# 
   449     000B                     	;# 
   450     000C                     	;# 
   451     000D                     	;# 
   452     0011                     	;# 
   453     0012                     	;# 
   454     0015                     	;# 
   455     0016                     	;# 
   456     0016                     	;# 
   457     0017                     	;# 
   458     0018                     	;# 
   459     0019                     	;# 
   460     001A                     	;# 
   461     001B                     	;# 
   462     001C                     	;# 
   463     001E                     	;# 
   464     001F                     	;# 
   465     008C                     	;# 
   466     008D                     	;# 
   467     0091                     	;# 
   468     0092                     	;# 
   469     0095                     	;# 
   470     0096                     	;# 
   471     0097                     	;# 
   472     0098                     	;# 
   473     0099                     	;# 
   474     009A                     	;# 
   475     009B                     	;# 
   476     009B                     	;# 
   477     009C                     	;# 
   478     009D                     	;# 
   479     009E                     	;# 
   480     010C                     	;# 
   481     010D                     	;# 
   482     0111                     	;# 
   483     0112                     	;# 
   484     0113                     	;# 
   485     0114                     	;# 
   486     0115                     	;# 
   487     0116                     	;# 
   488     0117                     	;# 
   489     0118                     	;# 
   490     0119                     	;# 
   491     011A                     	;# 
   492     011B                     	;# 
   493     011D                     	;# 
   494     011E                     	;# 
   495     018C                     	;# 
   496     018D                     	;# 
   497     0191                     	;# 
   498     0191                     	;# 
   499     0192                     	;# 
   500     0193                     	;# 
   501     0193                     	;# 
   502     0193                     	;# 
   503     0194                     	;# 
   504     0195                     	;# 
   505     0196                     	;# 
   506     0199                     	;# 
   507     019A                     	;# 
   508     019B                     	;# 
   509     019B                     	;# 
   510     019B                     	;# 
   511     019B                     	;# 
   512     019C                     	;# 
   513     019C                     	;# 
   514     019D                     	;# 
   515     019E                     	;# 
   516     019F                     	;# 
   517     020C                     	;# 
   518     020D                     	;# 
   519     0211                     	;# 
   520     0211                     	;# 
   521     0212                     	;# 
   522     0212                     	;# 
   523     0213                     	;# 
   524     0213                     	;# 
   525     0214                     	;# 
   526     0214                     	;# 
   527     0215                     	;# 
   528     0215                     	;# 
   529     0215                     	;# 
   530     0216                     	;# 
   531     0216                     	;# 
   532     0217                     	;# 
   533     0217                     	;# 
   534     0291                     	;# 
   535     0291                     	;# 
   536     0292                     	;# 
   537     0293                     	;# 
   538     0294                     	;# 
   539     0295                     	;# 
   540     0295                     	;# 
   541     0296                     	;# 
   542     0394                     	;# 
   543     0395                     	;# 
   544     0396                     	;# 
   545     039A                     	;# 
   546     039C                     	;# 
   547     039D                     	;# 
   548     039E                     	;# 
   549     039F                     	;# 
   550     0FE4                     	;# 
   551     0FE5                     	;# 
   552     0FE6                     	;# 
   553     0FE7                     	;# 
   554     0FE8                     	;# 
   555     0FE9                     	;# 
   556     0FEA                     	;# 
   557     0FEB                     	;# 
   558     0FED                     	;# 
   559     0FEE                     	;# 
   560     0FEF                     	;# 
   561     0000                     	;# 
   562     0001                     	;# 
   563     0002                     	;# 
   564     0003                     	;# 
   565     0004                     	;# 
   566     0005                     	;# 
   567     0006                     	;# 
   568     0007                     	;# 
   569     0008                     	;# 
   570     0009                     	;# 
   571     000A                     	;# 
   572     000B                     	;# 
   573     000C                     	;# 
   574     000D                     	;# 
   575     0011                     	;# 
   576     0012                     	;# 
   577     0015                     	;# 
   578     0016                     	;# 
   579     0016                     	;# 
   580     0017                     	;# 
   581     0018                     	;# 
   582     0019                     	;# 
   583     001A                     	;# 
   584     001B                     	;# 
   585     001C                     	;# 
   586     001E                     	;# 
   587     001F                     	;# 
   588     008C                     	;# 
   589     008D                     	;# 
   590     0091                     	;# 
   591     0092                     	;# 
   592     0095                     	;# 
   593     0096                     	;# 
   594     0097                     	;# 
   595     0098                     	;# 
   596     0099                     	;# 
   597     009A                     	;# 
   598     009B                     	;# 
   599     009B                     	;# 
   600     009C                     	;# 
   601     009D                     	;# 
   602     009E                     	;# 
   603     010C                     	;# 
   604     010D                     	;# 
   605     0111                     	;# 
   606     0112                     	;# 
   607     0113                     	;# 
   608     0114                     	;# 
   609     0115                     	;# 
   610     0116                     	;# 
   611     0117                     	;# 
   612     0118                     	;# 
   613     0119                     	;# 
   614     011A                     	;# 
   615     011B                     	;# 
   616     011D                     	;# 
   617     011E                     	;# 
   618     018C                     	;# 
   619     018D                     	;# 
   620     0191                     	;# 
   621     0191                     	;# 
   622     0192                     	;# 
   623     0193                     	;# 
   624     0193                     	;# 
   625     0193                     	;# 
   626     0194                     	;# 
   627     0195                     	;# 
   628     0196                     	;# 
   629     0199                     	;# 
   630     019A                     	;# 
   631     019B                     	;# 
   632     019B                     	;# 
   633     019B                     	;# 
   634     019B                     	;# 
   635     019C                     	;# 
   636     019C                     	;# 
   637     019D                     	;# 
   638     019E                     	;# 
   639     019F                     	;# 
   640     020C                     	;# 
   641     020D                     	;# 
   642     0211                     	;# 
   643     0211                     	;# 
   644     0212                     	;# 
   645     0212                     	;# 
   646     0213                     	;# 
   647     0213                     	;# 
   648     0214                     	;# 
   649     0214                     	;# 
   650     0215                     	;# 
   651     0215                     	;# 
   652     0215                     	;# 
   653     0216                     	;# 
   654     0216                     	;# 
   655     0217                     	;# 
   656     0217                     	;# 
   657     0291                     	;# 
   658     0291                     	;# 
   659     0292                     	;# 
   660     0293                     	;# 
   661     0294                     	;# 
   662     0295                     	;# 
   663     0295                     	;# 
   664     0296                     	;# 
   665     0394                     	;# 
   666     0395                     	;# 
   667     0396                     	;# 
   668     039A                     	;# 
   669     039C                     	;# 
   670     039D                     	;# 
   671     039E                     	;# 
   672     039F                     	;# 
   673     0FE4                     	;# 
   674     0FE5                     	;# 
   675     0FE6                     	;# 
   676     0FE7                     	;# 
   677     0FE8                     	;# 
   678     0FE9                     	;# 
   679     0FEA                     	;# 
   680     0FEB                     	;# 
   681     0FED                     	;# 
   682     0FEE                     	;# 
   683     0FEF                     	;# 
   684     0000                     	;# 
   685     0001                     	;# 
   686     0002                     	;# 
   687     0003                     	;# 
   688     0004                     	;# 
   689     0005                     	;# 
   690     0006                     	;# 
   691     0007                     	;# 
   692     0008                     	;# 
   693     0009                     	;# 
   694     000A                     	;# 
   695     000B                     	;# 
   696     000C                     	;# 
   697     000D                     	;# 
   698     0011                     	;# 
   699     0012                     	;# 
   700     0015                     	;# 
   701     0016                     	;# 
   702     0016                     	;# 
   703     0017                     	;# 
   704     0018                     	;# 
   705     0019                     	;# 
   706     001A                     	;# 
   707     001B                     	;# 
   708     001C                     	;# 
   709     001E                     	;# 
   710     001F                     	;# 
   711     008C                     	;# 
   712     008D                     	;# 
   713     0091                     	;# 
   714     0092                     	;# 
   715     0095                     	;# 
   716     0096                     	;# 
   717     0097                     	;# 
   718     0098                     	;# 
   719     0099                     	;# 
   720     009A                     	;# 
   721     009B                     	;# 
   722     009B                     	;# 
   723     009C                     	;# 
   724     009D                     	;# 
   725     009E                     	;# 
   726     010C                     	;# 
   727     010D                     	;# 
   728     0111                     	;# 
   729     0112                     	;# 
   730     0113                     	;# 
   731     0114                     	;# 
   732     0115                     	;# 
   733     0116                     	;# 
   734     0117                     	;# 
   735     0118                     	;# 
   736     0119                     	;# 
   737     011A                     	;# 
   738     011B                     	;# 
   739     011D                     	;# 
   740     011E                     	;# 
   741     018C                     	;# 
   742     018D                     	;# 
   743     0191                     	;# 
   744     0191                     	;# 
   745     0192                     	;# 
   746     0193                     	;# 
   747     0193                     	;# 
   748     0193                     	;# 
   749     0194                     	;# 
   750     0195                     	;# 
   751     0196                     	;# 
   752     0199                     	;# 
   753     019A                     	;# 
   754     019B                     	;# 
   755     019B                     	;# 
   756     019B                     	;# 
   757     019B                     	;# 
   758     019C                     	;# 
   759     019C                     	;# 
   760     019D                     	;# 
   761     019E                     	;# 
   762     019F                     	;# 
   763     020C                     	;# 
   764     020D                     	;# 
   765     0211                     	;# 
   766     0211                     	;# 
   767     0212                     	;# 
   768     0212                     	;# 
   769     0213                     	;# 
   770     0213                     	;# 
   771     0214                     	;# 
   772     0214                     	;# 
   773     0215                     	;# 
   774     0215                     	;# 
   775     0215                     	;# 
   776     0216                     	;# 
   777     0216                     	;# 
   778     0217                     	;# 
   779     0217                     	;# 
   780     0291                     	;# 
   781     0291                     	;# 
   782     0292                     	;# 
   783     0293                     	;# 
   784     0294                     	;# 
   785     0295                     	;# 
   786     0295                     	;# 
   787     0296                     	;# 
   788     0394                     	;# 
   789     0395                     	;# 
   790     0396                     	;# 
   791     039A                     	;# 
   792     039C                     	;# 
   793     039D                     	;# 
   794     039E                     	;# 
   795     039F                     	;# 
   796     0FE4                     	;# 
   797     0FE5                     	;# 
   798     0FE6                     	;# 
   799     0FE7                     	;# 
   800     0FE8                     	;# 
   801     0FE9                     	;# 
   802     0FEA                     	;# 
   803     0FEB                     	;# 
   804     0FED                     	;# 
   805     0FEE                     	;# 
   806     0FEF                     	;# 
   807     0000                     	;# 
   808     0001                     	;# 
   809     0002                     	;# 
   810     0003                     	;# 
   811     0004                     	;# 
   812     0005                     	;# 
   813     0006                     	;# 
   814     0007                     	;# 
   815     0008                     	;# 
   816     0009                     	;# 
   817     000A                     	;# 
   818     000B                     	;# 
   819     000C                     	;# 
   820     000D                     	;# 
   821     0011                     	;# 
   822     0012                     	;# 
   823     0015                     	;# 
   824     0016                     	;# 
   825     0016                     	;# 
   826     0017                     	;# 
   827     0018                     	;# 
   828     0019                     	;# 
   829     001A                     	;# 
   830     001B                     	;# 
   831     001C                     	;# 
   832     001E                     	;# 
   833     001F                     	;# 
   834     008C                     	;# 
   835     008D                     	;# 
   836     0091                     	;# 
   837     0092                     	;# 
   838     0095                     	;# 
   839     0096                     	;# 
   840     0097                     	;# 
   841     0098                     	;# 
   842     0099                     	;# 
   843     009A                     	;# 
   844     009B                     	;# 
   845     009B                     	;# 
   846     009C                     	;# 
   847     009D                     	;# 
   848     009E                     	;# 
   849     010C                     	;# 
   850     010D                     	;# 
   851     0111                     	;# 
   852     0112                     	;# 
   853     0113                     	;# 
   854     0114                     	;# 
   855     0115                     	;# 
   856     0116                     	;# 
   857     0117                     	;# 
   858     0118                     	;# 
   859     0119                     	;# 
   860     011A                     	;# 
   861     011B                     	;# 
   862     011D                     	;# 
   863     011E                     	;# 
   864     018C                     	;# 
   865     018D                     	;# 
   866     0191                     	;# 
   867     0191                     	;# 
   868     0192                     	;# 
   869     0193                     	;# 
   870     0193                     	;# 
   871     0193                     	;# 
   872     0194                     	;# 
   873     0195                     	;# 
   874     0196                     	;# 
   875     0199                     	;# 
   876     019A                     	;# 
   877     019B                     	;# 
   878     019B                     	;# 
   879     019B                     	;# 
   880     019B                     	;# 
   881     019C                     	;# 
   882     019C                     	;# 
   883     019D                     	;# 
   884     019E                     	;# 
   885     019F                     	;# 
   886     020C                     	;# 
   887     020D                     	;# 
   888     0211                     	;# 
   889     0211                     	;# 
   890     0212                     	;# 
   891     0212                     	;# 
   892     0213                     	;# 
   893     0213                     	;# 
   894     0214                     	;# 
   895     0214                     	;# 
   896     0215                     	;# 
   897     0215                     	;# 
   898     0215                     	;# 
   899     0216                     	;# 
   900     0216                     	;# 
   901     0217                     	;# 
   902     0217                     	;# 
   903     0291                     	;# 
   904     0291                     	;# 
   905     0292                     	;# 
   906     0293                     	;# 
   907     0294                     	;# 
   908     0295                     	;# 
   909     0295                     	;# 
   910     0296                     	;# 
   911     0394                     	;# 
   912     0395                     	;# 
   913     0396                     	;# 
   914     039A                     	;# 
   915     039C                     	;# 
   916     039D                     	;# 
   917     039E                     	;# 
   918     039F                     	;# 
   919     0FE4                     	;# 
   920     0FE5                     	;# 
   921     0FE6                     	;# 
   922     0FE7                     	;# 
   923     0FE8                     	;# 
   924     0FE9                     	;# 
   925     0FEA                     	;# 
   926     0FEB                     	;# 
   927     0FED                     	;# 
   928     0FEE                     	;# 
   929     0FEF                     	;# 
   930                           
   931 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
   932     0000                     
   933 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
   934     0000                     
   935 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
   936     0000                     
   937                           	psect	idataCOMMON
   938     016D                     __pidataCOMMON:
   939                           
   940                           ;initializer for _column
   941     016D  3402               	retlw	2
   942                           
   943                           	psect	idataBANK0
   944     0123                     __pidataBANK0:
   945                           
   946                           ;initializer for _HChar
   947     0123  3407               	retlw	7
   948     0124  3402               	retlw	2
   949     0125  3407               	retlw	7
   950                           
   951                           ;initializer for _LChar
   952     0126  3401               	retlw	1
   953     0127  3401               	retlw	1
   954     0128  3407               	retlw	7
   955                           
   956                           ;initializer for _IChar
   957     0129  3405               	retlw	5
   958     012A  3407               	retlw	7
   959     012B  3405               	retlw	5
   960                           
   961                           ;initializer for _TChar
   962     012C  3404               	retlw	4
   963     012D  3407               	retlw	7
   964     012E  3404               	retlw	4
   965                           
   966                           ;initializer for _CChar
   967     012F  3405               	retlw	5
   968     0130  3405               	retlw	5
   969     0131  3407               	retlw	7
   970                           
   971                           	psect	nvCOMMON
   972     0079                     __pnvCOMMON:
   973     0079                     _TMR1_InterruptHandler:
   974     0079                     	ds	2
   975                           
   976                           	psect	nvBANK0
   977     002F                     __pnvBANK0:
   978     002F                     _EUSART_ErrorHandler:
   979     002F                     	ds	2
   980     0031                     _EUSART_OverrunErrorHandler:
   981     0031                     	ds	2
   982     0033                     _EUSART_FramingErrorHandler:
   983     0033                     	ds	2
   984     000B                     _INTCONbits	set	11
   985     0019                     _T1GCONbits	set	25
   986     0018                     _T1CONbits	set	24
   987     0018                     _T1CON	set	24
   988     0011                     _PIR1bits	set	17
   989     0016                     _TMR1L	set	22
   990     0017                     _TMR1H	set	23
   991     0019                     _T1GCON	set	25
   992     0091                     _PIE1bits	set	145
   993     0097                     _WDTCON	set	151
   994     0098                     _OSCTUNE	set	152
   995     0099                     _OSCCON	set	153
   996     0095                     _OPTION_REGbits	set	149
   997     008D                     _TRISB	set	141
   998     008C                     _TRISA	set	140
   999     010C                     _LATAbits	set	268
  1000     0116                     _BORCON	set	278
  1001     011E                     _APFCON1	set	286
  1002     011D                     _APFCON0	set	285
  1003     010D                     _LATB	set	269
  1004     010C                     _LATA	set	268
  1005     019A                     _TXREG	set	410
  1006     0199                     _RCREG	set	409
  1007     019D                     _RCSTAbits	set	413
  1008     019E                     _TXSTAbits	set	414
  1009     019C                     _SPBRGH	set	412
  1010     019B                     _SPBRGL	set	411
  1011     019E                     _TXSTA	set	414
  1012     019D                     _RCSTA	set	413
  1013     019F                     _BAUDCON	set	415
  1014     018C                     _ANSELA	set	396
  1015     018D                     _ANSELB	set	397
  1016     020C                     _WPUA	set	524
  1017     020D                     _WPUB	set	525
  1018                           
  1019                           	psect	cinit
  1020     001A                     start_initialization:	
  1021                           ; #config settings
  1022                           
  1023     001A                     __initialization:
  1024                           
  1025                           ; Initialize objects allocated to COMMON
  1026     001A  3181  216D  3180   	fcall	__pidataCOMMON	;fetch initializer
  1027     001D  00FB               	movwf	__pdataCOMMON& (0+127)
  1028                           
  1029                           ; Initialize objects allocated to BANK0
  1030     001E  3023               	movlw	low __pidataBANK0
  1031     001F  0084               	movwf	4
  1032     0020  3081               	movlw	(high __pidataBANK0)| (0+128)
  1033     0021  0085               	movwf	5
  1034     0022  3020               	movlw	low __pdataBANK0
  1035     0023  0086               	movwf	6
  1036     0024  3000               	movlw	high __pdataBANK0
  1037     0025  0087               	movwf	7
  1038     0026  300F               	movlw	15
  1039     0027  3181  2147  3180   	fcall	init_ram
  1040                           
  1041                           ; Clear objects allocated to COMMON
  1042     002A  01F0               	clrf	__pbssCOMMON& (0+127)
  1043     002B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1044     002C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1045     002D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1046     002E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1047     002F  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1048     0030                     end_of_initialization:	
  1049                           ;End of C runtime variable initialization code
  1050                           
  1051     0030                     __end_of__initialization:
  1052     0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1053     0031  0020               	movlb	0
  1054     0032  2833               	ljmp	_main	;jump to C main() function
  1055                           
  1056                           	psect	bssCOMMON
  1057     0070                     __pbssCOMMON:
  1058     0070                     _timer1ReloadVal:
  1059     0070                     	ds	2
  1060     0072                     _CommonLine:
  1061     0072                     	ds	1
  1062     0073                     _AccessLine:
  1063     0073                     	ds	1
  1064     0074                     _NewDataFlag:
  1065     0074                     	ds	1
  1066     0075                     _eusartRxLastError:
  1067     0075                     	ds	1
  1068                           
  1069                           	psect	dataCOMMON
  1070     007B                     __pdataCOMMON:
  1071     007B                     _column:
  1072     007B                     	ds	1
  1073                           
  1074                           	psect	dataBANK0
  1075     0020                     __pdataBANK0:
  1076     0020                     _HChar:
  1077     0020                     	ds	3
  1078     0023                     _LChar:
  1079     0023                     	ds	3
  1080     0026                     _IChar:
  1081     0026                     	ds	3
  1082     0029                     _TChar:
  1083     0029                     	ds	3
  1084     002C                     _CChar:
  1085     002C                     	ds	3
  1086                           
  1087                           	psect	inittext
  1088     0147                     init_ram:
  1089     0147  00FE               	movwf	btemp
  1090     0148                     initloop:
  1091     0148  0012               	moviw fsr0++
  1092     0149  001E               	movwi fsr1++
  1093     014A  0BFE               	decfsz	btemp,f
  1094     014B  2948               	goto	initloop
  1095     014C  3400               	retlw	0
  1096                           
  1097                           	psect	cstackCOMMON
  1098     0076                     __pcstackCOMMON:
  1099     0076                     ?_OSCILLATOR_Initialize:
  1100     0076                     ?_WDT_Initialize:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103     0076                     ?_TMR1_Initialize:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106     0076                     ?_EUSART_Initialize:	
  1107                           ; 1 bytes @ 0x0
  1108                           
  1109     0076                     ?_TMR1_DefaultInterruptHandler:	
  1110                           ; 1 bytes @ 0x0
  1111                           
  1112     0076                     ??_TMR1_DefaultInterruptHandler:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115     0076                     ?_TMR1_ISR:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118     0076                     ?_PIN_MANAGER_Initialize:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121     0076                     ?_SYSTEM_Initialize:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124     0076                     ?_TMR1_WriteTimer:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127     0076                     ?_EUSART_is_tx_done:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130     0076                     ?_EUSART_Write:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133     0076                     ?_INTERRUPT_InterruptManager:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136     0076                     ?_main:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139     0076                     TMR1_WriteTimer@timerVal:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142                           
  1143                           ; 2 bytes @ 0x0
  1144     0076                     	ds	2
  1145     0078                     ??_TMR1_ISR:
  1146     0078                     ??_TMR1_WriteTimer:	
  1147                           ; 1 bytes @ 0x2
  1148                           
  1149                           
  1150                           ; 1 bytes @ 0x2
  1151     0078                     	ds	1
  1152     0079                     ??_INTERRUPT_InterruptManager:
  1153                           
  1154                           	psect	cstackBANK0
  1155     0035                     __pcstackBANK0:	
  1156                           ; 1 bytes @ 0x3
  1157                           
  1158     0035                     ??_OSCILLATOR_Initialize:
  1159     0035                     ??_WDT_Initialize:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162     0035                     ?_TMR1_SetInterruptHandler:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165     0035                     ?_EUSART_SetFramingErrorHandler:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168     0035                     ?_EUSART_SetOverrunErrorHandler:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171     0035                     ?_EUSART_SetErrorHandler:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174     0035                     ??_PIN_MANAGER_Initialize:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177     0035                     ??_EUSART_is_tx_done:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180     0035                     ??_EUSART_Write:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183     0035                     EUSART_Write@txData:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186     0035                     TMR1_SetInterruptHandler@InterruptHandler:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189     0035                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1190                           ; 2 bytes @ 0x0
  1191                           
  1192     0035                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1193                           ; 2 bytes @ 0x0
  1194                           
  1195     0035                     EUSART_SetErrorHandler@interruptHandler:	
  1196                           ; 2 bytes @ 0x0
  1197                           
  1198                           
  1199                           ; 2 bytes @ 0x0
  1200     0035                     	ds	2
  1201     0037                     ??_TMR1_Initialize:
  1202     0037                     ??_EUSART_Initialize:	
  1203                           ; 1 bytes @ 0x2
  1204                           
  1205     0037                     ??_TMR1_SetInterruptHandler:	
  1206                           ; 1 bytes @ 0x2
  1207                           
  1208     0037                     ??_EUSART_SetFramingErrorHandler:	
  1209                           ; 1 bytes @ 0x2
  1210                           
  1211     0037                     ??_EUSART_SetOverrunErrorHandler:	
  1212                           ; 1 bytes @ 0x2
  1213                           
  1214     0037                     ??_EUSART_SetErrorHandler:	
  1215                           ; 1 bytes @ 0x2
  1216                           
  1217     0037                     ??_SYSTEM_Initialize:	
  1218                           ; 1 bytes @ 0x2
  1219                           
  1220     0037                     ??_main:	
  1221                           ; 1 bytes @ 0x2
  1222                           
  1223                           
  1224                           	psect	maintext
  1225     0033                     __pmaintext:	
  1226                           ; 1 bytes @ 0x2
  1227 ;;
  1228 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1229 ;;
  1230 ;; *************** function _main *****************
  1231 ;; Defined at:
  1232 ;;		line 90 in file "main.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;		None
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;		None
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      void 
  1239 ;; Registers used:
  1240 ;;		wreg, status,2, status,0, pclath, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : B1F/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1246 ;;      Params:         0       0       0       0
  1247 ;;      Locals:         0       0       0       0
  1248 ;;      Temps:          0       0       0       0
  1249 ;;      Totals:         0       0       0       0
  1250 ;;Total ram usage:        0 bytes
  1251 ;; Hardware stack levels required when called: 6
  1252 ;; This function calls:
  1253 ;;		_EUSART_Initialize
  1254 ;;		_EUSART_Write
  1255 ;;		_EUSART_is_tx_done
  1256 ;;		_SYSTEM_Initialize
  1257 ;;		_TMR1_Initialize
  1258 ;; This function is called by:
  1259 ;;		Startup code after reset
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263     0033                     _main:	
  1264                           ;psect for function _main
  1265                           
  1266     0033                     l1292:	
  1267                           ;incstack = 0
  1268                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1269                           
  1270                           
  1271                           ;main.c: 92:     SYSTEM_Initialize();
  1272     0033  3181  2113  3180   	fcall	_SYSTEM_Initialize
  1273                           
  1274                           ;main.c: 94:     EUSART_Initialize();
  1275     0036  3180  208B  3180   	fcall	_EUSART_Initialize
  1276                           
  1277                           ;main.c: 96:     TMR1_Initialize();
  1278     0039  3180  20D3  3180   	fcall	_TMR1_Initialize
  1279     003C                     l1294:
  1280                           
  1281                           ;main.c: 102:     (INTCONbits.GIE = 1);
  1282     003C  178B               	bsf	11,7	;volatile
  1283     003D                     l1296:
  1284                           
  1285                           ;main.c: 105:     (INTCONbits.PEIE = 1);
  1286     003D  170B               	bsf	11,6	;volatile
  1287     003E                     l1298:
  1288     003E  0022               	movlb	2	; select bank2
  1289     003F  150C               	bsf	12,2	;volatile
  1290     0040                     l271:
  1291                           
  1292                           ;main.c: 120:         EUSART_Write(0x80);
  1293     0040  3080               	movlw	128
  1294     0041  3181  2132  3180   	fcall	_EUSART_Write
  1295     0044                     l1300:	
  1296                           ;main.c: 121:         while(!EUSART_is_tx_done());
  1297                           
  1298     0044  3181  2169  3180   	fcall	_EUSART_is_tx_done
  1299     0047  3A00               	xorlw	0
  1300     0048  1903               	skipnz
  1301     0049  284B               	goto	u311
  1302     004A  284C               	goto	u310
  1303     004B                     u311:
  1304     004B  2844               	goto	l1300
  1305     004C                     u310:
  1306     004C                     l275:	
  1307                           ;main.c: 123:         do { LATAbits.LATA1 = 1; } while(0);
  1308                           
  1309     004C  0022               	movlb	2	; select bank2
  1310     004D  148C               	bsf	12,1	;volatile
  1311     004E                     l276:
  1312                           
  1313                           ;main.c: 124:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1314     004E  3200               	nop2	;2 cycle nop
  1315     004F  3200               	nop2	;2 cycle nop
  1316     0050  3200               	nop2	;2 cycle nop
  1317     0051                     l277:	
  1318                           ;main.c: 125:         do { LATAbits.LATA1 = 0; } while(0);
  1319                           
  1320     0051  0022               	movlb	2	; select bank2
  1321     0052  108C               	bcf	12,1	;volatile
  1322     0053                     l279:	
  1323                           ;main.c: 127:         do { LATAbits.LATA2 = 0; } while(0);
  1324                           
  1325     0053  110C               	bcf	12,2	;volatile
  1326     0054                     l280:
  1327                           
  1328                           ;main.c: 128:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1329     0054  3200               	nop2	;2 cycle nop
  1330     0055  3200               	nop2	;2 cycle nop
  1331     0056  3200               	nop2	;2 cycle nop
  1332     0057                     l281:	
  1333                           ;main.c: 130:         do { LATAbits.LATA2 = 1; } while(0);
  1334                           
  1335     0057  0022               	movlb	2	; select bank2
  1336     0058  150C               	bsf	12,2	;volatile
  1337     0059                     l1302:
  1338                           
  1339                           ;main.c: 131:         EUSART_Write(0x40);
  1340     0059  3040               	movlw	64
  1341     005A  3181  2132  3180   	fcall	_EUSART_Write
  1342     005D                     l1304:	
  1343                           ;main.c: 132:         while(!EUSART_is_tx_done());
  1344                           
  1345     005D  3181  2169  3180   	fcall	_EUSART_is_tx_done
  1346     0060  3A00               	xorlw	0
  1347     0061  1903               	skipnz
  1348     0062  2864               	goto	u321
  1349     0063  2865               	goto	u320
  1350     0064                     u321:
  1351     0064  285D               	goto	l1304
  1352     0065                     u320:
  1353     0065                     l286:	
  1354                           ;main.c: 134:         do { LATAbits.LATA1 = 1; } while(0);
  1355                           
  1356     0065  0022               	movlb	2	; select bank2
  1357     0066  148C               	bsf	12,1	;volatile
  1358     0067                     l287:
  1359                           
  1360                           ;main.c: 135:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1361     0067  3200               	nop2	;2 cycle nop
  1362     0068  3200               	nop2	;2 cycle nop
  1363     0069  3200               	nop2	;2 cycle nop
  1364     006A                     l288:	
  1365                           ;main.c: 136:         do { LATAbits.LATA1 = 0; } while(0);
  1366                           
  1367     006A  0022               	movlb	2	; select bank2
  1368     006B  108C               	bcf	12,1	;volatile
  1369     006C                     l290:	
  1370                           ;main.c: 138:         do { LATAbits.LATA2 = 0; } while(0);
  1371                           
  1372     006C  110C               	bcf	12,2	;volatile
  1373     006D                     l291:
  1374                           
  1375                           ;main.c: 139:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1376     006D  3200               	nop2	;2 cycle nop
  1377     006E  3200               	nop2	;2 cycle nop
  1378     006F  3200               	nop2	;2 cycle nop
  1379     0070                     l292:	
  1380                           ;main.c: 141:         do { LATAbits.LATA2 = 1; } while(0);
  1381                           
  1382     0070  0022               	movlb	2	; select bank2
  1383     0071  150C               	bsf	12,2	;volatile
  1384     0072                     l1306:
  1385                           
  1386                           ;main.c: 142:         EUSART_Write(0x20);
  1387     0072  3020               	movlw	32
  1388     0073  3181  2132  3180   	fcall	_EUSART_Write
  1389     0076                     l1308:	
  1390                           ;main.c: 143:         while(!EUSART_is_tx_done());
  1391                           
  1392     0076  3181  2169  3180   	fcall	_EUSART_is_tx_done
  1393     0079  3A00               	xorlw	0
  1394     007A  1903               	skipnz
  1395     007B  287D               	goto	u331
  1396     007C  287E               	goto	u330
  1397     007D                     u331:
  1398     007D  2876               	goto	l1308
  1399     007E                     u330:
  1400     007E                     l297:	
  1401                           ;main.c: 145:         do { LATAbits.LATA1 = 1; } while(0);
  1402                           
  1403     007E  0022               	movlb	2	; select bank2
  1404     007F  148C               	bsf	12,1	;volatile
  1405     0080                     l298:
  1406                           
  1407                           ;main.c: 146:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1408     0080  3200               	nop2	;2 cycle nop
  1409     0081  3200               	nop2	;2 cycle nop
  1410     0082  3200               	nop2	;2 cycle nop
  1411     0083                     l299:	
  1412                           ;main.c: 147:         do { LATAbits.LATA1 = 0; } while(0);
  1413                           
  1414     0083  0022               	movlb	2	; select bank2
  1415     0084  108C               	bcf	12,1	;volatile
  1416     0085                     l301:	
  1417                           ;main.c: 149:         do { LATAbits.LATA2 = 0; } while(0);
  1418                           
  1419     0085  110C               	bcf	12,2	;volatile
  1420     0086                     l302:
  1421                           
  1422                           ;main.c: 150:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1423     0086  3200               	nop2	;2 cycle nop
  1424     0087  3200               	nop2	;2 cycle nop
  1425     0088  3200               	nop2	;2 cycle nop
  1426     0089  283E               	goto	l1298
  1427     008A  2819               	ljmp	start
  1428     008B                     __end_of_main:
  1429                           
  1430                           	psect	text1
  1431     0113                     __ptext1:	
  1432 ;; *************** function _SYSTEM_Initialize *****************
  1433 ;; Defined at:
  1434 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;		None
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;		None
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, status,2, status,0, pclath, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1448 ;;      Params:         0       0       0       0
  1449 ;;      Locals:         0       0       0       0
  1450 ;;      Temps:          0       0       0       0
  1451 ;;      Totals:         0       0       0       0
  1452 ;;Total ram usage:        0 bytes
  1453 ;; Hardware stack levels used: 1
  1454 ;; Hardware stack levels required when called: 5
  1455 ;; This function calls:
  1456 ;;		_EUSART_Initialize
  1457 ;;		_OSCILLATOR_Initialize
  1458 ;;		_PIN_MANAGER_Initialize
  1459 ;;		_TMR1_Initialize
  1460 ;;		_WDT_Initialize
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466     0113                     _SYSTEM_Initialize:	
  1467                           ;psect for function _SYSTEM_Initialize
  1468                           
  1469     0113                     l1282:	
  1470                           ;incstack = 0
  1471                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1472                           
  1473                           
  1474                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1475     0113  3180  20EC  3181   	fcall	_PIN_MANAGER_Initialize
  1476                           
  1477                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1478     0116  3181  2140  3181   	fcall	_OSCILLATOR_Initialize
  1479                           
  1480                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1481     0119  3181  2165  3181   	fcall	_WDT_Initialize
  1482                           
  1483                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1484     011C  3180  20D3  3181   	fcall	_TMR1_Initialize
  1485                           
  1486                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  1487     011F  3180  208B  3181   	fcall	_EUSART_Initialize
  1488     0122                     l49:
  1489     0122  0008               	return
  1490     0123                     __end_of_SYSTEM_Initialize:
  1491                           
  1492                           	psect	text2
  1493     0165                     __ptext2:	
  1494 ;; *************** function _WDT_Initialize *****************
  1495 ;; Defined at:
  1496 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;		None
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;		None
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		wreg
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1510 ;;      Params:         0       0       0       0
  1511 ;;      Locals:         0       0       0       0
  1512 ;;      Temps:          0       0       0       0
  1513 ;;      Totals:         0       0       0       0
  1514 ;;Total ram usage:        0 bytes
  1515 ;; Hardware stack levels used: 1
  1516 ;; Hardware stack levels required when called: 3
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_SYSTEM_Initialize
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524     0165                     _WDT_Initialize:	
  1525                           ;psect for function _WDT_Initialize
  1526                           
  1527     0165                     l1252:	
  1528                           ;incstack = 0
  1529                           ; Regs used in _WDT_Initialize: [wreg]
  1530                           
  1531                           
  1532                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  1533     0165  3016               	movlw	22
  1534     0166  0021               	movlb	1	; select bank1
  1535     0167  0097               	movwf	23	;volatile
  1536     0168                     l55:
  1537     0168  0008               	return
  1538     0169                     __end_of_WDT_Initialize:
  1539                           
  1540                           	psect	text3
  1541     00D3                     __ptext3:	
  1542 ;; *************** function _TMR1_Initialize *****************
  1543 ;; Defined at:
  1544 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2, status,0, pclath, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1558 ;;      Params:         0       0       0       0
  1559 ;;      Locals:         0       0       0       0
  1560 ;;      Temps:          0       0       0       0
  1561 ;;      Totals:         0       0       0       0
  1562 ;;Total ram usage:        0 bytes
  1563 ;; Hardware stack levels used: 1
  1564 ;; Hardware stack levels required when called: 4
  1565 ;; This function calls:
  1566 ;;		_TMR1_SetInterruptHandler
  1567 ;; This function is called by:
  1568 ;;		_SYSTEM_Initialize
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573     00D3                     _TMR1_Initialize:	
  1574                           ;psect for function _TMR1_Initialize
  1575                           
  1576     00D3                     l1254:	
  1577                           ;incstack = 0
  1578                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1579                           
  1580                           
  1581                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1582     00D3  0020               	movlb	0	; select bank0
  1583     00D4  0199               	clrf	25	;volatile
  1584     00D5                     l1256:
  1585                           
  1586                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xFC;
  1587     00D5  30FC               	movlw	252
  1588     00D6  0097               	movwf	23	;volatile
  1589     00D7                     l1258:
  1590                           
  1591                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x18;
  1592     00D7  3018               	movlw	24
  1593     00D8  0096               	movwf	22	;volatile
  1594     00D9                     l1260:
  1595                           
  1596                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1597     00D9  1011               	bcf	17,0	;volatile
  1598     00DA                     l1262:
  1599                           
  1600                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1601     00DA  0817               	movf	23,w	;volatile
  1602     00DB  00F1               	movwf	_timer1ReloadVal+1	;volatile
  1603     00DC  0816               	movf	22,w	;volatile
  1604     00DD  00F0               	movwf	_timer1ReloadVal	;volatile
  1605     00DE                     l1264:
  1606                           
  1607                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1608     00DE  0021               	movlb	1	; select bank1
  1609     00DF  1411               	bsf	17,0	;volatile
  1610     00E0                     l1266:
  1611                           
  1612                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1613     00E0  306E               	movlw	low _TMR1_DefaultInterruptHandler
  1614     00E1  0020               	movlb	0	; select bank0
  1615     00E2  00B5               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1616     00E3  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1617     00E4  00B6               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1618     00E5  3181  214D  3180   	fcall	_TMR1_SetInterruptHandler
  1619     00E8                     l1268:
  1620                           
  1621                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  1622     00E8  3001               	movlw	1
  1623     00E9  0020               	movlb	0	; select bank0
  1624     00EA  0098               	movwf	24	;volatile
  1625     00EB                     l82:
  1626     00EB  0008               	return
  1627     00EC                     __end_of_TMR1_Initialize:
  1628                           
  1629                           	psect	text4
  1630     014D                     __ptext4:	
  1631 ;; *************** function _TMR1_SetInterruptHandler *****************
  1632 ;; Defined at:
  1633 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1636 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;		None
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      void 
  1641 ;; Registers used:
  1642 ;;		wreg
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1648 ;;      Params:         0       2       0       0
  1649 ;;      Locals:         0       0       0       0
  1650 ;;      Temps:          0       0       0       0
  1651 ;;      Totals:         0       2       0       0
  1652 ;;Total ram usage:        2 bytes
  1653 ;; Hardware stack levels used: 1
  1654 ;; Hardware stack levels required when called: 3
  1655 ;; This function calls:
  1656 ;;		Nothing
  1657 ;; This function is called by:
  1658 ;;		_TMR1_Initialize
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662     014D                     _TMR1_SetInterruptHandler:	
  1663                           ;psect for function _TMR1_SetInterruptHandler
  1664                           
  1665     014D                     l1226:	
  1666                           ;incstack = 0
  1667                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1668                           
  1669                           
  1670                           ;mcc_generated_files/tmr1.c: 178:     TMR1_InterruptHandler = InterruptHandler;
  1671     014D  0020               	movlb	0	; select bank0
  1672     014E  0836               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1673     014F  00FA               	movwf	_TMR1_InterruptHandler+1
  1674     0150  0835               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1675     0151  00F9               	movwf	_TMR1_InterruptHandler
  1676     0152                     l108:
  1677     0152  0008               	return
  1678     0153                     __end_of_TMR1_SetInterruptHandler:
  1679                           
  1680                           	psect	text5
  1681     00EC                     __ptext5:	
  1682 ;; *************** function _PIN_MANAGER_Initialize *****************
  1683 ;; Defined at:
  1684 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, status,2
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1698 ;;      Params:         0       0       0       0
  1699 ;;      Locals:         0       0       0       0
  1700 ;;      Temps:          0       0       0       0
  1701 ;;      Totals:         0       0       0       0
  1702 ;;Total ram usage:        0 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; Hardware stack levels required when called: 3
  1705 ;; This function calls:
  1706 ;;		Nothing
  1707 ;; This function is called by:
  1708 ;;		_SYSTEM_Initialize
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712     00EC                     _PIN_MANAGER_Initialize:	
  1713                           ;psect for function _PIN_MANAGER_Initialize
  1714                           
  1715     00EC                     l1234:	
  1716                           ;incstack = 0
  1717                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1718                           
  1719                           
  1720                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x1D;
  1721     00EC  301D               	movlw	29
  1722     00ED  0022               	movlb	2	; select bank2
  1723     00EE  008C               	movwf	12	;volatile
  1724     00EF                     l1236:
  1725                           
  1726                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1727     00EF  018D               	clrf	13	;volatile
  1728     00F0                     l1238:
  1729                           
  1730                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xE0;
  1731     00F0  30E0               	movlw	224
  1732     00F1  0021               	movlb	1	; select bank1
  1733     00F2  008C               	movwf	12	;volatile
  1734     00F3                     l1240:
  1735                           
  1736                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  1737     00F3  30FF               	movlw	255
  1738     00F4  008D               	movwf	13	;volatile
  1739     00F5                     l1242:
  1740                           
  1741                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF8;
  1742     00F5  30F8               	movlw	248
  1743     00F6  0023               	movlb	3	; select bank3
  1744     00F7  008D               	movwf	13	;volatile
  1745                           
  1746                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x00;
  1747     00F8  018C               	clrf	12	;volatile
  1748                           
  1749                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  1750     00F9  0024               	movlb	4	; select bank4
  1751     00FA  018D               	clrf	13	;volatile
  1752                           
  1753                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  1754     00FB  018C               	clrf	12	;volatile
  1755     00FC                     l1244:
  1756                           
  1757                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  1758     00FC  0021               	movlb	1	; select bank1
  1759     00FD  1795               	bsf	21,7	;volatile
  1760                           
  1761                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  1762     00FE  0022               	movlb	2	; select bank2
  1763     00FF  019D               	clrf	29	;volatile
  1764                           
  1765                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  1766     0100  019E               	clrf	30	;volatile
  1767     0101                     l25:
  1768     0101  0008               	return
  1769     0102                     __end_of_PIN_MANAGER_Initialize:
  1770                           
  1771                           	psect	text6
  1772     0140                     __ptext6:	
  1773 ;; *************** function _OSCILLATOR_Initialize *****************
  1774 ;; Defined at:
  1775 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg, status,2
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1789 ;;      Params:         0       0       0       0
  1790 ;;      Locals:         0       0       0       0
  1791 ;;      Temps:          0       0       0       0
  1792 ;;      Totals:         0       0       0       0
  1793 ;;Total ram usage:        0 bytes
  1794 ;; Hardware stack levels used: 1
  1795 ;; Hardware stack levels required when called: 3
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_SYSTEM_Initialize
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803     0140                     _OSCILLATOR_Initialize:	
  1804                           ;psect for function _OSCILLATOR_Initialize
  1805                           
  1806     0140                     l1246:	
  1807                           ;incstack = 0
  1808                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1809                           
  1810                           
  1811                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x48;
  1812     0140  3048               	movlw	72
  1813     0141  0021               	movlb	1	; select bank1
  1814     0142  0099               	movwf	25	;volatile
  1815     0143                     l1248:
  1816                           
  1817                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  1818     0143  0198               	clrf	24	;volatile
  1819     0144                     l1250:
  1820                           
  1821                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  1822     0144  0022               	movlb	2	; select bank2
  1823     0145  0196               	clrf	22	;volatile
  1824     0146                     l52:
  1825     0146  0008               	return
  1826     0147                     __end_of_OSCILLATOR_Initialize:
  1827                           
  1828                           	psect	text7
  1829     008B                     __ptext7:	
  1830 ;; *************** function _EUSART_Initialize *****************
  1831 ;; Defined at:
  1832 ;;		line 65 in file "mcc_generated_files/eusart.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;		None
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;		None
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2, status,0, pclath, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1846 ;;      Params:         0       0       0       0
  1847 ;;      Locals:         0       0       0       0
  1848 ;;      Temps:          0       0       0       0
  1849 ;;      Totals:         0       0       0       0
  1850 ;;Total ram usage:        0 bytes
  1851 ;; Hardware stack levels used: 1
  1852 ;; Hardware stack levels required when called: 4
  1853 ;; This function calls:
  1854 ;;		_EUSART_SetErrorHandler
  1855 ;;		_EUSART_SetFramingErrorHandler
  1856 ;;		_EUSART_SetOverrunErrorHandler
  1857 ;; This function is called by:
  1858 ;;		_SYSTEM_Initialize
  1859 ;;		_main
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863     008B                     _EUSART_Initialize:	
  1864                           ;psect for function _EUSART_Initialize
  1865                           
  1866     008B                     l1270:	
  1867                           ;incstack = 0
  1868                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1869                           
  1870                           
  1871                           ;mcc_generated_files/eusart.c: 70:     BAUDCON = 0x18;
  1872     008B  3018               	movlw	24
  1873     008C  0023               	movlb	3	; select bank3
  1874     008D  009F               	movwf	31	;volatile
  1875                           
  1876                           ;mcc_generated_files/eusart.c: 73:     RCSTA = 0x80;
  1877     008E  3080               	movlw	128
  1878     008F  009D               	movwf	29	;volatile
  1879                           
  1880                           ;mcc_generated_files/eusart.c: 76:     TXSTA = 0xB4;
  1881     0090  30B4               	movlw	180
  1882     0091  009E               	movwf	30	;volatile
  1883                           
  1884                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0x06;
  1885     0092  3006               	movlw	6
  1886     0093  009B               	movwf	27	;volatile
  1887     0094                     l1272:
  1888                           
  1889                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x00;
  1890     0094  019C               	clrf	28	;volatile
  1891     0095                     l1274:
  1892                           
  1893                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  1894     0095  3000               	movlw	0
  1895     0096  0020               	movlb	0	; select bank0
  1896     0097  00B5               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  1897     0098  3000               	movlw	0
  1898     0099  00B6               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  1899     009A  3181  2159  3180   	fcall	_EUSART_SetFramingErrorHandler
  1900     009D                     l1276:
  1901                           
  1902                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  1903     009D  3000               	movlw	0
  1904     009E  0020               	movlb	0	; select bank0
  1905     009F  00B5               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  1906     00A0  3000               	movlw	0
  1907     00A1  00B6               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  1908     00A2  3181  2153  3180   	fcall	_EUSART_SetOverrunErrorHandler
  1909     00A5                     l1278:
  1910                           
  1911                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  1912     00A5  3000               	movlw	0
  1913     00A6  0020               	movlb	0	; select bank0
  1914     00A7  00B5               	movwf	EUSART_SetErrorHandler@interruptHandler
  1915     00A8  3000               	movlw	0
  1916     00A9  00B6               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  1917     00AA  3181  215F  3180   	fcall	_EUSART_SetErrorHandler
  1918     00AD                     l1280:
  1919                           
  1920                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  1921     00AD  01F5               	clrf	_eusartRxLastError	;volatile
  1922     00AE                     l154:
  1923     00AE  0008               	return
  1924     00AF                     __end_of_EUSART_Initialize:
  1925                           
  1926                           	psect	text8
  1927     0153                     __ptext8:	
  1928 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  1929 ;; Defined at:
  1930 ;;		line 167 in file "mcc_generated_files/eusart.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  1933 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1945 ;;      Params:         0       2       0       0
  1946 ;;      Locals:         0       0       0       0
  1947 ;;      Temps:          0       0       0       0
  1948 ;;      Totals:         0       2       0       0
  1949 ;;Total ram usage:        2 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; Hardware stack levels required when called: 3
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_EUSART_Initialize
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959     0153                     _EUSART_SetOverrunErrorHandler:	
  1960                           ;psect for function _EUSART_SetOverrunErrorHandler
  1961                           
  1962     0153                     l1230:	
  1963                           ;incstack = 0
  1964                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  1965                           
  1966                           
  1967                           ;mcc_generated_files/eusart.c: 168:     EUSART_OverrunErrorHandler = interruptHandler;
  1968     0153  0020               	movlb	0	; select bank0
  1969     0154  0836               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  1970     0155  00B2               	movwf	_EUSART_OverrunErrorHandler+1
  1971     0156  0835               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  1972     0157  00B1               	movwf	_EUSART_OverrunErrorHandler
  1973     0158                     l198:
  1974     0158  0008               	return
  1975     0159                     __end_of_EUSART_SetOverrunErrorHandler:
  1976                           
  1977                           	psect	text9
  1978     0159                     __ptext9:	
  1979 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  1980 ;; Defined at:
  1981 ;;		line 163 in file "mcc_generated_files/eusart.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  1984 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1996 ;;      Params:         0       2       0       0
  1997 ;;      Locals:         0       0       0       0
  1998 ;;      Temps:          0       0       0       0
  1999 ;;      Totals:         0       2       0       0
  2000 ;;Total ram usage:        2 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; Hardware stack levels required when called: 3
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_EUSART_Initialize
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010     0159                     _EUSART_SetFramingErrorHandler:	
  2011                           ;psect for function _EUSART_SetFramingErrorHandler
  2012                           
  2013     0159                     l1228:	
  2014                           ;incstack = 0
  2015                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2016                           
  2017                           
  2018                           ;mcc_generated_files/eusart.c: 164:     EUSART_FramingErrorHandler = interruptHandler;
  2019     0159  0020               	movlb	0	; select bank0
  2020     015A  0836               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  2021     015B  00B4               	movwf	_EUSART_FramingErrorHandler+1
  2022     015C  0835               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  2023     015D  00B3               	movwf	_EUSART_FramingErrorHandler
  2024     015E                     l195:
  2025     015E  0008               	return
  2026     015F                     __end_of_EUSART_SetFramingErrorHandler:
  2027                           
  2028                           	psect	text10
  2029     015F                     __ptext10:	
  2030 ;; *************** function _EUSART_SetErrorHandler *****************
  2031 ;; Defined at:
  2032 ;;		line 171 in file "mcc_generated_files/eusart.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  2035 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2047 ;;      Params:         0       2       0       0
  2048 ;;      Locals:         0       0       0       0
  2049 ;;      Temps:          0       0       0       0
  2050 ;;      Totals:         0       2       0       0
  2051 ;;Total ram usage:        2 bytes
  2052 ;; Hardware stack levels used: 1
  2053 ;; Hardware stack levels required when called: 3
  2054 ;; This function calls:
  2055 ;;		Nothing
  2056 ;; This function is called by:
  2057 ;;		_EUSART_Initialize
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061     015F                     _EUSART_SetErrorHandler:	
  2062                           ;psect for function _EUSART_SetErrorHandler
  2063                           
  2064     015F                     l1232:	
  2065                           ;incstack = 0
  2066                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2067                           
  2068                           
  2069                           ;mcc_generated_files/eusart.c: 172:     EUSART_ErrorHandler = interruptHandler;
  2070     015F  0020               	movlb	0	; select bank0
  2071     0160  0836               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  2072     0161  00B0               	movwf	_EUSART_ErrorHandler+1
  2073     0162  0835               	movf	EUSART_SetErrorHandler@interruptHandler,w
  2074     0163  00AF               	movwf	_EUSART_ErrorHandler
  2075     0164                     l201:
  2076     0164  0008               	return
  2077     0165                     __end_of_EUSART_SetErrorHandler:
  2078                           
  2079                           	psect	text11
  2080     0169                     __ptext11:	
  2081 ;; *************** function _EUSART_is_tx_done *****************
  2082 ;; Defined at:
  2083 ;;		line 103 in file "mcc_generated_files/eusart.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;		None
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      _Bool 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2097 ;;      Params:         0       0       0       0
  2098 ;;      Locals:         0       0       0       0
  2099 ;;      Temps:          0       0       0       0
  2100 ;;      Totals:         0       0       0       0
  2101 ;;Total ram usage:        0 bytes
  2102 ;; Hardware stack levels used: 1
  2103 ;; Hardware stack levels required when called: 3
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_main
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111     0169                     _EUSART_is_tx_done:	
  2112                           ;psect for function _EUSART_is_tx_done
  2113                           
  2114     0169                     l1284:	
  2115                           ;incstack = 0
  2116                           ; Regs used in _EUSART_is_tx_done: [wreg+status,2+status,0]
  2117                           
  2118                           
  2119                           ;mcc_generated_files/eusart.c: 105:     return TXSTAbits.TRMT;
  2120     0169  0023               	movlb	3	; select bank3
  2121     016A  0C1E               	rrf	30,w	;volatile
  2122     016B  3901               	andlw	1
  2123     016C                     l165:
  2124     016C  0008               	return
  2125     016D                     __end_of_EUSART_is_tx_done:
  2126                           
  2127                           	psect	text12
  2128     0132                     __ptext12:	
  2129 ;; *************** function _EUSART_Write *****************
  2130 ;; Defined at:
  2131 ;;		line 138 in file "mcc_generated_files/eusart.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  txData          1    wreg     unsigned char 
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;  txData          1    0[BANK0 ] unsigned char 
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		wreg
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2145 ;;      Params:         0       0       0       0
  2146 ;;      Locals:         0       1       0       0
  2147 ;;      Temps:          0       0       0       0
  2148 ;;      Totals:         0       1       0       0
  2149 ;;Total ram usage:        1 bytes
  2150 ;; Hardware stack levels used: 1
  2151 ;; Hardware stack levels required when called: 3
  2152 ;; This function calls:
  2153 ;;		Nothing
  2154 ;; This function is called by:
  2155 ;;		_main
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159     0132                     _EUSART_Write:	
  2160                           ;psect for function _EUSART_Write
  2161                           
  2162                           
  2163                           ;incstack = 0
  2164                           ; Regs used in _EUSART_Write: [wreg]
  2165                           ;EUSART_Write@txData stored from wreg
  2166     0132  0020               	movlb	0	; select bank0
  2167     0133  00B5               	movwf	EUSART_Write@txData
  2168     0134                     l1288:
  2169                           
  2170                           ;mcc_generated_files/eusart.c: 138: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 139: {;mcc_generated_files/eusart.c: 140:     RCSTAbits.SREN = 0;
  2171     0134  0023               	movlb	3	; select bank3
  2172     0135  129D               	bcf	29,5	;volatile
  2173                           
  2174                           ;mcc_generated_files/eusart.c: 141:     RCSTAbits.CREN = 0;
  2175     0136  121D               	bcf	29,4	;volatile
  2176     0137                     l180:	
  2177                           ;mcc_generated_files/eusart.c: 143:     {;mcc_generated_files/eusart.c: 144:     }
  2178                           
  2179                           
  2180                           ;mcc_generated_files/eusart.c: 142:     while(0 == PIR1bits.TXIF)
  2181     0137  0020               	movlb	0	; select bank0
  2182     0138  1E11               	btfss	17,4	;volatile
  2183     0139  293B               	goto	u301
  2184     013A  293C               	goto	u300
  2185     013B                     u301:
  2186     013B  2937               	goto	l180
  2187     013C                     u300:
  2188     013C                     l1290:
  2189                           
  2190                           ;mcc_generated_files/eusart.c: 146:     TXREG = txData;
  2191     013C  0835               	movf	EUSART_Write@txData,w
  2192     013D  0023               	movlb	3	; select bank3
  2193     013E  009A               	movwf	26	;volatile
  2194     013F                     l183:
  2195     013F  0008               	return
  2196     0140                     __end_of_EUSART_Write:
  2197                           
  2198                           	psect	intentry
  2199     0004                     __pintentry:	
  2200 ;; *************** function _INTERRUPT_InterruptManager *****************
  2201 ;; Defined at:
  2202 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;		None
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0, pclath, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2216 ;;      Params:         0       0       0       0
  2217 ;;      Locals:         0       0       0       0
  2218 ;;      Temps:          0       0       0       0
  2219 ;;      Totals:         0       0       0       0
  2220 ;;Total ram usage:        0 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; Hardware stack levels required when called: 2
  2223 ;; This function calls:
  2224 ;;		_TMR1_ISR
  2225 ;; This function is called by:
  2226 ;;		Interrupt level 1
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230     0004                     _INTERRUPT_InterruptManager:
  2231                           
  2232                           ;incstack = 0
  2233     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2234                           
  2235                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2236     0005  3180               	pagesel	$
  2237     0006                     i1l1200:
  2238                           
  2239                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  2240     0006  1F0B               	btfss	11,6	;volatile
  2241     0007  2809               	goto	u24_21
  2242     0008  280A               	goto	u24_20
  2243     0009                     u24_21:
  2244     0009  2817               	goto	i1l218
  2245     000A                     u24_20:
  2246     000A                     i1l1202:
  2247                           
  2248                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  2249     000A  0021               	movlb	1	; select bank1
  2250     000B  1C11               	btfss	17,0	;volatile
  2251     000C  280E               	goto	u25_21
  2252     000D  280F               	goto	u25_20
  2253     000E                     u25_21:
  2254     000E  2817               	goto	i1l218
  2255     000F                     u25_20:
  2256     000F                     i1l1204:
  2257     000F  0020               	movlb	0	; select bank0
  2258     0010  1C11               	btfss	17,0	;volatile
  2259     0011  2813               	goto	u26_21
  2260     0012  2814               	goto	u26_20
  2261     0013                     u26_21:
  2262     0013  2817               	goto	i1l218
  2263     0014                     u26_20:
  2264     0014                     i1l1206:
  2265                           
  2266                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  2267     0014  3180  20AF  3180   	fcall	_TMR1_ISR
  2268     0017                     i1l218:	
  2269                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  2270                           
  2271     0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2272     0018  0009               	retfie
  2273     0019                     __end_of_INTERRUPT_InterruptManager:
  2274                           
  2275                           	psect	text14
  2276     00AF                     __ptext14:	
  2277 ;; *************** function _TMR1_ISR *****************
  2278 ;; Defined at:
  2279 ;;		line 234 in file "main.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;		None
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      void 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0, pclath, cstack
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2293 ;;      Params:         0       0       0       0
  2294 ;;      Locals:         0       0       0       0
  2295 ;;      Temps:          1       0       0       0
  2296 ;;      Totals:         1       0       0       0
  2297 ;;Total ram usage:        1 bytes
  2298 ;; Hardware stack levels used: 1
  2299 ;; Hardware stack levels required when called: 1
  2300 ;; This function calls:
  2301 ;;		NULL
  2302 ;;		_TMR1_DefaultInterruptHandler
  2303 ;;		_TMR1_WriteTimer
  2304 ;; This function is called by:
  2305 ;;		_INTERRUPT_InterruptManager
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309     00AF                     _TMR1_ISR:	
  2310                           ;psect for function _TMR1_ISR
  2311                           
  2312     00AF                     i1l1156:	
  2313                           ;incstack = 0
  2314                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  2315                           
  2316                           
  2317                           ;main.c: 238:     PIR1bits.TMR1IF = 0;
  2318     00AF  0020               	movlb	0	; select bank0
  2319     00B0  1011               	bcf	17,0	;volatile
  2320     00B1                     i1l1158:
  2321                           
  2322                           ;main.c: 239:     TMR1_WriteTimer(timer1ReloadVal);
  2323     00B1  0871               	movf	_timer1ReloadVal+1,w	;volatile
  2324     00B2  00F7               	movwf	TMR1_WriteTimer@timerVal+1
  2325     00B3  0870               	movf	_timer1ReloadVal,w	;volatile
  2326     00B4  00F6               	movwf	TMR1_WriteTimer@timerVal
  2327     00B5  3181  2102  3180   	fcall	_TMR1_WriteTimer
  2328     00B8                     i1l1160:
  2329                           
  2330                           ;main.c: 241:     NewDataFlag++;
  2331     00B8  3001               	movlw	1
  2332     00B9  00F8               	movwf	??_TMR1_ISR
  2333     00BA  0878               	movf	??_TMR1_ISR,w
  2334     00BB  07F4               	addwf	_NewDataFlag,f
  2335     00BC                     i1l1162:
  2336                           
  2337                           ;main.c: 242:     column++;
  2338     00BC  3001               	movlw	1
  2339     00BD  00F8               	movwf	??_TMR1_ISR
  2340     00BE  0878               	movf	??_TMR1_ISR,w
  2341     00BF  07FB               	addwf	_column,f	;volatile
  2342     00C0                     i1l1164:
  2343                           
  2344                           ;main.c: 243:     if(column > 2){
  2345     00C0  3003               	movlw	3
  2346     00C1  027B               	subwf	_column,w	;volatile
  2347     00C2  1C03               	skipc
  2348     00C3  28C5               	goto	u18_21
  2349     00C4  28C6               	goto	u18_20
  2350     00C5                     u18_21:
  2351     00C5  28C7               	goto	i1l1168
  2352     00C6                     u18_20:
  2353     00C6                     i1l1166:
  2354                           
  2355                           ;main.c: 244:         column = 0;
  2356     00C6  01FB               	clrf	_column	;volatile
  2357     00C7                     i1l1168:
  2358                           
  2359                           ;main.c: 247:     if(TMR1_InterruptHandler)
  2360     00C7  0879               	movf	_TMR1_InterruptHandler,w
  2361     00C8  047A               	iorwf	_TMR1_InterruptHandler+1,w
  2362     00C9  1903               	btfsc	3,2
  2363     00CA  28CC               	goto	u19_21
  2364     00CB  28CD               	goto	u19_20
  2365     00CC                     u19_21:
  2366     00CC  28D2               	goto	i1l312
  2367     00CD                     u19_20:
  2368     00CD                     i1l1170:
  2369                           
  2370                           ;main.c: 248:     {;main.c: 249:         TMR1_InterruptHandler();
  2371     00CD  087A               	movf	_TMR1_InterruptHandler+1,w
  2372     00CE  008A               	movwf	10
  2373     00CF  0879               	movf	_TMR1_InterruptHandler,w
  2374     00D0  000A               	callw
  2375     00D1  3180               	pagesel	$
  2376     00D2                     i1l312:
  2377     00D2  0008               	return
  2378     00D3                     __end_of_TMR1_ISR:
  2379                           
  2380                           	psect	text15
  2381     0102                     __ptext15:	
  2382 ;; *************** function _TMR1_WriteTimer *****************
  2383 ;; Defined at:
  2384 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  timerVal        2    0[COMMON] unsigned short 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;		None
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2398 ;;      Params:         2       0       0       0
  2399 ;;      Locals:         0       0       0       0
  2400 ;;      Temps:          0       0       0       0
  2401 ;;      Totals:         2       0       0       0
  2402 ;;Total ram usage:        2 bytes
  2403 ;; Hardware stack levels used: 1
  2404 ;; This function calls:
  2405 ;;		Nothing
  2406 ;; This function is called by:
  2407 ;;		_TMR1_ISR
  2408 ;;		_TMR1_Reload
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412     0102                     _TMR1_WriteTimer:	
  2413                           ;psect for function _TMR1_WriteTimer
  2414                           
  2415     0102                     i1l1140:	
  2416                           ;incstack = 0
  2417                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  2418                           
  2419                           
  2420                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  2421     0102  0020               	movlb	0	; select bank0
  2422     0103  1D18               	btfss	24,2	;volatile
  2423     0104  2906               	goto	u17_21
  2424     0105  2907               	goto	u17_20
  2425     0106                     u17_21:
  2426     0106  290E               	goto	i1l1150
  2427     0107                     u17_20:
  2428     0107                     i1l1142:
  2429                           
  2430                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  2431     0107  1018               	bcf	24,0	;volatile
  2432     0108                     i1l1144:
  2433                           
  2434                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  2435     0108  0877               	movf	TMR1_WriteTimer@timerVal+1,w
  2436     0109  0097               	movwf	23	;volatile
  2437     010A                     i1l1146:
  2438                           
  2439                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  2440     010A  0876               	movf	TMR1_WriteTimer@timerVal,w
  2441     010B  0096               	movwf	22	;volatile
  2442     010C                     i1l1148:
  2443                           
  2444                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  2445     010C  1418               	bsf	24,0	;volatile
  2446                           
  2447                           ;mcc_generated_files/tmr1.c: 133:     }
  2448     010D  2912               	goto	i1l96
  2449     010E                     i1l1150:
  2450                           
  2451                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  2452     010E  0877               	movf	TMR1_WriteTimer@timerVal+1,w
  2453     010F  0097               	movwf	23	;volatile
  2454     0110                     i1l1152:
  2455                           
  2456                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  2457     0110  0876               	movf	TMR1_WriteTimer@timerVal,w
  2458     0111  0096               	movwf	22	;volatile
  2459     0112                     i1l96:
  2460     0112  0008               	return
  2461     0113                     __end_of_TMR1_WriteTimer:
  2462                           
  2463                           	psect	text16
  2464     016E                     __ptext16:	
  2465 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2466 ;; Defined at:
  2467 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;		None
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;		None
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      void 
  2474 ;; Registers used:
  2475 ;;		None
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2481 ;;      Params:         0       0       0       0
  2482 ;;      Locals:         0       0       0       0
  2483 ;;      Temps:          0       0       0       0
  2484 ;;      Totals:         0       0       0       0
  2485 ;;Total ram usage:        0 bytes
  2486 ;; Hardware stack levels used: 1
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_TMR1_Initialize
  2491 ;;		_TMR1_ISR
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495     016E                     _TMR1_DefaultInterruptHandler:	
  2496                           ;psect for function _TMR1_DefaultInterruptHandler
  2497                           
  2498     016E                     i1l111:	
  2499                           ;incstack = 0
  2500                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2501                           
  2502     016E  0008               	return
  2503     016F                     __end_of_TMR1_DefaultInterruptHandler:
  2504     007E                     btemp	set	126	;btemp
  2505     007E                     int$flags	set	126
  2506     007E                     wtemp0	set	126
  2507                           
  2508                           	psect	config
  2509                           
  2510                           ;Config register CONFIG1 @ 0x8007
  2511                           ;	Oscillator Selection
  2512                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2513                           ;	Watchdog Timer Enable
  2514                           ;	WDTE = OFF, WDT disabled
  2515                           ;	Power-up Timer Enable
  2516                           ;	PWRTE = OFF, PWRT disabled
  2517                           ;	MCLR Pin Function Select
  2518                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2519                           ;	Flash Program Memory Code Protection
  2520                           ;	CP = OFF, Program memory code protection is disabled
  2521                           ;	Data Memory Code Protection
  2522                           ;	CPD = OFF, Data memory code protection is disabled
  2523                           ;	Brown-out Reset Enable
  2524                           ;	BOREN = ON, Brown-out Reset enabled
  2525                           ;	Clock Out Enable
  2526                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2527                           ;	Internal/External Switchover
  2528                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2529                           ;	Fail-Safe Clock Monitor Enable
  2530                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2531     8007                     	org	32775
  2532     8007  3FE4               	dw	16356
  2533                           
  2534                           ;Config register CONFIG2 @ 0x8008
  2535                           ;	Flash Memory Self-Write Protection
  2536                           ;	WRT = OFF, Write protection off
  2537                           ;	PLL Enable
  2538                           ;	PLLEN = OFF, 4x PLL disabled
  2539                           ;	Stack Overflow/Underflow Reset Enable
  2540                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2541                           ;	Brown-out Reset Voltage Selection
  2542                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2543                           ;	In-Circuit Debugger Mode
  2544                           ;	DEBUG = 0x1, unprogrammed default
  2545                           ;	Low-Voltage Programming Enable
  2546                           ;	LVP = ON, Low-voltage programming enabled
  2547     8008                     	org	32776
  2548     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         6
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      12
    BANK0            80      2      23
    BANK1            80      0       0
    BANK2            64      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_TMR1_ISR
    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     990
                  _EUSART_Initialize
                       _EUSART_Write
                  _EUSART_is_tx_done
                  _SYSTEM_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     484
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0     121
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             1     1      0     240
                                              2 COMMON     1     1      0
                                NULL *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     _EUSART_SetErrorHandler
     _EUSART_SetFramingErrorHandler
     _EUSART_SetOverrunErrorHandler
   _EUSART_Write
   _EUSART_is_tx_done
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     NULL(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      3       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      23       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      17       6       28.7%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            40      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      23      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Nov 28 21:45:26 2023

                                   _AccessLine 0073                                             l25 0101  
                                           l52 0146                                             l55 0168  
                                           l49 0122                                             l82 00EB  
                                          l201 0164                                            l108 0152  
                                          l301 0085                                            l302 0086  
                                          l154 00AE                                            l180 0137  
                                          l165 016C                                            l183 013F  
                                          l271 0040                                            l280 0054  
                                          l281 0057                                            l290 006C  
                                          l195 015E                                            l291 006D  
                                          l275 004C                                            l292 0070  
                                          l276 004E                                            l277 0051  
                                          l198 0158                                            l286 0065  
                                          l287 0067                                            l279 0053  
                                          l288 006A                                            l297 007E  
                                          l298 0080                                            l299 0083  
                                          u300 013C                                            u301 013B  
                                          u310 004C                                            u311 004B  
                                          u320 0065                                            u321 0064  
                                          u330 007E                                            u331 007D  
                              _timer1ReloadVal 0070                 ?_EUSART_SetFramingErrorHandler 0035  
                                         l1300 0044                                           l1230 0153  
                                         l1302 0059                                           l1232 015F  
                                         l1240 00F3                                           l1304 005D  
                                         l1250 0144                                           l1242 00F5  
                                         l1234 00EC                                           l1226 014D  
                                         l1306 0072                                           l1228 0159  
                                         l1244 00FC                                           l1236 00EF  
                                         l1260 00D9                                           l1252 0165  
                                         l1308 0076                                           l1270 008B  
                                         l1246 0140                                           l1238 00F0  
                                         l1262 00DA                                           l1254 00D3  
                                         l1280 00AD                                           l1272 0094  
                                         l1248 0143                                           l1264 00DE  
                                         l1256 00D5                                           l1290 013C  
                                         l1274 0095                                           l1266 00E0  
                                         l1258 00D7                                           l1282 0113  
                                         l1284 0169                                           l1276 009D  
                                         l1268 00E8                                           l1292 0033  
                                         l1278 00A5                                           l1294 003C  
                                         l1288 0134                                           l1296 003D  
                                         l1298 003E                                           _LATA 010C  
                                         _LATB 010D                                           i1l96 0112  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _main 0033                                           fsr0h 0005  
                                         fsr1h 0007                                           fsr0l 0004  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0019                     ??_TMR1_SetInterruptHandler 0037  
                                ?_EUSART_Write 0076                  __end_of_OSCILLATOR_Initialize 0147  
                                        ?_main 0076                                          _T1CON 0018  
                                        i1l111 016E                                          i1l312 00D2  
                                        i1l218 0017                                          _CChar 002C  
                                        _RCREG 0199                                          _HChar 0020  
                                        _RCSTA 019D                                          _IChar 0026  
                                        u24_20 000A                                          u24_21 0009  
                                        u17_20 0107                                          u25_20 000F  
                                        u17_21 0106                                          u25_21 000E  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        u18_20 00C6                                          u26_20 0014  
                                        u18_21 00C5                                          u26_21 0013  
                                        u19_20 00CD                                          u19_21 00CC  
                                        _LChar 0023                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                        _TChar 0029                                          _TXSTA 019E  
                             __end_of_TMR1_ISR 00D3                                     _CommonLine 0072  
                               _WDT_Initialize 0165                        __end_of_TMR1_Initialize 00EC  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                _TMR1_WriteTimer 0102  
                              __initialization 001A                                   __end_of_main 008B  
                               ??_EUSART_Write 0035                    ?_INTERRUPT_InterruptManager 0076  
                                       ??_main 0037                         __end_of_WDT_Initialize 0169  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 0031  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       i1l1200 0006                                         i1l1202 000A  
                      TMR1_WriteTimer@timerVal 0076                                         i1l1140 0102  
                                       i1l1204 000F                                         i1l1142 0107  
                                       i1l1150 010E                                         i1l1206 0014  
                                       i1l1152 0110                                         i1l1144 0108  
                                       i1l1160 00B8                                         i1l1146 010A  
                                       i1l1170 00CD                                         i1l1162 00BC  
                                       i1l1148 010C                                         i1l1164 00C0  
                                       i1l1156 00AF                                         i1l1166 00C6  
                                       i1l1158 00B1                                         i1l1168 00C7  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
         __end_of_TMR1_DefaultInterruptHandler 016F                   _TMR1_DefaultInterruptHandler 016E  
                                       _column 007B                                   __pdataCOMMON 007B  
                              ?_WDT_Initialize 0076       TMR1_SetInterruptHandler@InterruptHandler 0035  
                      __end_of_TMR1_WriteTimer 0113                               ?_TMR1_Initialize 0076  
                            _SYSTEM_Initialize 0113                        __end_of__initialization 0030  
                                  _NewDataFlag 0074                             ?_SYSTEM_Initialize 0076  
                               __pcstackCOMMON 0076                                   __pidataBANK0 0123  
                          ??_SYSTEM_Initialize 0037                                      ?_TMR1_ISR 0076  
                ?_TMR1_DefaultInterruptHandler 0076                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 0037                      __end_of_SYSTEM_Initialize 0123  
                         __end_of_EUSART_Write 0140                                     __pnvCOMMON 0079  
                                   __pmaintext 0033                                     ??_TMR1_ISR 0078  
                                   __pintentry 0004                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0037  
                             ?_TMR1_WriteTimer 0076                                        __ptext1 0113  
                                      __ptext2 0165                                        __ptext3 00D3  
                                      __ptext4 014D                                        __ptext5 00EC  
                                      __ptext6 0140                                        __ptext7 008B  
                                      __ptext8 0153                                        __ptext9 0159  
               ??_TMR1_DefaultInterruptHandler 0076                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 0140                       ??_PIN_MANAGER_Initialize 0035  
                    ?_TMR1_SetInterruptHandler 0035                           end_of_initialization 0030  
        __end_of_EUSART_SetOverrunErrorHandler 0159                  _EUSART_SetOverrunErrorHandler 0153  
                                      init_ram 0147                                        initloop 0148  
                            _EUSART_Initialize 008B                             ?_EUSART_Initialize 0076  
                                    _RCSTAbits 019D                            ??_EUSART_Initialize 0037  
                             ??_WDT_Initialize 0035                      __end_of_EUSART_Initialize 00AF  
                                    _TXSTAbits 019E                     _EUSART_DefaultErrorHandler 0000  
                                __pidataCOMMON 016D                                   _EUSART_Write 0132  
                       ?_OSCILLATOR_Initialize 0076                            start_initialization 001A  
               ?_EUSART_SetOverrunErrorHandler 0035                     _EUSART_FramingErrorHandler 0033  
                       _EUSART_SetErrorHandler 015F                                    __pdataBANK0 0020  
                                  __pbssCOMMON 0070                                      ___latbits 0000  
                                __pcstackBANK0 0035                                      __pnvBANK0 002F  
                       _PIN_MANAGER_Initialize 00EC               __end_of_TMR1_SetInterruptHandler 0153  
                 ??_INTERRUPT_InterruptManager 0079                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0035                                       _PIE1bits 0091  
                            _eusartRxLastError 0075                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0037                              _EUSART_is_tx_done 0169  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR1_ISR 00AF  
                           ?_EUSART_is_tx_done 0076                              ??_TMR1_Initialize 0037  
                          ??_EUSART_is_tx_done 0035                      __end_of_EUSART_is_tx_done 016D  
                      ??_OSCILLATOR_Initialize 0035                            _EUSART_ErrorHandler 002F  
                     _TMR1_SetInterruptHandler 014D                          _TMR1_InterruptHandler 0079  
                                     __ptext10 015F                                       __ptext11 0169  
                                     __ptext12 0132                                     _T1GCONbits 0019  
                                     __ptext14 00AF                                       __ptext15 0102  
                                     __ptext16 016E                        ?_EUSART_SetErrorHandler 0035  
EUSART_SetOverrunErrorHandler@interruptHandler 0035                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 0019                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 015F                  _EUSART_SetFramingErrorHandler 0159  
                            ??_TMR1_WriteTimer 0078                                     _INTCONbits 000B  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0076  
               __end_of_EUSART_SetErrorHandler 0165  EUSART_SetFramingErrorHandler@interruptHandler 0035  
                           EUSART_Write@txData 0035                 __end_of_PIN_MANAGER_Initialize 0102  
                              _TMR1_Initialize 00D3  
