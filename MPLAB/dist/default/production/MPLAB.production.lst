

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Jan 14 15:59:53 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16LF1826
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Generated 06/07/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16LF1826 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0097                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  0111                     	;# 
   104  0112                     	;# 
   105  0113                     	;# 
   106  0114                     	;# 
   107  0115                     	;# 
   108  0116                     	;# 
   109  0117                     	;# 
   110  0118                     	;# 
   111  0119                     	;# 
   112  011A                     	;# 
   113  011B                     	;# 
   114  011D                     	;# 
   115  011E                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118  0191                     	;# 
   119  0191                     	;# 
   120  0192                     	;# 
   121  0193                     	;# 
   122  0193                     	;# 
   123  0193                     	;# 
   124  0194                     	;# 
   125  0195                     	;# 
   126  0196                     	;# 
   127  0199                     	;# 
   128  019A                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019C                     	;# 
   134  019C                     	;# 
   135  019D                     	;# 
   136  019E                     	;# 
   137  019F                     	;# 
   138  020C                     	;# 
   139  020D                     	;# 
   140  0211                     	;# 
   141  0211                     	;# 
   142  0212                     	;# 
   143  0212                     	;# 
   144  0213                     	;# 
   145  0213                     	;# 
   146  0214                     	;# 
   147  0214                     	;# 
   148  0215                     	;# 
   149  0215                     	;# 
   150  0215                     	;# 
   151  0216                     	;# 
   152  0216                     	;# 
   153  0217                     	;# 
   154  0217                     	;# 
   155  0291                     	;# 
   156  0291                     	;# 
   157  0292                     	;# 
   158  0293                     	;# 
   159  0294                     	;# 
   160  0295                     	;# 
   161  0295                     	;# 
   162  0296                     	;# 
   163  0394                     	;# 
   164  0395                     	;# 
   165  0396                     	;# 
   166  039A                     	;# 
   167  039C                     	;# 
   168  039D                     	;# 
   169  039E                     	;# 
   170  039F                     	;# 
   171  0FE4                     	;# 
   172  0FE5                     	;# 
   173  0FE6                     	;# 
   174  0FE7                     	;# 
   175  0FE8                     	;# 
   176  0FE9                     	;# 
   177  0FEA                     	;# 
   178  0FEB                     	;# 
   179  0FED                     	;# 
   180  0FEE                     	;# 
   181  0FEF                     	;# 
   182  0000                     	;# 
   183  0001                     	;# 
   184  0002                     	;# 
   185  0003                     	;# 
   186  0004                     	;# 
   187  0005                     	;# 
   188  0006                     	;# 
   189  0007                     	;# 
   190  0008                     	;# 
   191  0009                     	;# 
   192  000A                     	;# 
   193  000B                     	;# 
   194  000C                     	;# 
   195  000D                     	;# 
   196  0011                     	;# 
   197  0012                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  009B                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  0111                     	;# 
   227  0112                     	;# 
   228  0113                     	;# 
   229  0114                     	;# 
   230  0115                     	;# 
   231  0116                     	;# 
   232  0117                     	;# 
   233  0118                     	;# 
   234  0119                     	;# 
   235  011A                     	;# 
   236  011B                     	;# 
   237  011D                     	;# 
   238  011E                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0191                     	;# 
   242  0191                     	;# 
   243  0192                     	;# 
   244  0193                     	;# 
   245  0193                     	;# 
   246  0193                     	;# 
   247  0194                     	;# 
   248  0195                     	;# 
   249  0196                     	;# 
   250  0199                     	;# 
   251  019A                     	;# 
   252  019B                     	;# 
   253  019B                     	;# 
   254  019B                     	;# 
   255  019B                     	;# 
   256  019C                     	;# 
   257  019C                     	;# 
   258  019D                     	;# 
   259  019E                     	;# 
   260  019F                     	;# 
   261  020C                     	;# 
   262  020D                     	;# 
   263  0211                     	;# 
   264  0211                     	;# 
   265  0212                     	;# 
   266  0212                     	;# 
   267  0213                     	;# 
   268  0213                     	;# 
   269  0214                     	;# 
   270  0214                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0215                     	;# 
   274  0216                     	;# 
   275  0216                     	;# 
   276  0217                     	;# 
   277  0217                     	;# 
   278  0291                     	;# 
   279  0291                     	;# 
   280  0292                     	;# 
   281  0293                     	;# 
   282  0294                     	;# 
   283  0295                     	;# 
   284  0295                     	;# 
   285  0296                     	;# 
   286  0394                     	;# 
   287  0395                     	;# 
   288  0396                     	;# 
   289  039A                     	;# 
   290  039C                     	;# 
   291  039D                     	;# 
   292  039E                     	;# 
   293  039F                     	;# 
   294  0FE4                     	;# 
   295  0FE5                     	;# 
   296  0FE6                     	;# 
   297  0FE7                     	;# 
   298  0FE8                     	;# 
   299  0FE9                     	;# 
   300  0FEA                     	;# 
   301  0FEB                     	;# 
   302  0FED                     	;# 
   303  0FEE                     	;# 
   304  0FEF                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  010C                     	;# 
   348  010D                     	;# 
   349  0111                     	;# 
   350  0112                     	;# 
   351  0113                     	;# 
   352  0114                     	;# 
   353  0115                     	;# 
   354  0116                     	;# 
   355  0117                     	;# 
   356  0118                     	;# 
   357  0119                     	;# 
   358  011A                     	;# 
   359  011B                     	;# 
   360  011D                     	;# 
   361  011E                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0191                     	;# 
   365  0191                     	;# 
   366  0192                     	;# 
   367  0193                     	;# 
   368  0193                     	;# 
   369  0193                     	;# 
   370  0194                     	;# 
   371  0195                     	;# 
   372  0196                     	;# 
   373  0199                     	;# 
   374  019A                     	;# 
   375  019B                     	;# 
   376  019B                     	;# 
   377  019B                     	;# 
   378  019B                     	;# 
   379  019C                     	;# 
   380  019C                     	;# 
   381  019D                     	;# 
   382  019E                     	;# 
   383  019F                     	;# 
   384  020C                     	;# 
   385  020D                     	;# 
   386  0211                     	;# 
   387  0211                     	;# 
   388  0212                     	;# 
   389  0212                     	;# 
   390  0213                     	;# 
   391  0213                     	;# 
   392  0214                     	;# 
   393  0214                     	;# 
   394  0215                     	;# 
   395  0215                     	;# 
   396  0215                     	;# 
   397  0216                     	;# 
   398  0216                     	;# 
   399  0217                     	;# 
   400  0217                     	;# 
   401  0291                     	;# 
   402  0291                     	;# 
   403  0292                     	;# 
   404  0293                     	;# 
   405  0294                     	;# 
   406  0295                     	;# 
   407  0295                     	;# 
   408  0296                     	;# 
   409  0394                     	;# 
   410  0395                     	;# 
   411  0396                     	;# 
   412  039A                     	;# 
   413  039C                     	;# 
   414  039D                     	;# 
   415  039E                     	;# 
   416  039F                     	;# 
   417  0FE4                     	;# 
   418  0FE5                     	;# 
   419  0FE6                     	;# 
   420  0FE7                     	;# 
   421  0FE8                     	;# 
   422  0FE9                     	;# 
   423  0FEA                     	;# 
   424  0FEB                     	;# 
   425  0FED                     	;# 
   426  0FEE                     	;# 
   427  0FEF                     	;# 
   428  0000                     	;# 
   429  0001                     	;# 
   430  0002                     	;# 
   431  0003                     	;# 
   432  0004                     	;# 
   433  0005                     	;# 
   434  0006                     	;# 
   435  0007                     	;# 
   436  0008                     	;# 
   437  0009                     	;# 
   438  000A                     	;# 
   439  000B                     	;# 
   440  000C                     	;# 
   441  000D                     	;# 
   442  0011                     	;# 
   443  0012                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0016                     	;# 
   447  0017                     	;# 
   448  0018                     	;# 
   449  0019                     	;# 
   450  001A                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001E                     	;# 
   454  001F                     	;# 
   455  008C                     	;# 
   456  008D                     	;# 
   457  0091                     	;# 
   458  0092                     	;# 
   459  0095                     	;# 
   460  0096                     	;# 
   461  0097                     	;# 
   462  0098                     	;# 
   463  0099                     	;# 
   464  009A                     	;# 
   465  009B                     	;# 
   466  009B                     	;# 
   467  009C                     	;# 
   468  009D                     	;# 
   469  009E                     	;# 
   470  010C                     	;# 
   471  010D                     	;# 
   472  0111                     	;# 
   473  0112                     	;# 
   474  0113                     	;# 
   475  0114                     	;# 
   476  0115                     	;# 
   477  0116                     	;# 
   478  0117                     	;# 
   479  0118                     	;# 
   480  0119                     	;# 
   481  011A                     	;# 
   482  011B                     	;# 
   483  011D                     	;# 
   484  011E                     	;# 
   485  018C                     	;# 
   486  018D                     	;# 
   487  0191                     	;# 
   488  0191                     	;# 
   489  0192                     	;# 
   490  0193                     	;# 
   491  0193                     	;# 
   492  0193                     	;# 
   493  0194                     	;# 
   494  0195                     	;# 
   495  0196                     	;# 
   496  0199                     	;# 
   497  019A                     	;# 
   498  019B                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019B                     	;# 
   502  019C                     	;# 
   503  019C                     	;# 
   504  019D                     	;# 
   505  019E                     	;# 
   506  019F                     	;# 
   507  020C                     	;# 
   508  020D                     	;# 
   509  0211                     	;# 
   510  0211                     	;# 
   511  0212                     	;# 
   512  0212                     	;# 
   513  0213                     	;# 
   514  0213                     	;# 
   515  0214                     	;# 
   516  0214                     	;# 
   517  0215                     	;# 
   518  0215                     	;# 
   519  0215                     	;# 
   520  0216                     	;# 
   521  0216                     	;# 
   522  0217                     	;# 
   523  0217                     	;# 
   524  0291                     	;# 
   525  0291                     	;# 
   526  0292                     	;# 
   527  0293                     	;# 
   528  0294                     	;# 
   529  0295                     	;# 
   530  0295                     	;# 
   531  0296                     	;# 
   532  0394                     	;# 
   533  0395                     	;# 
   534  0396                     	;# 
   535  039A                     	;# 
   536  039C                     	;# 
   537  039D                     	;# 
   538  039E                     	;# 
   539  039F                     	;# 
   540  0FE4                     	;# 
   541  0FE5                     	;# 
   542  0FE6                     	;# 
   543  0FE7                     	;# 
   544  0FE8                     	;# 
   545  0FE9                     	;# 
   546  0FEA                     	;# 
   547  0FEB                     	;# 
   548  0FED                     	;# 
   549  0FEE                     	;# 
   550  0FEF                     	;# 
   551  0000                     	;# 
   552  0001                     	;# 
   553  0002                     	;# 
   554  0003                     	;# 
   555  0004                     	;# 
   556  0005                     	;# 
   557  0006                     	;# 
   558  0007                     	;# 
   559  0008                     	;# 
   560  0009                     	;# 
   561  000A                     	;# 
   562  000B                     	;# 
   563  000C                     	;# 
   564  000D                     	;# 
   565  0011                     	;# 
   566  0012                     	;# 
   567  0015                     	;# 
   568  0016                     	;# 
   569  0016                     	;# 
   570  0017                     	;# 
   571  0018                     	;# 
   572  0019                     	;# 
   573  001A                     	;# 
   574  001B                     	;# 
   575  001C                     	;# 
   576  001E                     	;# 
   577  001F                     	;# 
   578  008C                     	;# 
   579  008D                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0095                     	;# 
   583  0096                     	;# 
   584  0097                     	;# 
   585  0098                     	;# 
   586  0099                     	;# 
   587  009A                     	;# 
   588  009B                     	;# 
   589  009B                     	;# 
   590  009C                     	;# 
   591  009D                     	;# 
   592  009E                     	;# 
   593  010C                     	;# 
   594  010D                     	;# 
   595  0111                     	;# 
   596  0112                     	;# 
   597  0113                     	;# 
   598  0114                     	;# 
   599  0115                     	;# 
   600  0116                     	;# 
   601  0117                     	;# 
   602  0118                     	;# 
   603  0119                     	;# 
   604  011A                     	;# 
   605  011B                     	;# 
   606  011D                     	;# 
   607  011E                     	;# 
   608  018C                     	;# 
   609  018D                     	;# 
   610  0191                     	;# 
   611  0191                     	;# 
   612  0192                     	;# 
   613  0193                     	;# 
   614  0193                     	;# 
   615  0193                     	;# 
   616  0194                     	;# 
   617  0195                     	;# 
   618  0196                     	;# 
   619  0199                     	;# 
   620  019A                     	;# 
   621  019B                     	;# 
   622  019B                     	;# 
   623  019B                     	;# 
   624  019B                     	;# 
   625  019C                     	;# 
   626  019C                     	;# 
   627  019D                     	;# 
   628  019E                     	;# 
   629  019F                     	;# 
   630  020C                     	;# 
   631  020D                     	;# 
   632  0211                     	;# 
   633  0211                     	;# 
   634  0212                     	;# 
   635  0212                     	;# 
   636  0213                     	;# 
   637  0213                     	;# 
   638  0214                     	;# 
   639  0214                     	;# 
   640  0215                     	;# 
   641  0215                     	;# 
   642  0215                     	;# 
   643  0216                     	;# 
   644  0216                     	;# 
   645  0217                     	;# 
   646  0217                     	;# 
   647  0291                     	;# 
   648  0291                     	;# 
   649  0292                     	;# 
   650  0293                     	;# 
   651  0294                     	;# 
   652  0295                     	;# 
   653  0295                     	;# 
   654  0296                     	;# 
   655  0394                     	;# 
   656  0395                     	;# 
   657  0396                     	;# 
   658  039A                     	;# 
   659  039C                     	;# 
   660  039D                     	;# 
   661  039E                     	;# 
   662  039F                     	;# 
   663  0FE4                     	;# 
   664  0FE5                     	;# 
   665  0FE6                     	;# 
   666  0FE7                     	;# 
   667  0FE8                     	;# 
   668  0FE9                     	;# 
   669  0FEA                     	;# 
   670  0FEB                     	;# 
   671  0FED                     	;# 
   672  0FEE                     	;# 
   673  0FEF                     	;# 
   674  0000                     	;# 
   675  0001                     	;# 
   676  0002                     	;# 
   677  0003                     	;# 
   678  0004                     	;# 
   679  0005                     	;# 
   680  0006                     	;# 
   681  0007                     	;# 
   682  0008                     	;# 
   683  0009                     	;# 
   684  000A                     	;# 
   685  000B                     	;# 
   686  000C                     	;# 
   687  000D                     	;# 
   688  0011                     	;# 
   689  0012                     	;# 
   690  0015                     	;# 
   691  0016                     	;# 
   692  0016                     	;# 
   693  0017                     	;# 
   694  0018                     	;# 
   695  0019                     	;# 
   696  001A                     	;# 
   697  001B                     	;# 
   698  001C                     	;# 
   699  001E                     	;# 
   700  001F                     	;# 
   701  008C                     	;# 
   702  008D                     	;# 
   703  0091                     	;# 
   704  0092                     	;# 
   705  0095                     	;# 
   706  0096                     	;# 
   707  0097                     	;# 
   708  0098                     	;# 
   709  0099                     	;# 
   710  009A                     	;# 
   711  009B                     	;# 
   712  009B                     	;# 
   713  009C                     	;# 
   714  009D                     	;# 
   715  009E                     	;# 
   716  010C                     	;# 
   717  010D                     	;# 
   718  0111                     	;# 
   719  0112                     	;# 
   720  0113                     	;# 
   721  0114                     	;# 
   722  0115                     	;# 
   723  0116                     	;# 
   724  0117                     	;# 
   725  0118                     	;# 
   726  0119                     	;# 
   727  011A                     	;# 
   728  011B                     	;# 
   729  011D                     	;# 
   730  011E                     	;# 
   731  018C                     	;# 
   732  018D                     	;# 
   733  0191                     	;# 
   734  0191                     	;# 
   735  0192                     	;# 
   736  0193                     	;# 
   737  0193                     	;# 
   738  0193                     	;# 
   739  0194                     	;# 
   740  0195                     	;# 
   741  0196                     	;# 
   742  0199                     	;# 
   743  019A                     	;# 
   744  019B                     	;# 
   745  019B                     	;# 
   746  019B                     	;# 
   747  019B                     	;# 
   748  019C                     	;# 
   749  019C                     	;# 
   750  019D                     	;# 
   751  019E                     	;# 
   752  019F                     	;# 
   753  020C                     	;# 
   754  020D                     	;# 
   755  0211                     	;# 
   756  0211                     	;# 
   757  0212                     	;# 
   758  0212                     	;# 
   759  0213                     	;# 
   760  0213                     	;# 
   761  0214                     	;# 
   762  0214                     	;# 
   763  0215                     	;# 
   764  0215                     	;# 
   765  0215                     	;# 
   766  0216                     	;# 
   767  0216                     	;# 
   768  0217                     	;# 
   769  0217                     	;# 
   770  0291                     	;# 
   771  0291                     	;# 
   772  0292                     	;# 
   773  0293                     	;# 
   774  0294                     	;# 
   775  0295                     	;# 
   776  0295                     	;# 
   777  0296                     	;# 
   778  0394                     	;# 
   779  0395                     	;# 
   780  0396                     	;# 
   781  039A                     	;# 
   782  039C                     	;# 
   783  039D                     	;# 
   784  039E                     	;# 
   785  039F                     	;# 
   786  0FE4                     	;# 
   787  0FE5                     	;# 
   788  0FE6                     	;# 
   789  0FE7                     	;# 
   790  0FE8                     	;# 
   791  0FE9                     	;# 
   792  0FEA                     	;# 
   793  0FEB                     	;# 
   794  0FED                     	;# 
   795  0FEE                     	;# 
   796  0FEF                     	;# 
   797  0000                     	;# 
   798  0001                     	;# 
   799  0002                     	;# 
   800  0003                     	;# 
   801  0004                     	;# 
   802  0005                     	;# 
   803  0006                     	;# 
   804  0007                     	;# 
   805  0008                     	;# 
   806  0009                     	;# 
   807  000A                     	;# 
   808  000B                     	;# 
   809  000C                     	;# 
   810  000D                     	;# 
   811  0011                     	;# 
   812  0012                     	;# 
   813  0015                     	;# 
   814  0016                     	;# 
   815  0016                     	;# 
   816  0017                     	;# 
   817  0018                     	;# 
   818  0019                     	;# 
   819  001A                     	;# 
   820  001B                     	;# 
   821  001C                     	;# 
   822  001E                     	;# 
   823  001F                     	;# 
   824  008C                     	;# 
   825  008D                     	;# 
   826  0091                     	;# 
   827  0092                     	;# 
   828  0095                     	;# 
   829  0096                     	;# 
   830  0097                     	;# 
   831  0098                     	;# 
   832  0099                     	;# 
   833  009A                     	;# 
   834  009B                     	;# 
   835  009B                     	;# 
   836  009C                     	;# 
   837  009D                     	;# 
   838  009E                     	;# 
   839  010C                     	;# 
   840  010D                     	;# 
   841  0111                     	;# 
   842  0112                     	;# 
   843  0113                     	;# 
   844  0114                     	;# 
   845  0115                     	;# 
   846  0116                     	;# 
   847  0117                     	;# 
   848  0118                     	;# 
   849  0119                     	;# 
   850  011A                     	;# 
   851  011B                     	;# 
   852  011D                     	;# 
   853  011E                     	;# 
   854  018C                     	;# 
   855  018D                     	;# 
   856  0191                     	;# 
   857  0191                     	;# 
   858  0192                     	;# 
   859  0193                     	;# 
   860  0193                     	;# 
   861  0193                     	;# 
   862  0194                     	;# 
   863  0195                     	;# 
   864  0196                     	;# 
   865  0199                     	;# 
   866  019A                     	;# 
   867  019B                     	;# 
   868  019B                     	;# 
   869  019B                     	;# 
   870  019B                     	;# 
   871  019C                     	;# 
   872  019C                     	;# 
   873  019D                     	;# 
   874  019E                     	;# 
   875  019F                     	;# 
   876  020C                     	;# 
   877  020D                     	;# 
   878  0211                     	;# 
   879  0211                     	;# 
   880  0212                     	;# 
   881  0212                     	;# 
   882  0213                     	;# 
   883  0213                     	;# 
   884  0214                     	;# 
   885  0214                     	;# 
   886  0215                     	;# 
   887  0215                     	;# 
   888  0215                     	;# 
   889  0216                     	;# 
   890  0216                     	;# 
   891  0217                     	;# 
   892  0217                     	;# 
   893  0291                     	;# 
   894  0291                     	;# 
   895  0292                     	;# 
   896  0293                     	;# 
   897  0294                     	;# 
   898  0295                     	;# 
   899  0295                     	;# 
   900  0296                     	;# 
   901  0394                     	;# 
   902  0395                     	;# 
   903  0396                     	;# 
   904  039A                     	;# 
   905  039C                     	;# 
   906  039D                     	;# 
   907  039E                     	;# 
   908  039F                     	;# 
   909  0FE4                     	;# 
   910  0FE5                     	;# 
   911  0FE6                     	;# 
   912  0FE7                     	;# 
   913  0FE8                     	;# 
   914  0FE9                     	;# 
   915  0FEA                     	;# 
   916  0FEB                     	;# 
   917  0FED                     	;# 
   918  0FEE                     	;# 
   919  0FEF                     	;# 
   920                           
   921 ;; Function _TMR1_DefaultInterruptHandler is unused but had its address taken
   922  0000                     
   923 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
   924  0000                     
   925 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
   926  0000                     
   927 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
   928  0000                     
   929                           	psect	nvCOMMON
   930  0000'                    __pnvCOMMON:
   931  0000'                    _EUSART_ErrorHandler:
   932  0000'                    	ds	2
   933  0002'                    _EUSART_OverrunErrorHandler:
   934  0002'                    	ds	2
   935  0004'                    _EUSART_FramingErrorHandler:
   936  0004'                    	ds	2
   937  0006'                    _TMR1_InterruptHandler:
   938  0006'                    	ds	2
   939  000B                     _INTCONbits	set	11
   940  0019                     _T1GCONbits	set	25
   941  0018                     _T1CONbits	set	24
   942  0018                     _T1CON	set	24
   943  0011                     _PIR1bits	set	17
   944  0016                     _TMR1L	set	22
   945  0017                     _TMR1H	set	23
   946  0019                     _T1GCON	set	25
   947  0091                     _PIE1bits	set	145
   948  0097                     _WDTCON	set	151
   949  0098                     _OSCTUNE	set	152
   950  0099                     _OSCCON	set	153
   951  0095                     _OPTION_REGbits	set	149
   952  008D                     _TRISB	set	141
   953  008C                     _TRISA	set	140
   954  010C                     _LATAbits	set	268
   955  0116                     _BORCON	set	278
   956  011E                     _APFCON1	set	286
   957  011D                     _APFCON0	set	285
   958  010D                     _LATB	set	269
   959  010C                     _LATA	set	268
   960  019A                     _TXREG	set	410
   961  0199                     _RCREG	set	409
   962  019D                     _RCSTAbits	set	413
   963  019E                     _TXSTAbits	set	414
   964  019C                     _SPBRGH	set	412
   965  019B                     _SPBRGL	set	411
   966  019E                     _TXSTA	set	414
   967  019D                     _RCSTA	set	413
   968  019F                     _BAUDCON	set	415
   969  018C                     _ANSELA	set	396
   970  018D                     _ANSELB	set	397
   971  020C                     _WPUA	set	524
   972  020D                     _WPUB	set	525
   973                           
   974                           	psect	cinit
   975  0000'                    start_initialization:	
   976                           ; #config settings
   977                           
   978  0000'                    __initialization:
   979                           
   980                           ; Clear objects allocated to COMMON
   981  0000' 0180'              	clrf	__pbssCOMMON& (0+127)
   982  0001' 0180'              	clrf	(__pbssCOMMON+1)& (0+127)
   983  0002' 0180'              	clrf	(__pbssCOMMON+2)& (0+127)
   984  0003'                    end_of_initialization:	
   985                           ;End of C runtime variable initialization code
   986                           
   987  0003'                    __end_of__initialization:
   988  0003' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   989  0004' 0020               	movlb	0
   990  0005' 2800'              	ljmp	_main	;jump to C main() function
   991                           
   992                           	psect	bssCOMMON
   993  0000'                    __pbssCOMMON:
   994  0000'                    _timer1ReloadVal:
   995  0000'                    	ds	2
   996  0002'                    _eusartRxLastError:
   997  0002'                    	ds	1
   998                           
   999                           	psect	cstackCOMMON
  1000  0000'                    __pcstackCOMMON:
  1001  0000'                    ?_OSCILLATOR_Initialize:
  1002  0000'                    ??_OSCILLATOR_Initialize:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0000'                    ?_WDT_Initialize:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0000'                    ??_WDT_Initialize:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011  0000'                    ?_TMR1_Initialize:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014  0000'                    ?_EUSART_Initialize:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017  0000'                    ?_TMR1_SetInterruptHandler:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0000'                    ?_EUSART_SetFramingErrorHandler:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0000'                    ?_EUSART_SetOverrunErrorHandler:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026  0000'                    ?_EUSART_SetErrorHandler:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029  0000'                    ?_TMR1_ISR:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032  0000'                    ??_TMR1_ISR:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035  0000'                    ?_PIN_MANAGER_Initialize:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038  0000'                    ??_PIN_MANAGER_Initialize:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041  0000'                    ?_SYSTEM_Initialize:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044  0000'                    ?_EUSART_is_tx_done:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047  0000'                    ??_EUSART_is_tx_done:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050  0000'                    ?_EUSART_Write:	
  1051                           ; 1 bytes @ 0x0
  1052                           
  1053  0000'                    ??_EUSART_Write:	
  1054                           ; 1 bytes @ 0x0
  1055                           
  1056  0000'                    ?_INTERRUPT_InterruptManager:	
  1057                           ; 1 bytes @ 0x0
  1058                           
  1059  0000'                    ??_INTERRUPT_InterruptManager:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  0000'                    ?_main:	
  1063                           ; 1 bytes @ 0x0
  1064                           
  1065  0000'                    EUSART_Write@txData:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  0000'                    TMR1_SetInterruptHandler@InterruptHandler:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0000'                    EUSART_SetFramingErrorHandler@interruptHandler:	
  1072                           ; 2 bytes @ 0x0
  1073                           
  1074  0000'                    EUSART_SetOverrunErrorHandler@interruptHandler:	
  1075                           ; 2 bytes @ 0x0
  1076                           
  1077  0000'                    EUSART_SetErrorHandler@interruptHandler:	
  1078                           ; 2 bytes @ 0x0
  1079                           
  1080                           
  1081                           ; 2 bytes @ 0x0
  1082  0000'                    	ds	2
  1083  0002'                    ??_TMR1_Initialize:
  1084  0002'                    ??_EUSART_Initialize:	
  1085                           ; 1 bytes @ 0x2
  1086                           
  1087  0002'                    ??_TMR1_SetInterruptHandler:	
  1088                           ; 1 bytes @ 0x2
  1089                           
  1090  0002'                    ??_EUSART_SetFramingErrorHandler:	
  1091                           ; 1 bytes @ 0x2
  1092                           
  1093  0002'                    ??_EUSART_SetOverrunErrorHandler:	
  1094                           ; 1 bytes @ 0x2
  1095                           
  1096  0002'                    ??_EUSART_SetErrorHandler:	
  1097                           ; 1 bytes @ 0x2
  1098                           
  1099  0002'                    ??_SYSTEM_Initialize:	
  1100                           ; 1 bytes @ 0x2
  1101                           
  1102  0002'                    ??_main:	
  1103                           ; 1 bytes @ 0x2
  1104                           
  1105                           
  1106                           	psect	maintext
  1107  0000'                    __pmaintext:	
  1108                           ; 1 bytes @ 0x2
  1109 ;;
  1110 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1111 ;;
  1112 ;; *************** function _main *****************
  1113 ;; Defined at:
  1114 ;;		line 51 in file "main.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg, status,2, status,0, pclath, cstack
  1123 ;; Tracked objects:
  1124 ;;		On entry : B1F/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1128 ;;      Params:         0       0       0       0
  1129 ;;      Locals:         0       0       0       0
  1130 ;;      Temps:          0       0       0       0
  1131 ;;      Totals:         0       0       0       0
  1132 ;;Total ram usage:        0 bytes
  1133 ;; Hardware stack levels required when called: 5
  1134 ;; This function calls:
  1135 ;;		_EUSART_Initialize
  1136 ;;		_EUSART_Write
  1137 ;;		_EUSART_is_tx_done
  1138 ;;		_SYSTEM_Initialize
  1139 ;;		_TMR1_Initialize
  1140 ;; This function is called by:
  1141 ;;		Startup code after reset
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145  0000'                    _main:	
  1146                           ;psect for function _main
  1147                           
  1148  0000'                    l1137:	
  1149                           ;incstack = 0
  1150                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1151                           
  1152                           
  1153                           ;main.c: 53:     SYSTEM_Initialize();
  1154  0000' 3180' 2000' 3180'  	fcall	_SYSTEM_Initialize
  1155                           
  1156                           ;main.c: 55:     EUSART_Initialize();
  1157  0003' 3180' 2000' 3180'  	fcall	_EUSART_Initialize
  1158                           
  1159                           ;main.c: 57:     TMR1_Initialize();
  1160  0006' 3180' 2000' 3180'  	fcall	_TMR1_Initialize
  1161  0009'                    l1139:
  1162                           
  1163                           ;main.c: 63:     (INTCONbits.GIE = 1);
  1164  0009' 178B               	bsf	11,7	;volatile
  1165  000A'                    l1141:
  1166                           
  1167                           ;main.c: 66:     (INTCONbits.PEIE = 1);
  1168  000A' 170B               	bsf	11,6	;volatile
  1169  000B'                    l1143:
  1170  000B' 0022               	movlb	2	; select bank2
  1171  000C' 150C               	bsf	12,2	;volatile
  1172  000D'                    l1145:
  1173  000D' 160C               	bsf	12,4	;volatile
  1174  000E'                    l244:
  1175                           
  1176                           ;main.c: 120:         EUSART_Write(0x20);
  1177  000E' 3020               	movlw	32
  1178  000F' 3180' 2000' 3180'  	fcall	_EUSART_Write
  1179  0012'                    l1147:	
  1180                           ;main.c: 121:         while(!EUSART_is_tx_done());
  1181                           
  1182  0012' 3180' 2000' 3180'  	fcall	_EUSART_is_tx_done
  1183  0015' 3A00               	xorlw	0
  1184  0016' 1903               	skipnz
  1185  0017' 2819'              	goto	u181
  1186  0018' 281A'              	goto	u180
  1187  0019'                    u181:
  1188  0019' 2812'              	goto	l1147
  1189  001A'                    u180:
  1190  001A'                    l247:
  1191                           
  1192                           ;main.c: 122:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1193  001A' 3200               	nop2	;2 cycle nop
  1194  001B' 3200               	nop2	;2 cycle nop
  1195  001C' 3200               	nop2	;2 cycle nop
  1196  001D'                    l1149:
  1197                           
  1198                           ;main.c: 123:         EUSART_Write(0xE0);
  1199  001D' 30E0               	movlw	224
  1200  001E' 3180' 2000' 3180'  	fcall	_EUSART_Write
  1201  0021'                    l1151:	
  1202                           ;main.c: 124:         while(!EUSART_is_tx_done());
  1203                           
  1204  0021' 3180' 2000' 3180'  	fcall	_EUSART_is_tx_done
  1205  0024' 3A00               	xorlw	0
  1206  0025' 1903               	skipnz
  1207  0026' 2828'              	goto	u191
  1208  0027' 2829'              	goto	u190
  1209  0028'                    u191:
  1210  0028' 2821'              	goto	l1151
  1211  0029'                    u190:
  1212  0029'                    l251:	
  1213                           ;main.c: 126:         do { LATAbits.LATA1 = 1; } while(0);
  1214                           
  1215  0029' 0022               	movlb	2	; select bank2
  1216  002A' 148C               	bsf	12,1	;volatile
  1217  002B'                    l253:	
  1218                           ;main.c: 127:         do { LATAbits.LATA3 = 1; } while(0);
  1219                           
  1220  002B' 158C               	bsf	12,3	;volatile
  1221  002C'                    l254:
  1222                           
  1223                           ;main.c: 128:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1224  002C' 3200               	nop2	;2 cycle nop
  1225  002D' 3200               	nop2	;2 cycle nop
  1226  002E' 3200               	nop2	;2 cycle nop
  1227  002F'                    l255:	
  1228                           ;main.c: 129:         do { LATAbits.LATA1 = 0; } while(0);
  1229                           
  1230  002F' 0022               	movlb	2	; select bank2
  1231  0030' 108C               	bcf	12,1	;volatile
  1232  0031'                    l257:	
  1233                           ;main.c: 130:         do { LATAbits.LATA3 = 0; } while(0);
  1234                           
  1235  0031' 118C               	bcf	12,3	;volatile
  1236  0032'                    l259:	
  1237                           ;main.c: 132:         do { LATAbits.LATA2 = 0; } while(0);
  1238                           
  1239  0032' 110C               	bcf	12,2	;volatile
  1240  0033'                    l261:	
  1241                           ;main.c: 133:         do { LATAbits.LATA4 = 0; } while(0);
  1242                           
  1243  0033' 120C               	bcf	12,4	;volatile
  1244  0034'                    l262:
  1245                           
  1246                           ;main.c: 134:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1247  0034' 3200               	nop2	;2 cycle nop
  1248  0035' 3200               	nop2	;2 cycle nop
  1249  0036' 3200               	nop2	;2 cycle nop
  1250  0037'                    l263:	
  1251                           ;main.c: 136:         do { LATAbits.LATA2 = 1; } while(0);
  1252                           
  1253  0037' 0022               	movlb	2	; select bank2
  1254  0038' 150C               	bsf	12,2	;volatile
  1255  0039'                    l265:	
  1256                           ;main.c: 137:         do { LATAbits.LATA4 = 1; } while(0);
  1257                           
  1258  0039' 160C               	bsf	12,4	;volatile
  1259  003A'                    l1153:
  1260                           
  1261                           ;main.c: 138:         EUSART_Write(0x40);
  1262  003A' 3040               	movlw	64
  1263  003B' 3180' 2000' 3180'  	fcall	_EUSART_Write
  1264  003E'                    l1155:	
  1265                           ;main.c: 139:         while(!EUSART_is_tx_done());
  1266                           
  1267  003E' 3180' 2000' 3180'  	fcall	_EUSART_is_tx_done
  1268  0041' 3A00               	xorlw	0
  1269  0042' 1903               	skipnz
  1270  0043' 2845'              	goto	u201
  1271  0044' 2846'              	goto	u200
  1272  0045'                    u201:
  1273  0045' 283E'              	goto	l1155
  1274  0046'                    u200:
  1275  0046'                    l269:
  1276                           
  1277                           ;main.c: 140:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1278  0046' 3200               	nop2	;2 cycle nop
  1279  0047' 3200               	nop2	;2 cycle nop
  1280  0048' 3200               	nop2	;2 cycle nop
  1281  0049'                    l1157:
  1282                           
  1283                           ;main.c: 141:         EUSART_Write(0x40);
  1284  0049' 3040               	movlw	64
  1285  004A' 3180' 2000' 3180'  	fcall	_EUSART_Write
  1286  004D'                    l1159:	
  1287                           ;main.c: 142:         while(!EUSART_is_tx_done());
  1288                           
  1289  004D' 3180' 2000' 3180'  	fcall	_EUSART_is_tx_done
  1290  0050' 3A00               	xorlw	0
  1291  0051' 1903               	skipnz
  1292  0052' 2854'              	goto	u211
  1293  0053' 2855'              	goto	u210
  1294  0054'                    u211:
  1295  0054' 284D'              	goto	l1159
  1296  0055'                    u210:
  1297  0055'                    l273:	
  1298                           ;main.c: 144:         do { LATAbits.LATA1 = 1; } while(0);
  1299                           
  1300  0055' 0022               	movlb	2	; select bank2
  1301  0056' 148C               	bsf	12,1	;volatile
  1302  0057'                    l275:	
  1303                           ;main.c: 145:         do { LATAbits.LATA3 = 1; } while(0);
  1304                           
  1305  0057' 158C               	bsf	12,3	;volatile
  1306  0058'                    l276:
  1307                           
  1308                           ;main.c: 146:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1309  0058' 3200               	nop2	;2 cycle nop
  1310  0059' 3200               	nop2	;2 cycle nop
  1311  005A' 3200               	nop2	;2 cycle nop
  1312  005B'                    l277:	
  1313                           ;main.c: 147:         do { LATAbits.LATA1 = 0; } while(0);
  1314                           
  1315  005B' 0022               	movlb	2	; select bank2
  1316  005C' 108C               	bcf	12,1	;volatile
  1317  005D'                    l279:	
  1318                           ;main.c: 148:         do { LATAbits.LATA3 = 0; } while(0);
  1319                           
  1320  005D' 118C               	bcf	12,3	;volatile
  1321  005E'                    l281:	
  1322                           ;main.c: 150:         do { LATAbits.LATA2 = 0; } while(0);
  1323                           
  1324  005E' 110C               	bcf	12,2	;volatile
  1325  005F'                    l283:	
  1326                           ;main.c: 151:         do { LATAbits.LATA4 = 0; } while(0);
  1327                           
  1328  005F' 120C               	bcf	12,4	;volatile
  1329  0060'                    l284:
  1330                           
  1331                           ;main.c: 152:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1332  0060' 3200               	nop2	;2 cycle nop
  1333  0061' 3200               	nop2	;2 cycle nop
  1334  0062' 3200               	nop2	;2 cycle nop
  1335  0063'                    l285:	
  1336                           ;main.c: 154:         do { LATAbits.LATA2 = 1; } while(0);
  1337                           
  1338  0063' 0022               	movlb	2	; select bank2
  1339  0064' 150C               	bsf	12,2	;volatile
  1340  0065'                    l287:	
  1341                           ;main.c: 155:         do { LATAbits.LATA4 = 1; } while(0);
  1342                           
  1343  0065' 160C               	bsf	12,4	;volatile
  1344  0066'                    l1161:
  1345                           
  1346                           ;main.c: 156:         EUSART_Write(0x80);
  1347  0066' 3080               	movlw	128
  1348  0067' 3180' 2000' 3180'  	fcall	_EUSART_Write
  1349  006A'                    l1163:	
  1350                           ;main.c: 157:         while(!EUSART_is_tx_done());
  1351                           
  1352  006A' 3180' 2000' 3180'  	fcall	_EUSART_is_tx_done
  1353  006D' 3A00               	xorlw	0
  1354  006E' 1903               	skipnz
  1355  006F' 2871'              	goto	u221
  1356  0070' 2872'              	goto	u220
  1357  0071'                    u221:
  1358  0071' 286A'              	goto	l1163
  1359  0072'                    u220:
  1360  0072'                    l291:
  1361                           
  1362                           ;main.c: 158:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1363  0072' 3200               	nop2	;2 cycle nop
  1364  0073' 3200               	nop2	;2 cycle nop
  1365  0074' 3200               	nop2	;2 cycle nop
  1366  0075'                    l1165:
  1367                           
  1368                           ;main.c: 159:         EUSART_Write(0xE0);
  1369  0075' 30E0               	movlw	224
  1370  0076' 3180' 2000' 3180'  	fcall	_EUSART_Write
  1371  0079'                    l1167:	
  1372                           ;main.c: 160:         while(!EUSART_is_tx_done());
  1373                           
  1374  0079' 3180' 2000' 3180'  	fcall	_EUSART_is_tx_done
  1375  007C' 3A00               	xorlw	0
  1376  007D' 1903               	skipnz
  1377  007E' 2880'              	goto	u231
  1378  007F' 2881'              	goto	u230
  1379  0080'                    u231:
  1380  0080' 2879'              	goto	l1167
  1381  0081'                    u230:
  1382  0081'                    l295:	
  1383                           ;main.c: 162:         do { LATAbits.LATA1 = 1; } while(0);
  1384                           
  1385  0081' 0022               	movlb	2	; select bank2
  1386  0082' 148C               	bsf	12,1	;volatile
  1387  0083'                    l297:	
  1388                           ;main.c: 163:         do { LATAbits.LATA3 = 1; } while(0);
  1389                           
  1390  0083' 158C               	bsf	12,3	;volatile
  1391  0084'                    l298:
  1392                           
  1393                           ;main.c: 164:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1394  0084' 3200               	nop2	;2 cycle nop
  1395  0085' 3200               	nop2	;2 cycle nop
  1396  0086' 3200               	nop2	;2 cycle nop
  1397  0087'                    l299:	
  1398                           ;main.c: 165:         do { LATAbits.LATA1 = 0; } while(0);
  1399                           
  1400  0087' 0022               	movlb	2	; select bank2
  1401  0088' 108C               	bcf	12,1	;volatile
  1402  0089'                    l301:	
  1403                           ;main.c: 166:         do { LATAbits.LATA3 = 0; } while(0);
  1404                           
  1405  0089' 118C               	bcf	12,3	;volatile
  1406  008A'                    l303:	
  1407                           ;main.c: 168:         do { LATAbits.LATA2 = 0; } while(0);
  1408                           
  1409  008A' 110C               	bcf	12,2	;volatile
  1410  008B'                    l305:	
  1411                           ;main.c: 169:         do { LATAbits.LATA4 = 0; } while(0);
  1412                           
  1413  008B' 120C               	bcf	12,4	;volatile
  1414  008C'                    l306:
  1415                           
  1416                           ;main.c: 170:         _delay((unsigned long)((100)*(250000/4000000.0)));
  1417  008C' 3200               	nop2	;2 cycle nop
  1418  008D' 3200               	nop2	;2 cycle nop
  1419  008E' 3200               	nop2	;2 cycle nop
  1420  008F' 280B'              	goto	l1143
  1421  0090' 2800'              	ljmp	start
  1422  0091'                    __end_of_main:
  1423                           
  1424                           	psect	text1
  1425  0000'                    __ptext1:	
  1426 ;; *************** function _SYSTEM_Initialize *****************
  1427 ;; Defined at:
  1428 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0, pclath, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1442 ;;      Params:         0       0       0       0
  1443 ;;      Locals:         0       0       0       0
  1444 ;;      Temps:          0       0       0       0
  1445 ;;      Totals:         0       0       0       0
  1446 ;;Total ram usage:        0 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; Hardware stack levels required when called: 4
  1449 ;; This function calls:
  1450 ;;		_EUSART_Initialize
  1451 ;;		_OSCILLATOR_Initialize
  1452 ;;		_PIN_MANAGER_Initialize
  1453 ;;		_TMR1_Initialize
  1454 ;;		_WDT_Initialize
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460  0000'                    _SYSTEM_Initialize:	
  1461                           ;psect for function _SYSTEM_Initialize
  1462                           
  1463  0000'                    l1135:	
  1464                           ;incstack = 0
  1465                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1466                           
  1467                           
  1468                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1469  0000' 3180' 2000' 3180'  	fcall	_PIN_MANAGER_Initialize
  1470                           
  1471                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1472  0003' 3180' 2000' 3180'  	fcall	_OSCILLATOR_Initialize
  1473                           
  1474                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1475  0006' 3180' 2000' 3180'  	fcall	_WDT_Initialize
  1476                           
  1477                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1478  0009' 3180' 2000' 3180'  	fcall	_TMR1_Initialize
  1479                           
  1480                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  1481  000C' 3180' 2000' 3180'  	fcall	_EUSART_Initialize
  1482  000F'                    l49:
  1483  000F' 0008               	return
  1484  0010'                    __end_of_SYSTEM_Initialize:
  1485                           
  1486                           	psect	text2
  1487  0000'                    __ptext2:	
  1488 ;; *************** function _WDT_Initialize *****************
  1489 ;; Defined at:
  1490 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;		None
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;		None
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      void 
  1497 ;; Registers used:
  1498 ;;		wreg
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1504 ;;      Params:         0       0       0       0
  1505 ;;      Locals:         0       0       0       0
  1506 ;;      Temps:          0       0       0       0
  1507 ;;      Totals:         0       0       0       0
  1508 ;;Total ram usage:        0 bytes
  1509 ;; Hardware stack levels used: 1
  1510 ;; Hardware stack levels required when called: 2
  1511 ;; This function calls:
  1512 ;;		Nothing
  1513 ;; This function is called by:
  1514 ;;		_SYSTEM_Initialize
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518  0000'                    _WDT_Initialize:	
  1519                           ;psect for function _WDT_Initialize
  1520                           
  1521  0000'                    l945:	
  1522                           ;incstack = 0
  1523                           ; Regs used in _WDT_Initialize: [wreg]
  1524                           
  1525                           
  1526                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  1527  0000' 3016               	movlw	22
  1528  0001' 0021               	movlb	1	; select bank1
  1529  0002' 0097               	movwf	23	;volatile
  1530  0003'                    l55:
  1531  0003' 0008               	return
  1532  0004'                    __end_of_WDT_Initialize:
  1533                           
  1534                           	psect	text3
  1535  0000'                    __ptext3:	
  1536 ;; *************** function _TMR1_Initialize *****************
  1537 ;; Defined at:
  1538 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0, pclath, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1552 ;;      Params:         0       0       0       0
  1553 ;;      Locals:         0       0       0       0
  1554 ;;      Temps:          0       0       0       0
  1555 ;;      Totals:         0       0       0       0
  1556 ;;Total ram usage:        0 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 3
  1559 ;; This function calls:
  1560 ;;		_TMR1_SetInterruptHandler
  1561 ;; This function is called by:
  1562 ;;		_SYSTEM_Initialize
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567  0000'                    _TMR1_Initialize:	
  1568                           ;psect for function _TMR1_Initialize
  1569                           
  1570  0000'                    l1105:	
  1571                           ;incstack = 0
  1572                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1573                           
  1574                           
  1575                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1576  0000' 0020               	movlb	0	; select bank0
  1577  0001' 0199               	clrf	25	;volatile
  1578  0002'                    l1107:
  1579                           
  1580                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xFC;
  1581  0002' 30FC               	movlw	252
  1582  0003' 0097               	movwf	23	;volatile
  1583  0004'                    l1109:
  1584                           
  1585                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x18;
  1586  0004' 3018               	movlw	24
  1587  0005' 0096               	movwf	22	;volatile
  1588  0006'                    l1111:
  1589                           
  1590                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1591  0006' 1011               	bcf	17,0	;volatile
  1592  0007'                    l1113:
  1593                           
  1594                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1595  0007' 0817               	movf	23,w	;volatile
  1596  0008' 0081'              	movwf	_timer1ReloadVal+1	;volatile
  1597  0009' 0816               	movf	22,w	;volatile
  1598  000A' 0080'              	movwf	_timer1ReloadVal	;volatile
  1599  000B'                    l1115:
  1600                           
  1601                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1602  000B' 0021               	movlb	1	; select bank1
  1603  000C' 1411               	bsf	17,0	;volatile
  1604  000D'                    l1117:
  1605                           
  1606                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1607  000D' 3000               	movlw	0
  1608  000E' 0080'              	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1609  000F' 3000               	movlw	0
  1610  0010' 0081'              	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1611  0011' 3180' 2000' 3180'  	fcall	_TMR1_SetInterruptHandler
  1612  0014'                    l1119:
  1613                           
  1614                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  1615  0014' 3001               	movlw	1
  1616  0015' 0020               	movlb	0	; select bank0
  1617  0016' 0098               	movwf	24	;volatile
  1618  0017'                    l82:
  1619  0017' 0008               	return
  1620  0018'                    __end_of_TMR1_Initialize:
  1621                           
  1622                           	psect	text4
  1623  0000'                    __ptext4:	
  1624 ;; *************** function _TMR1_SetInterruptHandler *****************
  1625 ;; Defined at:
  1626 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  1629 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1641 ;;      Params:         2       0       0       0
  1642 ;;      Locals:         0       0       0       0
  1643 ;;      Temps:          0       0       0       0
  1644 ;;      Totals:         2       0       0       0
  1645 ;;Total ram usage:        2 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; Hardware stack levels required when called: 2
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_TMR1_Initialize
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655  0000'                    _TMR1_SetInterruptHandler:	
  1656                           ;psect for function _TMR1_SetInterruptHandler
  1657                           
  1658  0000'                    l1097:	
  1659                           ;incstack = 0
  1660                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1661                           
  1662                           
  1663                           ;mcc_generated_files/tmr1.c: 178:     TMR1_InterruptHandler = InterruptHandler;
  1664  0000' 0801'              	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1665  0001' 0087'              	movwf	_TMR1_InterruptHandler+1
  1666  0002' 0800'              	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1667  0003' 0086'              	movwf	_TMR1_InterruptHandler
  1668  0004'                    l108:
  1669  0004' 0008               	return
  1670  0005'                    __end_of_TMR1_SetInterruptHandler:
  1671                           
  1672                           	psect	text5
  1673  0000'                    __ptext5:	
  1674 ;; *************** function _PIN_MANAGER_Initialize *****************
  1675 ;; Defined at:
  1676 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1690 ;;      Params:         0       0       0       0
  1691 ;;      Locals:         0       0       0       0
  1692 ;;      Temps:          0       0       0       0
  1693 ;;      Totals:         0       0       0       0
  1694 ;;Total ram usage:        0 bytes
  1695 ;; Hardware stack levels used: 1
  1696 ;; Hardware stack levels required when called: 2
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_SYSTEM_Initialize
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704  0000'                    _PIN_MANAGER_Initialize:	
  1705                           ;psect for function _PIN_MANAGER_Initialize
  1706                           
  1707  0000'                    l927:	
  1708                           ;incstack = 0
  1709                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1710                           
  1711                           
  1712                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x15;
  1713  0000' 3015               	movlw	21
  1714  0001' 0022               	movlb	2	; select bank2
  1715  0002' 008C               	movwf	12	;volatile
  1716  0003'                    l929:
  1717                           
  1718                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1719  0003' 018D               	clrf	13	;volatile
  1720  0004'                    l931:
  1721                           
  1722                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xE0;
  1723  0004' 30E0               	movlw	224
  1724  0005' 0021               	movlb	1	; select bank1
  1725  0006' 008C               	movwf	12	;volatile
  1726  0007'                    l933:
  1727                           
  1728                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  1729  0007' 30FF               	movlw	255
  1730  0008' 008D               	movwf	13	;volatile
  1731  0009'                    l935:
  1732                           
  1733                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF8;
  1734  0009' 30F8               	movlw	248
  1735  000A' 0023               	movlb	3	; select bank3
  1736  000B' 008D               	movwf	13	;volatile
  1737                           
  1738                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x00;
  1739  000C' 018C               	clrf	12	;volatile
  1740                           
  1741                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  1742  000D' 0024               	movlb	4	; select bank4
  1743  000E' 018D               	clrf	13	;volatile
  1744                           
  1745                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  1746  000F' 018C               	clrf	12	;volatile
  1747  0010'                    l937:
  1748                           
  1749                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  1750  0010' 0021               	movlb	1	; select bank1
  1751  0011' 1795               	bsf	21,7	;volatile
  1752                           
  1753                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  1754  0012' 0022               	movlb	2	; select bank2
  1755  0013' 019D               	clrf	29	;volatile
  1756                           
  1757                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  1758  0014' 019E               	clrf	30	;volatile
  1759  0015'                    l25:
  1760  0015' 0008               	return
  1761  0016'                    __end_of_PIN_MANAGER_Initialize:
  1762                           
  1763                           	psect	text6
  1764  0000'                    __ptext6:	
  1765 ;; *************** function _OSCILLATOR_Initialize *****************
  1766 ;; Defined at:
  1767 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1781 ;;      Params:         0       0       0       0
  1782 ;;      Locals:         0       0       0       0
  1783 ;;      Temps:          0       0       0       0
  1784 ;;      Totals:         0       0       0       0
  1785 ;;Total ram usage:        0 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; Hardware stack levels required when called: 2
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_SYSTEM_Initialize
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795  0000'                    _OSCILLATOR_Initialize:	
  1796                           ;psect for function _OSCILLATOR_Initialize
  1797                           
  1798  0000'                    l939:	
  1799                           ;incstack = 0
  1800                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1801                           
  1802                           
  1803                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x48;
  1804  0000' 3048               	movlw	72
  1805  0001' 0021               	movlb	1	; select bank1
  1806  0002' 0099               	movwf	25	;volatile
  1807  0003'                    l941:
  1808                           
  1809                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  1810  0003' 0198               	clrf	24	;volatile
  1811  0004'                    l943:
  1812                           
  1813                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  1814  0004' 0022               	movlb	2	; select bank2
  1815  0005' 0196               	clrf	22	;volatile
  1816  0006'                    l52:
  1817  0006' 0008               	return
  1818  0007'                    __end_of_OSCILLATOR_Initialize:
  1819                           
  1820                           	psect	text7
  1821  0000'                    __ptext7:	
  1822 ;; *************** function _EUSART_Initialize *****************
  1823 ;; Defined at:
  1824 ;;		line 65 in file "mcc_generated_files/eusart.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;		None
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;		None
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      void 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0, pclath, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1838 ;;      Params:         0       0       0       0
  1839 ;;      Locals:         0       0       0       0
  1840 ;;      Temps:          0       0       0       0
  1841 ;;      Totals:         0       0       0       0
  1842 ;;Total ram usage:        0 bytes
  1843 ;; Hardware stack levels used: 1
  1844 ;; Hardware stack levels required when called: 3
  1845 ;; This function calls:
  1846 ;;		_EUSART_SetErrorHandler
  1847 ;;		_EUSART_SetFramingErrorHandler
  1848 ;;		_EUSART_SetOverrunErrorHandler
  1849 ;; This function is called by:
  1850 ;;		_SYSTEM_Initialize
  1851 ;;		_main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855  0000'                    _EUSART_Initialize:	
  1856                           ;psect for function _EUSART_Initialize
  1857                           
  1858  0000'                    l1121:	
  1859                           ;incstack = 0
  1860                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1861                           
  1862                           
  1863                           ;mcc_generated_files/eusart.c: 70:     BAUDCON = 0x18;
  1864  0000' 3018               	movlw	24
  1865  0001' 0023               	movlb	3	; select bank3
  1866  0002' 009F               	movwf	31	;volatile
  1867                           
  1868                           ;mcc_generated_files/eusart.c: 73:     RCSTA = 0x80;
  1869  0003' 3080               	movlw	128
  1870  0004' 009D               	movwf	29	;volatile
  1871                           
  1872                           ;mcc_generated_files/eusart.c: 76:     TXSTA = 0xB4;
  1873  0005' 30B4               	movlw	180
  1874  0006' 009E               	movwf	30	;volatile
  1875  0007'                    l1123:
  1876                           
  1877                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0x00;
  1878  0007' 019B               	clrf	27	;volatile
  1879  0008'                    l1125:
  1880                           
  1881                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x00;
  1882  0008' 019C               	clrf	28	;volatile
  1883  0009'                    l1127:
  1884                           
  1885                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  1886  0009' 3000               	movlw	0
  1887  000A' 0080'              	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  1888  000B' 3000               	movlw	0
  1889  000C' 0081'              	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  1890  000D' 3180' 2000' 3180'  	fcall	_EUSART_SetFramingErrorHandler
  1891  0010'                    l1129:
  1892                           
  1893                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  1894  0010' 3000               	movlw	0
  1895  0011' 0080'              	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  1896  0012' 3000               	movlw	0
  1897  0013' 0081'              	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  1898  0014' 3180' 2000' 3180'  	fcall	_EUSART_SetOverrunErrorHandler
  1899  0017'                    l1131:
  1900                           
  1901                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  1902  0017' 3000               	movlw	0
  1903  0018' 0080'              	movwf	EUSART_SetErrorHandler@interruptHandler
  1904  0019' 3000               	movlw	0
  1905  001A' 0081'              	movwf	EUSART_SetErrorHandler@interruptHandler+1
  1906  001B' 3180' 2000' 3180'  	fcall	_EUSART_SetErrorHandler
  1907  001E'                    l1133:
  1908                           
  1909                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  1910  001E' 0182'              	clrf	_eusartRxLastError	;volatile
  1911  001F'                    l154:
  1912  001F' 0008               	return
  1913  0020'                    __end_of_EUSART_Initialize:
  1914                           
  1915                           	psect	text8
  1916  0000'                    __ptext8:	
  1917 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  1918 ;; Defined at:
  1919 ;;		line 167 in file "mcc_generated_files/eusart.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  1922 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1934 ;;      Params:         2       0       0       0
  1935 ;;      Locals:         0       0       0       0
  1936 ;;      Temps:          0       0       0       0
  1937 ;;      Totals:         2       0       0       0
  1938 ;;Total ram usage:        2 bytes
  1939 ;; Hardware stack levels used: 1
  1940 ;; Hardware stack levels required when called: 2
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_EUSART_Initialize
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948  0000'                    _EUSART_SetOverrunErrorHandler:	
  1949                           ;psect for function _EUSART_SetOverrunErrorHandler
  1950                           
  1951  0000'                    l1101:	
  1952                           ;incstack = 0
  1953                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  1954                           
  1955                           
  1956                           ;mcc_generated_files/eusart.c: 168:     EUSART_OverrunErrorHandler = interruptHandler;
  1957  0000' 0801'              	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  1958  0001' 0083'              	movwf	_EUSART_OverrunErrorHandler+1
  1959  0002' 0800'              	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  1960  0003' 0082'              	movwf	_EUSART_OverrunErrorHandler
  1961  0004'                    l198:
  1962  0004' 0008               	return
  1963  0005'                    __end_of_EUSART_SetOverrunErrorHandler:
  1964                           
  1965                           	psect	text9
  1966  0000'                    __ptext9:	
  1967 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  1968 ;; Defined at:
  1969 ;;		line 163 in file "mcc_generated_files/eusart.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  1972 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;		None
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1984 ;;      Params:         2       0       0       0
  1985 ;;      Locals:         0       0       0       0
  1986 ;;      Temps:          0       0       0       0
  1987 ;;      Totals:         2       0       0       0
  1988 ;;Total ram usage:        2 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; Hardware stack levels required when called: 2
  1991 ;; This function calls:
  1992 ;;		Nothing
  1993 ;; This function is called by:
  1994 ;;		_EUSART_Initialize
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998  0000'                    _EUSART_SetFramingErrorHandler:	
  1999                           ;psect for function _EUSART_SetFramingErrorHandler
  2000                           
  2001  0000'                    l1099:	
  2002                           ;incstack = 0
  2003                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2004                           
  2005                           
  2006                           ;mcc_generated_files/eusart.c: 164:     EUSART_FramingErrorHandler = interruptHandler;
  2007  0000' 0801'              	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  2008  0001' 0085'              	movwf	_EUSART_FramingErrorHandler+1
  2009  0002' 0800'              	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  2010  0003' 0084'              	movwf	_EUSART_FramingErrorHandler
  2011  0004'                    l195:
  2012  0004' 0008               	return
  2013  0005'                    __end_of_EUSART_SetFramingErrorHandler:
  2014                           
  2015                           	psect	text10
  2016  0000'                    __ptext10:	
  2017 ;; *************** function _EUSART_SetErrorHandler *****************
  2018 ;; Defined at:
  2019 ;;		line 171 in file "mcc_generated_files/eusart.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2022 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;		None
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2034 ;;      Params:         2       0       0       0
  2035 ;;      Locals:         0       0       0       0
  2036 ;;      Temps:          0       0       0       0
  2037 ;;      Totals:         2       0       0       0
  2038 ;;Total ram usage:        2 bytes
  2039 ;; Hardware stack levels used: 1
  2040 ;; Hardware stack levels required when called: 2
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_EUSART_Initialize
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048  0000'                    _EUSART_SetErrorHandler:	
  2049                           ;psect for function _EUSART_SetErrorHandler
  2050                           
  2051  0000'                    l1103:	
  2052                           ;incstack = 0
  2053                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2054                           
  2055                           
  2056                           ;mcc_generated_files/eusart.c: 172:     EUSART_ErrorHandler = interruptHandler;
  2057  0000' 0801'              	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  2058  0001' 0081'              	movwf	_EUSART_ErrorHandler+1
  2059  0002' 0800'              	movf	EUSART_SetErrorHandler@interruptHandler,w
  2060  0003' 0080'              	movwf	_EUSART_ErrorHandler
  2061  0004'                    l201:
  2062  0004' 0008               	return
  2063  0005'                    __end_of_EUSART_SetErrorHandler:
  2064                           
  2065                           	psect	text11
  2066  0000'                    __ptext11:	
  2067 ;; *************** function _EUSART_is_tx_done *****************
  2068 ;; Defined at:
  2069 ;;		line 103 in file "mcc_generated_files/eusart.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      _Bool 
  2076 ;; Registers used:
  2077 ;;		wreg, status,2, status,0
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2083 ;;      Params:         0       0       0       0
  2084 ;;      Locals:         0       0       0       0
  2085 ;;      Temps:          0       0       0       0
  2086 ;;      Totals:         0       0       0       0
  2087 ;;Total ram usage:        0 bytes
  2088 ;; Hardware stack levels used: 1
  2089 ;; Hardware stack levels required when called: 2
  2090 ;; This function calls:
  2091 ;;		Nothing
  2092 ;; This function is called by:
  2093 ;;		_main
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097  0000'                    _EUSART_is_tx_done:	
  2098                           ;psect for function _EUSART_is_tx_done
  2099                           
  2100  0000'                    l993:	
  2101                           ;incstack = 0
  2102                           ; Regs used in _EUSART_is_tx_done: [wreg+status,2+status,0]
  2103                           
  2104                           
  2105                           ;mcc_generated_files/eusart.c: 105:     return TXSTAbits.TRMT;
  2106  0000' 0023               	movlb	3	; select bank3
  2107  0001' 0C1E               	rrf	30,w	;volatile
  2108  0002' 3901               	andlw	1
  2109  0003'                    l165:
  2110  0003' 0008               	return
  2111  0004'                    __end_of_EUSART_is_tx_done:
  2112                           
  2113                           	psect	text12
  2114  0000'                    __ptext12:	
  2115 ;; *************** function _EUSART_Write *****************
  2116 ;; Defined at:
  2117 ;;		line 138 in file "mcc_generated_files/eusart.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  txData          1    wreg     unsigned char 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  txData          1    0[COMMON] unsigned char 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      void 
  2124 ;; Registers used:
  2125 ;;		wreg
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2131 ;;      Params:         0       0       0       0
  2132 ;;      Locals:         1       0       0       0
  2133 ;;      Temps:          0       0       0       0
  2134 ;;      Totals:         1       0       0       0
  2135 ;;Total ram usage:        1 bytes
  2136 ;; Hardware stack levels used: 1
  2137 ;; Hardware stack levels required when called: 2
  2138 ;; This function calls:
  2139 ;;		Nothing
  2140 ;; This function is called by:
  2141 ;;		_main
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145  0000'                    _EUSART_Write:	
  2146                           ;psect for function _EUSART_Write
  2147                           
  2148                           
  2149                           ;incstack = 0
  2150                           ; Regs used in _EUSART_Write: [wreg]
  2151                           ;EUSART_Write@txData stored from wreg
  2152  0000' 0080'              	movwf	EUSART_Write@txData
  2153  0001'                    l997:
  2154                           
  2155                           ;mcc_generated_files/eusart.c: 138: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 139: {;mcc_generated_files/eusart.c: 140:     RCSTAbits.SREN = 0;
  2156  0001' 0023               	movlb	3	; select bank3
  2157  0002' 129D               	bcf	29,5	;volatile
  2158                           
  2159                           ;mcc_generated_files/eusart.c: 141:     RCSTAbits.CREN = 0;
  2160  0003' 121D               	bcf	29,4	;volatile
  2161  0004'                    l180:	
  2162                           ;mcc_generated_files/eusart.c: 143:     {;mcc_generated_files/eusart.c: 144:     }
  2163                           
  2164                           
  2165                           ;mcc_generated_files/eusart.c: 142:     while(0 == PIR1bits.TXIF)
  2166  0004' 0020               	movlb	0	; select bank0
  2167  0005' 1E11               	btfss	17,4	;volatile
  2168  0006' 2808'              	goto	u21
  2169  0007' 2809'              	goto	u20
  2170  0008'                    u21:
  2171  0008' 2804'              	goto	l180
  2172  0009'                    u20:
  2173  0009'                    l999:
  2174                           
  2175                           ;mcc_generated_files/eusart.c: 146:     TXREG = txData;
  2176  0009' 0800'              	movf	EUSART_Write@txData,w
  2177  000A' 0023               	movlb	3	; select bank3
  2178  000B' 009A               	movwf	26	;volatile
  2179  000C'                    l183:
  2180  000C' 0008               	return
  2181  000D'                    __end_of_EUSART_Write:
  2182                           
  2183                           	psect	intentry
  2184  0000'                    __pintentry:	
  2185 ;; *************** function _INTERRUPT_InterruptManager *****************
  2186 ;; Defined at:
  2187 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2201 ;;      Params:         0       0       0       0
  2202 ;;      Locals:         0       0       0       0
  2203 ;;      Temps:          0       0       0       0
  2204 ;;      Totals:         0       0       0       0
  2205 ;;Total ram usage:        0 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 1
  2208 ;; This function calls:
  2209 ;;		_TMR1_ISR
  2210 ;; This function is called by:
  2211 ;;		Interrupt level 1
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215  0000'                    _INTERRUPT_InterruptManager:
  2216                           
  2217                           ;incstack = 0
  2218  0000' 147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2219                           
  2220                           ; Regs used in _INTERRUPT_InterruptManager: [allreg]
  2221  0001' 3180'              	pagesel	$
  2222  0002'                    i1l1057:
  2223                           
  2224                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  2225  0002' 1F0B               	btfss	11,6	;volatile
  2226  0003' 2805'              	goto	u9_21
  2227  0004' 2806'              	goto	u9_20
  2228  0005'                    u9_21:
  2229  0005' 2813'              	goto	i1l218
  2230  0006'                    u9_20:
  2231  0006'                    i1l1059:
  2232                           
  2233                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  2234  0006' 0021               	movlb	1	; select bank1
  2235  0007' 1C11               	btfss	17,0	;volatile
  2236  0008' 280A'              	goto	u10_21
  2237  0009' 280B'              	goto	u10_20
  2238  000A'                    u10_21:
  2239  000A' 2813'              	goto	i1l218
  2240  000B'                    u10_20:
  2241  000B'                    i1l1061:
  2242  000B' 0020               	movlb	0	; select bank0
  2243  000C' 1C11               	btfss	17,0	;volatile
  2244  000D' 280F'              	goto	u11_21
  2245  000E' 2810'              	goto	u11_20
  2246  000F'                    u11_21:
  2247  000F' 2813'              	goto	i1l218
  2248  0010'                    u11_20:
  2249  0010'                    i1l1063:
  2250                           
  2251                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  2252  0010' 3180' 2000' 3180'  	fcall	_TMR1_ISR
  2253  0013'                    i1l218:	
  2254                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  2255                           
  2256  0013' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2257  0014' 0009               	retfie
  2258  0015'                    __end_of_INTERRUPT_InterruptManager:
  2259  007E                     btemp	set	126	;btemp
  2260  007E                     int$flags	set	126
  2261  007E                     wtemp0	set	126
  2262                           
  2263                           	psect	config
  2264                           
  2265                           ;Config register CONFIG1 @ 0x8007
  2266                           ;	Oscillator Selection
  2267                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2268                           ;	Watchdog Timer Enable
  2269                           ;	WDTE = OFF, WDT disabled
  2270                           ;	Power-up Timer Enable
  2271                           ;	PWRTE = OFF, PWRT disabled
  2272                           ;	MCLR Pin Function Select
  2273                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2274                           ;	Flash Program Memory Code Protection
  2275                           ;	CP = OFF, Program memory code protection is disabled
  2276                           ;	Data Memory Code Protection
  2277                           ;	CPD = OFF, Data memory code protection is disabled
  2278                           ;	Brown-out Reset Enable
  2279                           ;	BOREN = ON, Brown-out Reset enabled
  2280                           ;	Clock Out Enable
  2281                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2282                           ;	Internal/External Switchover
  2283                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2284                           ;	Fail-Safe Clock Monitor Enable
  2285                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2286  8007                     	org	32775
  2287  8007  3FE4               	dw	16356
  2288                           
  2289                           ;Config register CONFIG2 @ 0x8008
  2290                           ;	Flash Memory Self-Write Protection
  2291                           ;	WRT = OFF, Write protection off
  2292                           ;	PLL Enable
  2293                           ;	PLLEN = OFF, 4x PLL disabled
  2294                           ;	Stack Overflow/Underflow Reset Enable
  2295                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2296                           ;	Brown-out Reset Voltage Selection
  2297                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2298                           ;	In-Circuit Debugger Mode
  2299                           ;	DEBUG = 0x1, unprogrammed default
  2300                           ;	Low-Voltage Programming Enable
  2301                           ;	LVP = ON, Low-voltage programming enabled
  2302  8008                     	org	32776
  2303  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     799
                  _EUSART_Initialize
                       _EUSART_Write
                  _EUSART_is_tx_done
                  _SYSTEM_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     392
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     _EUSART_SetErrorHandler
     _EUSART_SetFramingErrorHandler
     _EUSART_SetOverrunErrorHandler
   _EUSART_Write
   _EUSART_is_tx_done
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      2       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0       D      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Jan 14 15:59:53 2024

                                           l25 0015                                             l52 0006  
                                           l55 0003                                             l49 000F  
                                           l82 0017                                             u20 0009  
                                           u21 0008                                            l201 0004  
                                          l108 0004                                            l301 0089  
                                          l303 008A                                            l305 008B  
                                          l154 001F                                            l306 008C  
                                          l251 0029                                            l180 0004  
                                          l244 000E                                            l165 0003  
                                          l261 0033                                            l253 002B  
                                          l262 0034                                            l254 002C  
                                          l183 000C                                            l263 0037  
                                          l255 002F                                            l247 001A  
                                          l281 005E                                            l273 0055  
                                          l265 0039                                            l257 0031  
                                          l195 0004                                            l291 0072  
                                          l283 005F                                            l275 0057  
                                          l259 0032                                            l284 0060  
                                          l276 0058                                            l285 0063  
                                          l277 005B                                            l269 0046  
                                          l198 0004                                            l295 0081  
                                          l287 0065                                            l279 005D  
                                          l297 0083                                            l298 0084  
                                          l299 0087                                            l931 0004  
                                          l941 0003                                            l933 0007  
                                          l943 0004                                            l935 0009  
                                          l927 0000                                            l937 0010  
                                          l929 0003                                            l945 0000  
                                          l939 0000                                            l993 0000  
                                          l997 0001                                            l999 0009  
                                          u200 0046                                            u201 0045  
                                          u210 0055                                            u211 0054  
                                          u220 0072                                            u221 0071  
                                          u230 0081                                            u231 0080  
                                          u180 001A                                            u181 0019  
                                          u190 0029                                            u191 0028  
                              _timer1ReloadVal 0000                 ?_EUSART_SetFramingErrorHandler 0000  
                                         l1101 0000                                           l1103 0000  
                                         l1111 0006                                           l1121 0000  
                                         l1113 0007                                           l1105 0000  
                                         l1131 0017                                           l1123 0007  
                                         l1115 000B                                           l1107 0002  
                                         l1133 001E                                           l1125 0008  
                                         l1117 000D                                           l1109 0004  
                                         l1141 000A                                           l1127 0009  
                                         l1119 0014                                           l1135 0000  
                                         l1151 0021                                           l1143 000B  
                                         l1129 0010                                           l1161 0066  
                                         l1153 003A                                           l1145 000D  
                                         l1137 0000                                           l1163 006A  
                                         l1155 003E                                           l1147 0012  
                                         l1139 0009                                           l1165 0075  
                                         l1157 0049                                           l1149 001D  
                                         l1167 0079                                           l1159 004D  
                                         l1097 0000                                           l1099 0000  
                                         _LATA 010C                                           _LATB 010D  
                                         _WPUA 020C                                           _WPUB 020D  
                                         u9_20 0006                                           u9_21 0005  
                                         _main 0000                                           btemp 007E  
                                         start 0000*                    ??_TMR1_SetInterruptHandler 0002  
                                ?_EUSART_Write 0000                  __end_of_OSCILLATOR_Initialize 0007  
                                        ?_main 0000                                          _T1CON 0018  
                                        i1l218 0013                                          _RCREG 0199  
                                        u10_20 000B                                          u10_21 000A  
                                        u11_20 0010                                          u11_21 000F  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                        _TXSTA 019E                                 _WDT_Initialize 0000  
                      __end_of_TMR1_Initialize 0018                                          wtemp0 007E  
                              __initialization 0000                                   __end_of_main 0091  
                               ??_EUSART_Write 0000                    ?_INTERRUPT_InterruptManager 0000  
                                       ??_main 0002                         __end_of_WDT_Initialize 0004  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 0002  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       i1l1061 000B                                         i1l1063 0010  
                                       i1l1057 0002                                         i1l1059 0006  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                 _TMR1_DefaultInterruptHandler 0000                                ?_WDT_Initialize 0000  
     TMR1_SetInterruptHandler@InterruptHandler 0000                               ?_TMR1_Initialize 0000  
                            _SYSTEM_Initialize 0000                        __end_of__initialization 0003  
                           ?_SYSTEM_Initialize 0000                                 __pcstackCOMMON 0000  
                          ??_SYSTEM_Initialize 0002                                      ?_TMR1_ISR 0000  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 0002  
                    __end_of_SYSTEM_Initialize 0010                           __end_of_EUSART_Write 000D  
                                   __pnvCOMMON 0000                                     __pmaintext 0000  
                                   ??_TMR1_ISR 0000                                     __pintentry 0000  
                                      _BAUDCON 019F                                        _APFCON0 011D  
                                      _APFCON1 011E                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 0002                                        __ptext1 0000  
                                      __ptext2 0000                                        __ptext3 0000  
                                      __ptext4 0000                                        __ptext5 0000  
                                      __ptext6 0000                                        __ptext7 0000  
                                      __ptext8 0000                                        __ptext9 0000  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 0000  
                     ??_PIN_MANAGER_Initialize 0000                      ?_TMR1_SetInterruptHandler 0000  
                         end_of_initialization 0003          __end_of_EUSART_SetOverrunErrorHandler 0005  
                _EUSART_SetOverrunErrorHandler 0000                              _EUSART_Initialize 0000  
                           ?_EUSART_Initialize 0000                                      _RCSTAbits 019D  
                          ??_EUSART_Initialize 0002                               ??_WDT_Initialize 0000  
                    __end_of_EUSART_Initialize 0020                                      _TXSTAbits 019E  
                   _EUSART_DefaultErrorHandler 0000                                   _EUSART_Write 0000  
                       ?_OSCILLATOR_Initialize 0000                            start_initialization 0000  
               ?_EUSART_SetOverrunErrorHandler 0000                     _EUSART_FramingErrorHandler 0004  
                       _EUSART_SetErrorHandler 0000                                    __pbssCOMMON 0000  
                                    ___latbits 0000                         _PIN_MANAGER_Initialize 0000  
             __end_of_TMR1_SetInterruptHandler 0005                   ??_INTERRUPT_InterruptManager 0000  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0000  
                                     _PIE1bits 0091                              _eusartRxLastError 0002  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0002  
                            _EUSART_is_tx_done 0000              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR1_ISR 0000*                            ?_EUSART_is_tx_done 0000  
                            ??_TMR1_Initialize 0002                            ??_EUSART_is_tx_done 0000  
                    __end_of_EUSART_is_tx_done 0004                        ??_OSCILLATOR_Initialize 0000  
                          _EUSART_ErrorHandler 0000                       _TMR1_SetInterruptHandler 0000  
                        _TMR1_InterruptHandler 0006                                       __ptext10 0000  
                                     __ptext11 0000                                       __ptext12 0000  
                                   _T1GCONbits 0019                        ?_EUSART_SetErrorHandler 0000  
EUSART_SetOverrunErrorHandler@interruptHandler 0000                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 0015                     _INTERRUPT_InterruptManager 0000  
        __end_of_EUSART_SetFramingErrorHandler 0005                  _EUSART_SetFramingErrorHandler 0000  
                                   _INTCONbits 000B                                       intlevel1 0000* 
                      ?_PIN_MANAGER_Initialize 0000                 __end_of_EUSART_SetErrorHandler 0005  
EUSART_SetFramingErrorHandler@interruptHandler 0000                             EUSART_Write@txData 0000  
               __end_of_PIN_MANAGER_Initialize 0016                                _TMR1_Initialize 0000  
