

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Nov 24 22:24:32 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16LF1826
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32     0000                     
    33                           ; Generated 06/07/2023 GMT
    34                           ; 
    35                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16LF1826 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67     0000                     	;# 
    68     0001                     	;# 
    69     0002                     	;# 
    70     0003                     	;# 
    71     0004                     	;# 
    72     0005                     	;# 
    73     0006                     	;# 
    74     0007                     	;# 
    75     0008                     	;# 
    76     0009                     	;# 
    77     000A                     	;# 
    78     000B                     	;# 
    79     000C                     	;# 
    80     000D                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0095                     	;# 
    99     0096                     	;# 
   100     0097                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009A                     	;# 
   104     009B                     	;# 
   105     009B                     	;# 
   106     009C                     	;# 
   107     009D                     	;# 
   108     009E                     	;# 
   109     010C                     	;# 
   110     010D                     	;# 
   111     0111                     	;# 
   112     0112                     	;# 
   113     0113                     	;# 
   114     0114                     	;# 
   115     0115                     	;# 
   116     0116                     	;# 
   117     0117                     	;# 
   118     0118                     	;# 
   119     0119                     	;# 
   120     011A                     	;# 
   121     011B                     	;# 
   122     011D                     	;# 
   123     011E                     	;# 
   124     018C                     	;# 
   125     018D                     	;# 
   126     0191                     	;# 
   127     0191                     	;# 
   128     0192                     	;# 
   129     0193                     	;# 
   130     0193                     	;# 
   131     0193                     	;# 
   132     0194                     	;# 
   133     0195                     	;# 
   134     0196                     	;# 
   135     0199                     	;# 
   136     019A                     	;# 
   137     019B                     	;# 
   138     019B                     	;# 
   139     019B                     	;# 
   140     019B                     	;# 
   141     019C                     	;# 
   142     019C                     	;# 
   143     019D                     	;# 
   144     019E                     	;# 
   145     019F                     	;# 
   146     020C                     	;# 
   147     020D                     	;# 
   148     0211                     	;# 
   149     0211                     	;# 
   150     0212                     	;# 
   151     0212                     	;# 
   152     0213                     	;# 
   153     0213                     	;# 
   154     0214                     	;# 
   155     0214                     	;# 
   156     0215                     	;# 
   157     0215                     	;# 
   158     0215                     	;# 
   159     0216                     	;# 
   160     0216                     	;# 
   161     0217                     	;# 
   162     0217                     	;# 
   163     0291                     	;# 
   164     0291                     	;# 
   165     0292                     	;# 
   166     0293                     	;# 
   167     0294                     	;# 
   168     0295                     	;# 
   169     0295                     	;# 
   170     0296                     	;# 
   171     0394                     	;# 
   172     0395                     	;# 
   173     0396                     	;# 
   174     039A                     	;# 
   175     039C                     	;# 
   176     039D                     	;# 
   177     039E                     	;# 
   178     039F                     	;# 
   179     0FE4                     	;# 
   180     0FE5                     	;# 
   181     0FE6                     	;# 
   182     0FE7                     	;# 
   183     0FE8                     	;# 
   184     0FE9                     	;# 
   185     0FEA                     	;# 
   186     0FEB                     	;# 
   187     0FED                     	;# 
   188     0FEE                     	;# 
   189     0FEF                     	;# 
   190     0000                     	;# 
   191     0001                     	;# 
   192     0002                     	;# 
   193     0003                     	;# 
   194     0004                     	;# 
   195     0005                     	;# 
   196     0006                     	;# 
   197     0007                     	;# 
   198     0008                     	;# 
   199     0009                     	;# 
   200     000A                     	;# 
   201     000B                     	;# 
   202     000C                     	;# 
   203     000D                     	;# 
   204     0011                     	;# 
   205     0012                     	;# 
   206     0015                     	;# 
   207     0016                     	;# 
   208     0016                     	;# 
   209     0017                     	;# 
   210     0018                     	;# 
   211     0019                     	;# 
   212     001A                     	;# 
   213     001B                     	;# 
   214     001C                     	;# 
   215     001E                     	;# 
   216     001F                     	;# 
   217     008C                     	;# 
   218     008D                     	;# 
   219     0091                     	;# 
   220     0092                     	;# 
   221     0095                     	;# 
   222     0096                     	;# 
   223     0097                     	;# 
   224     0098                     	;# 
   225     0099                     	;# 
   226     009A                     	;# 
   227     009B                     	;# 
   228     009B                     	;# 
   229     009C                     	;# 
   230     009D                     	;# 
   231     009E                     	;# 
   232     010C                     	;# 
   233     010D                     	;# 
   234     0111                     	;# 
   235     0112                     	;# 
   236     0113                     	;# 
   237     0114                     	;# 
   238     0115                     	;# 
   239     0116                     	;# 
   240     0117                     	;# 
   241     0118                     	;# 
   242     0119                     	;# 
   243     011A                     	;# 
   244     011B                     	;# 
   245     011D                     	;# 
   246     011E                     	;# 
   247     018C                     	;# 
   248     018D                     	;# 
   249     0191                     	;# 
   250     0191                     	;# 
   251     0192                     	;# 
   252     0193                     	;# 
   253     0193                     	;# 
   254     0193                     	;# 
   255     0194                     	;# 
   256     0195                     	;# 
   257     0196                     	;# 
   258     0199                     	;# 
   259     019A                     	;# 
   260     019B                     	;# 
   261     019B                     	;# 
   262     019B                     	;# 
   263     019B                     	;# 
   264     019C                     	;# 
   265     019C                     	;# 
   266     019D                     	;# 
   267     019E                     	;# 
   268     019F                     	;# 
   269     020C                     	;# 
   270     020D                     	;# 
   271     0211                     	;# 
   272     0211                     	;# 
   273     0212                     	;# 
   274     0212                     	;# 
   275     0213                     	;# 
   276     0213                     	;# 
   277     0214                     	;# 
   278     0214                     	;# 
   279     0215                     	;# 
   280     0215                     	;# 
   281     0215                     	;# 
   282     0216                     	;# 
   283     0216                     	;# 
   284     0217                     	;# 
   285     0217                     	;# 
   286     0291                     	;# 
   287     0291                     	;# 
   288     0292                     	;# 
   289     0293                     	;# 
   290     0294                     	;# 
   291     0295                     	;# 
   292     0295                     	;# 
   293     0296                     	;# 
   294     0394                     	;# 
   295     0395                     	;# 
   296     0396                     	;# 
   297     039A                     	;# 
   298     039C                     	;# 
   299     039D                     	;# 
   300     039E                     	;# 
   301     039F                     	;# 
   302     0FE4                     	;# 
   303     0FE5                     	;# 
   304     0FE6                     	;# 
   305     0FE7                     	;# 
   306     0FE8                     	;# 
   307     0FE9                     	;# 
   308     0FEA                     	;# 
   309     0FEB                     	;# 
   310     0FED                     	;# 
   311     0FEE                     	;# 
   312     0FEF                     	;# 
   313     0000                     	;# 
   314     0001                     	;# 
   315     0002                     	;# 
   316     0003                     	;# 
   317     0004                     	;# 
   318     0005                     	;# 
   319     0006                     	;# 
   320     0007                     	;# 
   321     0008                     	;# 
   322     0009                     	;# 
   323     000A                     	;# 
   324     000B                     	;# 
   325     000C                     	;# 
   326     000D                     	;# 
   327     0011                     	;# 
   328     0012                     	;# 
   329     0015                     	;# 
   330     0016                     	;# 
   331     0016                     	;# 
   332     0017                     	;# 
   333     0018                     	;# 
   334     0019                     	;# 
   335     001A                     	;# 
   336     001B                     	;# 
   337     001C                     	;# 
   338     001E                     	;# 
   339     001F                     	;# 
   340     008C                     	;# 
   341     008D                     	;# 
   342     0091                     	;# 
   343     0092                     	;# 
   344     0095                     	;# 
   345     0096                     	;# 
   346     0097                     	;# 
   347     0098                     	;# 
   348     0099                     	;# 
   349     009A                     	;# 
   350     009B                     	;# 
   351     009B                     	;# 
   352     009C                     	;# 
   353     009D                     	;# 
   354     009E                     	;# 
   355     010C                     	;# 
   356     010D                     	;# 
   357     0111                     	;# 
   358     0112                     	;# 
   359     0113                     	;# 
   360     0114                     	;# 
   361     0115                     	;# 
   362     0116                     	;# 
   363     0117                     	;# 
   364     0118                     	;# 
   365     0119                     	;# 
   366     011A                     	;# 
   367     011B                     	;# 
   368     011D                     	;# 
   369     011E                     	;# 
   370     018C                     	;# 
   371     018D                     	;# 
   372     0191                     	;# 
   373     0191                     	;# 
   374     0192                     	;# 
   375     0193                     	;# 
   376     0193                     	;# 
   377     0193                     	;# 
   378     0194                     	;# 
   379     0195                     	;# 
   380     0196                     	;# 
   381     0199                     	;# 
   382     019A                     	;# 
   383     019B                     	;# 
   384     019B                     	;# 
   385     019B                     	;# 
   386     019B                     	;# 
   387     019C                     	;# 
   388     019C                     	;# 
   389     019D                     	;# 
   390     019E                     	;# 
   391     019F                     	;# 
   392     020C                     	;# 
   393     020D                     	;# 
   394     0211                     	;# 
   395     0211                     	;# 
   396     0212                     	;# 
   397     0212                     	;# 
   398     0213                     	;# 
   399     0213                     	;# 
   400     0214                     	;# 
   401     0214                     	;# 
   402     0215                     	;# 
   403     0215                     	;# 
   404     0215                     	;# 
   405     0216                     	;# 
   406     0216                     	;# 
   407     0217                     	;# 
   408     0217                     	;# 
   409     0291                     	;# 
   410     0291                     	;# 
   411     0292                     	;# 
   412     0293                     	;# 
   413     0294                     	;# 
   414     0295                     	;# 
   415     0295                     	;# 
   416     0296                     	;# 
   417     0394                     	;# 
   418     0395                     	;# 
   419     0396                     	;# 
   420     039A                     	;# 
   421     039C                     	;# 
   422     039D                     	;# 
   423     039E                     	;# 
   424     039F                     	;# 
   425     0FE4                     	;# 
   426     0FE5                     	;# 
   427     0FE6                     	;# 
   428     0FE7                     	;# 
   429     0FE8                     	;# 
   430     0FE9                     	;# 
   431     0FEA                     	;# 
   432     0FEB                     	;# 
   433     0FED                     	;# 
   434     0FEE                     	;# 
   435     0FEF                     	;# 
   436     0000                     	;# 
   437     0001                     	;# 
   438     0002                     	;# 
   439     0003                     	;# 
   440     0004                     	;# 
   441     0005                     	;# 
   442     0006                     	;# 
   443     0007                     	;# 
   444     0008                     	;# 
   445     0009                     	;# 
   446     000A                     	;# 
   447     000B                     	;# 
   448     000C                     	;# 
   449     000D                     	;# 
   450     0011                     	;# 
   451     0012                     	;# 
   452     0015                     	;# 
   453     0016                     	;# 
   454     0016                     	;# 
   455     0017                     	;# 
   456     0018                     	;# 
   457     0019                     	;# 
   458     001A                     	;# 
   459     001B                     	;# 
   460     001C                     	;# 
   461     001E                     	;# 
   462     001F                     	;# 
   463     008C                     	;# 
   464     008D                     	;# 
   465     0091                     	;# 
   466     0092                     	;# 
   467     0095                     	;# 
   468     0096                     	;# 
   469     0097                     	;# 
   470     0098                     	;# 
   471     0099                     	;# 
   472     009A                     	;# 
   473     009B                     	;# 
   474     009B                     	;# 
   475     009C                     	;# 
   476     009D                     	;# 
   477     009E                     	;# 
   478     010C                     	;# 
   479     010D                     	;# 
   480     0111                     	;# 
   481     0112                     	;# 
   482     0113                     	;# 
   483     0114                     	;# 
   484     0115                     	;# 
   485     0116                     	;# 
   486     0117                     	;# 
   487     0118                     	;# 
   488     0119                     	;# 
   489     011A                     	;# 
   490     011B                     	;# 
   491     011D                     	;# 
   492     011E                     	;# 
   493     018C                     	;# 
   494     018D                     	;# 
   495     0191                     	;# 
   496     0191                     	;# 
   497     0192                     	;# 
   498     0193                     	;# 
   499     0193                     	;# 
   500     0193                     	;# 
   501     0194                     	;# 
   502     0195                     	;# 
   503     0196                     	;# 
   504     0199                     	;# 
   505     019A                     	;# 
   506     019B                     	;# 
   507     019B                     	;# 
   508     019B                     	;# 
   509     019B                     	;# 
   510     019C                     	;# 
   511     019C                     	;# 
   512     019D                     	;# 
   513     019E                     	;# 
   514     019F                     	;# 
   515     020C                     	;# 
   516     020D                     	;# 
   517     0211                     	;# 
   518     0211                     	;# 
   519     0212                     	;# 
   520     0212                     	;# 
   521     0213                     	;# 
   522     0213                     	;# 
   523     0214                     	;# 
   524     0214                     	;# 
   525     0215                     	;# 
   526     0215                     	;# 
   527     0215                     	;# 
   528     0216                     	;# 
   529     0216                     	;# 
   530     0217                     	;# 
   531     0217                     	;# 
   532     0291                     	;# 
   533     0291                     	;# 
   534     0292                     	;# 
   535     0293                     	;# 
   536     0294                     	;# 
   537     0295                     	;# 
   538     0295                     	;# 
   539     0296                     	;# 
   540     0394                     	;# 
   541     0395                     	;# 
   542     0396                     	;# 
   543     039A                     	;# 
   544     039C                     	;# 
   545     039D                     	;# 
   546     039E                     	;# 
   547     039F                     	;# 
   548     0FE4                     	;# 
   549     0FE5                     	;# 
   550     0FE6                     	;# 
   551     0FE7                     	;# 
   552     0FE8                     	;# 
   553     0FE9                     	;# 
   554     0FEA                     	;# 
   555     0FEB                     	;# 
   556     0FED                     	;# 
   557     0FEE                     	;# 
   558     0FEF                     	;# 
   559     0000                     	;# 
   560     0001                     	;# 
   561     0002                     	;# 
   562     0003                     	;# 
   563     0004                     	;# 
   564     0005                     	;# 
   565     0006                     	;# 
   566     0007                     	;# 
   567     0008                     	;# 
   568     0009                     	;# 
   569     000A                     	;# 
   570     000B                     	;# 
   571     000C                     	;# 
   572     000D                     	;# 
   573     0011                     	;# 
   574     0012                     	;# 
   575     0015                     	;# 
   576     0016                     	;# 
   577     0016                     	;# 
   578     0017                     	;# 
   579     0018                     	;# 
   580     0019                     	;# 
   581     001A                     	;# 
   582     001B                     	;# 
   583     001C                     	;# 
   584     001E                     	;# 
   585     001F                     	;# 
   586     008C                     	;# 
   587     008D                     	;# 
   588     0091                     	;# 
   589     0092                     	;# 
   590     0095                     	;# 
   591     0096                     	;# 
   592     0097                     	;# 
   593     0098                     	;# 
   594     0099                     	;# 
   595     009A                     	;# 
   596     009B                     	;# 
   597     009B                     	;# 
   598     009C                     	;# 
   599     009D                     	;# 
   600     009E                     	;# 
   601     010C                     	;# 
   602     010D                     	;# 
   603     0111                     	;# 
   604     0112                     	;# 
   605     0113                     	;# 
   606     0114                     	;# 
   607     0115                     	;# 
   608     0116                     	;# 
   609     0117                     	;# 
   610     0118                     	;# 
   611     0119                     	;# 
   612     011A                     	;# 
   613     011B                     	;# 
   614     011D                     	;# 
   615     011E                     	;# 
   616     018C                     	;# 
   617     018D                     	;# 
   618     0191                     	;# 
   619     0191                     	;# 
   620     0192                     	;# 
   621     0193                     	;# 
   622     0193                     	;# 
   623     0193                     	;# 
   624     0194                     	;# 
   625     0195                     	;# 
   626     0196                     	;# 
   627     0199                     	;# 
   628     019A                     	;# 
   629     019B                     	;# 
   630     019B                     	;# 
   631     019B                     	;# 
   632     019B                     	;# 
   633     019C                     	;# 
   634     019C                     	;# 
   635     019D                     	;# 
   636     019E                     	;# 
   637     019F                     	;# 
   638     020C                     	;# 
   639     020D                     	;# 
   640     0211                     	;# 
   641     0211                     	;# 
   642     0212                     	;# 
   643     0212                     	;# 
   644     0213                     	;# 
   645     0213                     	;# 
   646     0214                     	;# 
   647     0214                     	;# 
   648     0215                     	;# 
   649     0215                     	;# 
   650     0215                     	;# 
   651     0216                     	;# 
   652     0216                     	;# 
   653     0217                     	;# 
   654     0217                     	;# 
   655     0291                     	;# 
   656     0291                     	;# 
   657     0292                     	;# 
   658     0293                     	;# 
   659     0294                     	;# 
   660     0295                     	;# 
   661     0295                     	;# 
   662     0296                     	;# 
   663     0394                     	;# 
   664     0395                     	;# 
   665     0396                     	;# 
   666     039A                     	;# 
   667     039C                     	;# 
   668     039D                     	;# 
   669     039E                     	;# 
   670     039F                     	;# 
   671     0FE4                     	;# 
   672     0FE5                     	;# 
   673     0FE6                     	;# 
   674     0FE7                     	;# 
   675     0FE8                     	;# 
   676     0FE9                     	;# 
   677     0FEA                     	;# 
   678     0FEB                     	;# 
   679     0FED                     	;# 
   680     0FEE                     	;# 
   681     0FEF                     	;# 
   682     0000                     	;# 
   683     0001                     	;# 
   684     0002                     	;# 
   685     0003                     	;# 
   686     0004                     	;# 
   687     0005                     	;# 
   688     0006                     	;# 
   689     0007                     	;# 
   690     0008                     	;# 
   691     0009                     	;# 
   692     000A                     	;# 
   693     000B                     	;# 
   694     000C                     	;# 
   695     000D                     	;# 
   696     0011                     	;# 
   697     0012                     	;# 
   698     0015                     	;# 
   699     0016                     	;# 
   700     0016                     	;# 
   701     0017                     	;# 
   702     0018                     	;# 
   703     0019                     	;# 
   704     001A                     	;# 
   705     001B                     	;# 
   706     001C                     	;# 
   707     001E                     	;# 
   708     001F                     	;# 
   709     008C                     	;# 
   710     008D                     	;# 
   711     0091                     	;# 
   712     0092                     	;# 
   713     0095                     	;# 
   714     0096                     	;# 
   715     0097                     	;# 
   716     0098                     	;# 
   717     0099                     	;# 
   718     009A                     	;# 
   719     009B                     	;# 
   720     009B                     	;# 
   721     009C                     	;# 
   722     009D                     	;# 
   723     009E                     	;# 
   724     010C                     	;# 
   725     010D                     	;# 
   726     0111                     	;# 
   727     0112                     	;# 
   728     0113                     	;# 
   729     0114                     	;# 
   730     0115                     	;# 
   731     0116                     	;# 
   732     0117                     	;# 
   733     0118                     	;# 
   734     0119                     	;# 
   735     011A                     	;# 
   736     011B                     	;# 
   737     011D                     	;# 
   738     011E                     	;# 
   739     018C                     	;# 
   740     018D                     	;# 
   741     0191                     	;# 
   742     0191                     	;# 
   743     0192                     	;# 
   744     0193                     	;# 
   745     0193                     	;# 
   746     0193                     	;# 
   747     0194                     	;# 
   748     0195                     	;# 
   749     0196                     	;# 
   750     0199                     	;# 
   751     019A                     	;# 
   752     019B                     	;# 
   753     019B                     	;# 
   754     019B                     	;# 
   755     019B                     	;# 
   756     019C                     	;# 
   757     019C                     	;# 
   758     019D                     	;# 
   759     019E                     	;# 
   760     019F                     	;# 
   761     020C                     	;# 
   762     020D                     	;# 
   763     0211                     	;# 
   764     0211                     	;# 
   765     0212                     	;# 
   766     0212                     	;# 
   767     0213                     	;# 
   768     0213                     	;# 
   769     0214                     	;# 
   770     0214                     	;# 
   771     0215                     	;# 
   772     0215                     	;# 
   773     0215                     	;# 
   774     0216                     	;# 
   775     0216                     	;# 
   776     0217                     	;# 
   777     0217                     	;# 
   778     0291                     	;# 
   779     0291                     	;# 
   780     0292                     	;# 
   781     0293                     	;# 
   782     0294                     	;# 
   783     0295                     	;# 
   784     0295                     	;# 
   785     0296                     	;# 
   786     0394                     	;# 
   787     0395                     	;# 
   788     0396                     	;# 
   789     039A                     	;# 
   790     039C                     	;# 
   791     039D                     	;# 
   792     039E                     	;# 
   793     039F                     	;# 
   794     0FE4                     	;# 
   795     0FE5                     	;# 
   796     0FE6                     	;# 
   797     0FE7                     	;# 
   798     0FE8                     	;# 
   799     0FE9                     	;# 
   800     0FEA                     	;# 
   801     0FEB                     	;# 
   802     0FED                     	;# 
   803     0FEE                     	;# 
   804     0FEF                     	;# 
   805                           
   806 ;; Function _TMR1_DefaultInterruptHandler is unused but had its address taken
   807     0000                     
   808 ;; Function _EUSART_Receive_ISR is unused but had its address taken
   809     0000                     
   810 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
   811     0000                     
   812 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
   813     0000                     
   814 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
   815     0000                     
   816                           	psect	idataBANK0
   817     0732                     __pidataBANK0:
   818                           
   819                           ;initializer for _HChar
   820     0732  3401               	retlw	1
   821     0733  3400               	retlw	0
   822     0734  3401               	retlw	1
   823     0735  3401               	retlw	1
   824     0736  3401               	retlw	1
   825     0737  3401               	retlw	1
   826     0738  3401               	retlw	1
   827     0739  3400               	retlw	0
   828     073A  3401               	retlw	1
   829                           
   830                           ;initializer for _LChar
   831     073B  3401               	retlw	1
   832     073C  3400               	retlw	0
   833     073D  3400               	retlw	0
   834     073E  3401               	retlw	1
   835     073F  3400               	retlw	0
   836     0740  3400               	retlw	0
   837     0741  3401               	retlw	1
   838     0742  3401               	retlw	1
   839     0743  3401               	retlw	1
   840                           
   841                           ;initializer for _IChar
   842     0744  3401               	retlw	1
   843     0745  3401               	retlw	1
   844     0746  3401               	retlw	1
   845     0747  3400               	retlw	0
   846     0748  3401               	retlw	1
   847     0749  3400               	retlw	0
   848     074A  3401               	retlw	1
   849     074B  3401               	retlw	1
   850     074C  3401               	retlw	1
   851                           
   852                           ;initializer for _CChar
   853     074D  3401               	retlw	1
   854     074E  3401               	retlw	1
   855     074F  3401               	retlw	1
   856     0750  3401               	retlw	1
   857     0751  3400               	retlw	0
   858     0752  3400               	retlw	0
   859     0753  3401               	retlw	1
   860     0754  3401               	retlw	1
   861     0755  3401               	retlw	1
   862                           
   863                           ;initializer for _rows
   864     0756  3403               	retlw	3
   865                           
   866                           ;initializer for _TChar
   867     0757  3401               	retlw	1
   868     0758  3401               	retlw	1
   869     0759  3401               	retlw	1
   870     075A  3400               	retlw	0
   871     075B  3401               	retlw	1
   872     075C  3400               	retlw	0
   873     075D  3400               	retlw	0
   874     075E  3401               	retlw	1
   875     075F  3400               	retlw	0
   876                           
   877                           	psect	nvBANK0
   878     0066                     __pnvBANK0:
   879     0066                     _EUSART_ErrorHandler:
   880     0066                     	ds	2
   881     0068                     _EUSART_OverrunErrorHandler:
   882     0068                     	ds	2
   883     006A                     _EUSART_FramingErrorHandler:
   884     006A                     	ds	2
   885     006C                     _TMR1_InterruptHandler:
   886     006C                     	ds	2
   887     006E                     _EUSART_RxDefaultInterruptHandler:
   888     006E                     	ds	2
   889     000B                     _INTCONbits	set	11
   890     0018                     _T1CONbits	set	24
   891     0018                     _T1CON	set	24
   892     0011                     _PIR1bits	set	17
   893     0016                     _TMR1L	set	22
   894     0017                     _TMR1H	set	23
   895     0019                     _T1GCON	set	25
   896     0091                     _PIE1bits	set	145
   897     0097                     _WDTCON	set	151
   898     0098                     _OSCTUNE	set	152
   899     0099                     _OSCCON	set	153
   900     0095                     _OPTION_REGbits	set	149
   901     008D                     _TRISB	set	141
   902     008C                     _TRISA	set	140
   903     010C                     _LATAbits	set	268
   904     0116                     _BORCON	set	278
   905     011E                     _APFCON1	set	286
   906     011D                     _APFCON0	set	285
   907     010D                     _LATB	set	269
   908     010C                     _LATA	set	268
   909     0199                     _RCREG	set	409
   910     019A                     _TXREG	set	410
   911     019D                     _RCSTAbits	set	413
   912     019E                     _TXSTAbits	set	414
   913     019C                     _SPBRGH	set	412
   914     019B                     _SPBRGL	set	411
   915     019E                     _TXSTA	set	414
   916     019D                     _RCSTA	set	413
   917     019F                     _BAUDCON	set	415
   918     018C                     _ANSELA	set	396
   919     018D                     _ANSELB	set	397
   920     020C                     _WPUA	set	524
   921     020D                     _WPUB	set	525
   922                           
   923                           	psect	cinit
   924     07EC                     start_initialization:	
   925                           ; #config settings
   926                           
   927     07EC                     __initialization:
   928                           
   929                           ; Initialize objects allocated to BANK0
   930     07EC  3032               	movlw	low __pidataBANK0
   931     07ED  0084               	movwf	4
   932     07EE  3087               	movlw	(high __pidataBANK0)| (0+128)
   933     07EF  0085               	movwf	5
   934     07F0  3020               	movlw	low __pdataBANK0
   935     07F1  0086               	movwf	6
   936     07F2  3000               	movlw	high __pdataBANK0
   937     07F3  0087               	movwf	7
   938     07F4  302E               	movlw	46
   939     07F5  26A1               	fcall	init_ram
   940                           
   941                           ; Clear objects allocated to COMMON
   942     07F6  01FC               	clrf	__pbssCOMMON& (0+127)
   943     07F7  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   944                           
   945                           ; Clear objects allocated to BANK0
   946     07F8  304E               	movlw	low __pbssBANK0
   947     07F9  0084               	movwf	4
   948     07FA  3000               	movlw	high __pbssBANK0
   949     07FB  0085               	movwf	5
   950     07FC  3018               	movlw	24
   951     07FD  269B               	fcall	clear_ram0
   952     07FE                     end_of_initialization:	
   953                           ;End of C runtime variable initialization code
   954                           
   955     07FE                     __end_of__initialization:
   956     07FE  0020               	movlb	0
   957     07FF  2F60               	ljmp	_main	;jump to C main() function
   958                           
   959                           	psect	bssCOMMON
   960     007C                     __pbssCOMMON:
   961     007C                     _AccessLine:
   962     007C                     	ds	1
   963     007D                     _NewDataFlag:
   964     007D                     	ds	1
   965                           
   966                           	psect	bssBANK0
   967     004E                     __pbssBANK0:
   968     004E                     _eusartRxStatusBuffer:
   969     004E                     	ds	8
   970     0056                     _eusartRxBuffer:
   971     0056                     	ds	8
   972     005E                     _timer1ReloadVal:
   973     005E                     	ds	2
   974     0060                     _column:
   975     0060                     	ds	1
   976     0061                     _ColData:
   977     0061                     	ds	1
   978     0062                     _eusartRxLastError:
   979     0062                     	ds	1
   980     0063                     _eusartRxCount:
   981     0063                     	ds	1
   982     0064                     _eusartRxTail:
   983     0064                     	ds	1
   984     0065                     _eusartRxHead:
   985     0065                     	ds	1
   986                           
   987                           	psect	dataBANK0
   988     0020                     __pdataBANK0:
   989     0020                     _HChar:
   990     0020                     	ds	9
   991     0029                     _LChar:
   992     0029                     	ds	9
   993     0032                     _IChar:
   994     0032                     	ds	9
   995     003B                     _CChar:
   996     003B                     	ds	9
   997     0044                     _rows:
   998     0044                     	ds	1
   999     0045                     _TChar:
  1000     0045                     	ds	9
  1001                           
  1002                           	psect	inittext
  1003     06A1                     init_ram:
  1004     06A1  00FE               	movwf	126
  1005     06A2                     initloop:
  1006     06A2  0012               	moviw fsr0++
  1007     06A3  001E               	movwi fsr1++
  1008     06A4  0BFE               	decfsz	126,f
  1009     06A5  2EA2               	goto	initloop
  1010     06A6  3400               	retlw	0
  1011                           
  1012                           	psect	clrtext
  1013     069B                     clear_ram0:	
  1014                           ;	Called with FSR0 containing the base address, and
  1015                           ;	WREG with the size to clear
  1016                           
  1017     069B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1018     069C                     clrloop0:
  1019     069C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1020     069D  3101               	addfsr 0,1
  1021     069E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1022     069F  2E9C               	goto	clrloop0	;have we reached the end yet?
  1023     06A0  3400               	retlw	0	;all done for this memory range, return
  1024                           
  1025                           	psect	cstackCOMMON
  1026     0070                     __pcstackCOMMON:
  1027     0070                     ?_OSCILLATOR_Initialize:
  1028     0070                     ??_OSCILLATOR_Initialize:	
  1029                           ; 1 bytes @ 0x0
  1030                           
  1031     0070                     ?_WDT_Initialize:	
  1032                           ; 1 bytes @ 0x0
  1033                           
  1034     0070                     ??_WDT_Initialize:	
  1035                           ; 1 bytes @ 0x0
  1036                           
  1037     0070                     ?_TMR1_Initialize:	
  1038                           ; 1 bytes @ 0x0
  1039                           
  1040     0070                     ?_EUSART_Initialize:	
  1041                           ; 1 bytes @ 0x0
  1042                           
  1043     0070                     ?_TMR1_SetInterruptHandler:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046     0070                     ?_EUSART_SetRxInterruptHandler:	
  1047                           ; 1 bytes @ 0x0
  1048                           
  1049     0070                     ?_EUSART_SetFramingErrorHandler:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052     0070                     ?_EUSART_SetOverrunErrorHandler:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055     0070                     ?_EUSART_SetErrorHandler:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058     0070                     ?_PIN_MANAGER_Initialize:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061     0070                     ??_PIN_MANAGER_Initialize:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064     0070                     ?_SYSTEM_Initialize:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067     0070                     ?_TMR1_StartTimer:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070     0070                     ??_TMR1_StartTimer:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073     0070                     ?_EUSART_is_tx_done:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076     0070                     ??_EUSART_is_tx_done:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079     0070                     ?_EUSART_Write:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082     0070                     ??_EUSART_Write:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085     0070                     ?_main:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088     0070                     ?___bmul:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091     0070                     EUSART_Write@txData:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094     0070                     ___bmul@multiplicand:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097     0070                     TMR1_SetInterruptHandler@InterruptHandler:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1101                           ; 2 bytes @ 0x0
  1102                           
  1103     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1104                           ; 2 bytes @ 0x0
  1105                           
  1106     0070                     EUSART_SetErrorHandler@interruptHandler:	
  1107                           ; 2 bytes @ 0x0
  1108                           
  1109     0070                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1110                           ; 2 bytes @ 0x0
  1111                           
  1112                           
  1113                           ; 2 bytes @ 0x0
  1114     0070                     	ds	1
  1115     0071                     ??___bmul:
  1116                           
  1117                           ; 1 bytes @ 0x1
  1118     0071                     	ds	1
  1119     0072                     ??_TMR1_Initialize:
  1120     0072                     ??_EUSART_Initialize:	
  1121                           ; 1 bytes @ 0x2
  1122                           
  1123     0072                     ??_TMR1_SetInterruptHandler:	
  1124                           ; 1 bytes @ 0x2
  1125                           
  1126     0072                     ??_EUSART_SetRxInterruptHandler:	
  1127                           ; 1 bytes @ 0x2
  1128                           
  1129     0072                     ??_EUSART_SetFramingErrorHandler:	
  1130                           ; 1 bytes @ 0x2
  1131                           
  1132     0072                     ??_EUSART_SetOverrunErrorHandler:	
  1133                           ; 1 bytes @ 0x2
  1134                           
  1135     0072                     ??_EUSART_SetErrorHandler:	
  1136                           ; 1 bytes @ 0x2
  1137                           
  1138     0072                     ??_SYSTEM_Initialize:	
  1139                           ; 1 bytes @ 0x2
  1140                           
  1141     0072                     ___bmul@product:	
  1142                           ; 1 bytes @ 0x2
  1143                           
  1144                           
  1145                           ; 1 bytes @ 0x2
  1146     0072                     	ds	1
  1147     0073                     ___bmul@multiplier:
  1148                           
  1149                           ; 1 bytes @ 0x3
  1150     0073                     	ds	1
  1151     0074                     ?_GrabCol:
  1152     0074                     GrabCol@rows:	
  1153                           ; 1 bytes @ 0x4
  1154                           
  1155                           
  1156                           ; 2 bytes @ 0x4
  1157     0074                     	ds	2
  1158     0076                     GrabCol@column:
  1159                           
  1160                           ; 1 bytes @ 0x6
  1161     0076                     	ds	1
  1162     0077                     GrabCol@matrix:
  1163                           
  1164                           ; 1 bytes @ 0x7
  1165     0077                     	ds	1
  1166     0078                     GrabCol@ColData:
  1167                           
  1168                           ; 1 bytes @ 0x8
  1169     0078                     	ds	1
  1170     0079                     ??_GrabCol:
  1171                           
  1172                           ; 1 bytes @ 0x9
  1173     0079                     	ds	2
  1174     007B                     GrabCol@i:
  1175                           
  1176                           ; 1 bytes @ 0xB
  1177     007B                     	ds	1
  1178     007C                     ??_main:
  1179                           
  1180                           	psect	maintext
  1181     0760                     __pmaintext:	
  1182                           ; 1 bytes @ 0xC
  1183 ;;
  1184 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1185 ;;
  1186 ;; *************** function _main *****************
  1187 ;; Defined at:
  1188 ;;		line 92 in file "main.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;		None
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : B1F/0
  1199 ;;		On exit  : 1D/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1202 ;;      Params:         0       0       0       0
  1203 ;;      Locals:         0       0       0       0
  1204 ;;      Temps:          0       0       0       0
  1205 ;;      Totals:         0       0       0       0
  1206 ;;Total ram usage:        0 bytes
  1207 ;; Hardware stack levels required when called: 3
  1208 ;; This function calls:
  1209 ;;		_EUSART_Initialize
  1210 ;;		_EUSART_Write
  1211 ;;		_EUSART_is_tx_done
  1212 ;;		_GrabCol
  1213 ;;		_SYSTEM_Initialize
  1214 ;;		_TMR1_Initialize
  1215 ;;		_TMR1_StartTimer
  1216 ;; This function is called by:
  1217 ;;		Startup code after reset
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221     0760                     _main:	
  1222                           ;psect for function _main
  1223                           
  1224                           
  1225                           ;main.c: 94:     SYSTEM_Initialize();
  1226                           
  1227                           ;incstack = 0
  1228                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1229     0760  2695               	fcall	_SYSTEM_Initialize
  1230                           
  1231                           ;main.c: 96:     EUSART_Initialize();
  1232     0761  270B               	fcall	_EUSART_Initialize
  1233                           
  1234                           ;main.c: 98:     TMR1_Initialize();
  1235     0762  26CA               	fcall	_TMR1_Initialize
  1236                           
  1237                           ;main.c: 104:     (INTCONbits.GIE = 1);
  1238     0763  178B               	bsf	11,7	;volatile
  1239                           
  1240                           ;main.c: 107:     (INTCONbits.PEIE = 1);
  1241     0764  170B               	bsf	11,6	;volatile
  1242                           
  1243                           ;main.c: 116:     TMR1_StartTimer();
  1244     0765  266F               	fcall	_TMR1_StartTimer
  1245     0766                     l1317:
  1246                           
  1247                           ;main.c: 119:         if(NewDataFlag == 1){
  1248     0766  037D               	decf	_NewDataFlag,w
  1249     0767  1903               	btfsc	3,2
  1250     0768  2FDA               	goto	l1357
  1251     0769  2F66               	goto	l1317
  1252     076A                     l297:	
  1253                           ;main.c: 124:                     do { LATAbits.LATA4 = 1; } while(0);
  1254                           
  1255     076A  0022               	movlb	2	; select bank2
  1256     076B  160C               	bsf	12,4	;volatile
  1257                           
  1258                           ;main.c: 125:                     do { LATAbits.LATA2 = 1; } while(0);
  1259     076C  150C               	bsf	12,2	;volatile
  1260                           
  1261                           ;main.c: 127:                     AccessLine = 0b10000000;
  1262     076D  3080               	movlw	128
  1263     076E  00FC               	movwf	_AccessLine
  1264                           
  1265                           ;main.c: 128:                     GrabCol(rows, column, TChar, ColData);
  1266     076F  3003               	movlw	3
  1267     0770  00F4               	movwf	GrabCol@rows
  1268     0771  3000               	movlw	0
  1269     0772  00F5               	movwf	GrabCol@rows+1
  1270     0773  01F6               	clrf	GrabCol@column
  1271     0774  3045               	movlw	(low (_TChar| 0))& (0+255)
  1272     0775  00F7               	movwf	GrabCol@matrix
  1273     0776  01F8               	clrf	GrabCol@ColData
  1274     0777  26DF               	fcall	_GrabCol
  1275                           
  1276                           ;main.c: 129:                     EUSART_Write(AccessLine);
  1277     0778  3080               	movlw	128
  1278     0779  26AE               	fcall	_EUSART_Write
  1279     077A                     l1327:	
  1280                           ;main.c: 130:                     while(!EUSART_is_tx_done());
  1281                           
  1282     077A  2671               	fcall	_EUSART_is_tx_done
  1283     077B  3A00               	xorlw	0
  1284     077C  1903               	skipnz
  1285     077D  2F7A               	goto	l1327
  1286                           
  1287                           ;main.c: 131:                     EUSART_Write(ColData);
  1288     077E  3000               	movlw	0
  1289     077F  26AE               	fcall	_EUSART_Write
  1290     0780                     l1331:	
  1291                           ;main.c: 132:                     while(!EUSART_is_tx_done());
  1292                           
  1293     0780  2671               	fcall	_EUSART_is_tx_done
  1294     0781  3A00               	xorlw	0
  1295     0782  1903               	skipnz
  1296     0783  2F80               	goto	l1331
  1297                           
  1298                           ;main.c: 134:                     do { LATAbits.LATA1 = 1; } while(0);
  1299     0784  0022               	movlb	2	; select bank2
  1300     0785  148C               	bsf	12,1	;volatile
  1301                           
  1302                           ;main.c: 135:                     do { LATAbits.LATA3 = 0; } while(0);
  1303     0786  118C               	bcf	12,3	;volatile
  1304                           
  1305                           ;main.c: 136:                     _delay((unsigned long)((100)*(250000/4000000.0)));
  1306     0787  3200               	nop2	;2 cycle nop
  1307     0788  3200               	nop2	;2 cycle nop
  1308     0789  3200               	nop2	;2 cycle nop
  1309                           
  1310                           ;main.c: 138:                     do { LATAbits.LATA1 = 0; } while(0);
  1311     078A  0022               	movlb	2	; select bank2
  1312     078B  108C               	bcf	12,1	;volatile
  1313                           
  1314                           ;main.c: 139:                     do { LATAbits.LATA3 = 1; } while(0);
  1315     078C  158C               	bsf	12,3	;volatile
  1316                           
  1317                           ;main.c: 141:                     do { LATAbits.LATA4 = 0; } while(0);
  1318     078D  120C               	bcf	12,4	;volatile
  1319                           
  1320                           ;main.c: 142:                     do { LATAbits.LATA2 = 0; } while(0);
  1321     078E  110C               	bcf	12,2	;volatile
  1322     078F                     l320:	
  1323                           ;main.c: 145:                     do { LATAbits.LATA4 = 1; } while(0);
  1324                           
  1325     078F  0022               	movlb	2	; select bank2
  1326     0790  160C               	bsf	12,4	;volatile
  1327                           
  1328                           ;main.c: 146:                     do { LATAbits.LATA2 = 1; } while(0);
  1329     0791  150C               	bsf	12,2	;volatile
  1330                           
  1331                           ;main.c: 148:                     AccessLine = 0b01000000;
  1332     0792  3040               	movlw	64
  1333     0793  00FC               	movwf	_AccessLine
  1334                           
  1335                           ;main.c: 149:                     GrabCol(rows, column, TChar, ColData);
  1336     0794  3003               	movlw	3
  1337     0795  00F4               	movwf	GrabCol@rows
  1338     0796  3000               	movlw	0
  1339     0797  00F5               	movwf	GrabCol@rows+1
  1340     0798  01F6               	clrf	GrabCol@column
  1341     0799  3045               	movlw	(low (_TChar| 0))& (0+255)
  1342     079A  00F7               	movwf	GrabCol@matrix
  1343     079B  01F8               	clrf	GrabCol@ColData
  1344     079C  26DF               	fcall	_GrabCol
  1345                           
  1346                           ;main.c: 150:                     EUSART_Write(AccessLine);
  1347     079D  3040               	movlw	64
  1348     079E  26AE               	fcall	_EUSART_Write
  1349     079F                     l1339:	
  1350                           ;main.c: 151:                     while(!EUSART_is_tx_done());
  1351                           
  1352     079F  2671               	fcall	_EUSART_is_tx_done
  1353     07A0  3A00               	xorlw	0
  1354     07A1  1903               	skipnz
  1355     07A2  2F9F               	goto	l1339
  1356                           
  1357                           ;main.c: 152:                     EUSART_Write(ColData);
  1358     07A3  3000               	movlw	0
  1359     07A4  26AE               	fcall	_EUSART_Write
  1360     07A5                     l1343:	
  1361                           ;main.c: 153:                     while(!EUSART_is_tx_done());
  1362                           
  1363     07A5  2671               	fcall	_EUSART_is_tx_done
  1364     07A6  3A00               	xorlw	0
  1365     07A7  1903               	skipnz
  1366     07A8  2FA5               	goto	l1343
  1367                           
  1368                           ;main.c: 155:                     do { LATAbits.LATA1 = 1; } while(0);
  1369     07A9  0022               	movlb	2	; select bank2
  1370     07AA  148C               	bsf	12,1	;volatile
  1371                           
  1372                           ;main.c: 156:                     do { LATAbits.LATA3 = 0; } while(0);
  1373     07AB  118C               	bcf	12,3	;volatile
  1374                           
  1375                           ;main.c: 157:                     _delay((unsigned long)((100)*(250000/4000000.0)));
  1376     07AC  3200               	nop2	;2 cycle nop
  1377     07AD  3200               	nop2	;2 cycle nop
  1378     07AE  3200               	nop2	;2 cycle nop
  1379                           
  1380                           ;main.c: 159:                     do { LATAbits.LATA1 = 0; } while(0);
  1381     07AF  0022               	movlb	2	; select bank2
  1382     07B0  108C               	bcf	12,1	;volatile
  1383                           
  1384                           ;main.c: 160:                     do { LATAbits.LATA3 = 1; } while(0);
  1385     07B1  158C               	bsf	12,3	;volatile
  1386                           
  1387                           ;main.c: 162:                     do { LATAbits.LATA4 = 0; } while(0);
  1388     07B2  120C               	bcf	12,4	;volatile
  1389                           
  1390                           ;main.c: 163:                     do { LATAbits.LATA2 = 0; } while(0);
  1391     07B3  110C               	bcf	12,2	;volatile
  1392     07B4                     l343:	
  1393                           ;main.c: 166:                     do { LATAbits.LATA4 = 1; } while(0);
  1394                           
  1395     07B4  0022               	movlb	2	; select bank2
  1396     07B5  160C               	bsf	12,4	;volatile
  1397                           
  1398                           ;main.c: 167:                     do { LATAbits.LATA2 = 1; } while(0);
  1399     07B6  150C               	bsf	12,2	;volatile
  1400                           
  1401                           ;main.c: 169:                     AccessLine = 0b00100000;
  1402     07B7  3020               	movlw	32
  1403     07B8  00FC               	movwf	_AccessLine
  1404                           
  1405                           ;main.c: 170:                     GrabCol(rows, column, TChar, ColData);
  1406     07B9  3003               	movlw	3
  1407     07BA  00F4               	movwf	GrabCol@rows
  1408     07BB  3000               	movlw	0
  1409     07BC  00F5               	movwf	GrabCol@rows+1
  1410     07BD  01F6               	clrf	GrabCol@column
  1411     07BE  3045               	movlw	(low (_TChar| 0))& (0+255)
  1412     07BF  00F7               	movwf	GrabCol@matrix
  1413     07C0  01F8               	clrf	GrabCol@ColData
  1414     07C1  26DF               	fcall	_GrabCol
  1415                           
  1416                           ;main.c: 171:                     EUSART_Write(AccessLine);
  1417     07C2  3020               	movlw	32
  1418     07C3  26AE               	fcall	_EUSART_Write
  1419     07C4                     l1351:	
  1420                           ;main.c: 172:                     while(!EUSART_is_tx_done());
  1421                           
  1422     07C4  2671               	fcall	_EUSART_is_tx_done
  1423     07C5  3A00               	xorlw	0
  1424     07C6  1903               	skipnz
  1425     07C7  2FC4               	goto	l1351
  1426                           
  1427                           ;main.c: 173:                     EUSART_Write(ColData);
  1428     07C8  3000               	movlw	0
  1429     07C9  26AE               	fcall	_EUSART_Write
  1430     07CA                     l1355:	
  1431                           ;main.c: 174:                     while(!EUSART_is_tx_done());
  1432                           
  1433     07CA  2671               	fcall	_EUSART_is_tx_done
  1434     07CB  3A00               	xorlw	0
  1435     07CC  1903               	skipnz
  1436     07CD  2FCA               	goto	l1355
  1437                           
  1438                           ;main.c: 176:                     do { LATAbits.LATA1 = 1; } while(0);
  1439     07CE  0022               	movlb	2	; select bank2
  1440     07CF  148C               	bsf	12,1	;volatile
  1441                           
  1442                           ;main.c: 177:                     do { LATAbits.LATA3 = 0; } while(0);
  1443     07D0  118C               	bcf	12,3	;volatile
  1444                           
  1445                           ;main.c: 178:                     _delay((unsigned long)((100)*(250000/4000000.0)));
  1446     07D1  3200               	nop2	;2 cycle nop
  1447     07D2  3200               	nop2	;2 cycle nop
  1448     07D3  3200               	nop2	;2 cycle nop
  1449                           
  1450                           ;main.c: 180:                     do { LATAbits.LATA1 = 0; } while(0);
  1451     07D4  0022               	movlb	2	; select bank2
  1452     07D5  108C               	bcf	12,1	;volatile
  1453                           
  1454                           ;main.c: 181:                     do { LATAbits.LATA3 = 1; } while(0);
  1455     07D6  158C               	bsf	12,3	;volatile
  1456                           
  1457                           ;main.c: 183:                     do { LATAbits.LATA4 = 0; } while(0);
  1458     07D7  120C               	bcf	12,4	;volatile
  1459                           
  1460                           ;main.c: 184:                     do { LATAbits.LATA2 = 0; } while(0);
  1461     07D8  110C               	bcf	12,2	;volatile
  1462     07D9  2FEA               	goto	l1359
  1463     07DA                     l1357:
  1464                           
  1465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1466                           ; Switch size 1, requested type "simple"
  1467                           ; Number of cases is 1, Range of values is 0 to 0
  1468                           ; switch strategies available:
  1469                           ; Name         Instructions Cycles
  1470                           ; simple_byte            4     3 (average)
  1471                           ; direct_byte            8     6 (fixed)
  1472                           ; jumptable            260     6 (fixed)
  1473                           ;	Chosen strategy is simple_byte
  1474     07DA  3000               	movlw	0
  1475     07DB  3A00               	xorlw	0	; case 0
  1476     07DC  1903               	skipnz
  1477     07DD  2FDF               	goto	l1397
  1478     07DE  2FEA               	goto	l1359
  1479     07DF                     l1397:
  1480                           
  1481                           ; Switch size 1, requested type "simple"
  1482                           ; Number of cases is 3, Range of values is 0 to 2
  1483                           ; switch strategies available:
  1484                           ; Name         Instructions Cycles
  1485                           ; simple_byte           10     6 (average)
  1486                           ; direct_byte           12     6 (fixed)
  1487                           ; jumptable            260     6 (fixed)
  1488                           ;	Chosen strategy is simple_byte
  1489     07DF  3000               	movlw	0
  1490     07E0  3A00               	xorlw	0	; case 0
  1491     07E1  1903               	skipnz
  1492     07E2  2F6A               	goto	l297
  1493     07E3  3A01               	xorlw	1	; case 1
  1494     07E4  1903               	skipnz
  1495     07E5  2F8F               	goto	l320
  1496     07E6  3A03               	xorlw	3	; case 2
  1497     07E7  1903               	skipnz
  1498     07E8  2FB4               	goto	l343
  1499     07E9  2FEA               	goto	l1359
  1500     07EA                     l1359:
  1501                           
  1502                           ;main.c: 187:             NewDataFlag = 0;
  1503     07EA  01FD               	clrf	_NewDataFlag
  1504     07EB  2F66               	goto	l1317
  1505     07EC                     __end_of_main:
  1506                           
  1507                           	psect	text1
  1508     066F                     __ptext1:	
  1509 ;; *************** function _TMR1_StartTimer *****************
  1510 ;; Defined at:
  1511 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;		None
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		None
  1520 ;; Tracked objects:
  1521 ;;		On entry : 1F/0
  1522 ;;		On exit  : 1F/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1525 ;;      Params:         0       0       0       0
  1526 ;;      Locals:         0       0       0       0
  1527 ;;      Temps:          0       0       0       0
  1528 ;;      Totals:         0       0       0       0
  1529 ;;Total ram usage:        0 bytes
  1530 ;; Hardware stack levels used: 1
  1531 ;; This function calls:
  1532 ;;		Nothing
  1533 ;; This function is called by:
  1534 ;;		_main
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538     066F                     _TMR1_StartTimer:	
  1539                           ;psect for function _TMR1_StartTimer
  1540                           
  1541                           
  1542                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1543                           
  1544                           ;incstack = 0
  1545                           ; Regs used in _TMR1_StartTimer: []
  1546     066F  1418               	bsf	24,0	;volatile
  1547     0670  0008               	return
  1548     0671                     __end_of_TMR1_StartTimer:
  1549                           
  1550                           	psect	text2
  1551     0695                     __ptext2:	
  1552 ;; *************** function _SYSTEM_Initialize *****************
  1553 ;; Defined at:
  1554 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;		None
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2, status,0, pclath, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : B1F/0
  1565 ;;		On exit  : 1F/1
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1568 ;;      Params:         0       0       0       0
  1569 ;;      Locals:         0       0       0       0
  1570 ;;      Temps:          0       0       0       0
  1571 ;;      Totals:         0       0       0       0
  1572 ;;Total ram usage:        0 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 2
  1575 ;; This function calls:
  1576 ;;		_EUSART_Initialize
  1577 ;;		_OSCILLATOR_Initialize
  1578 ;;		_PIN_MANAGER_Initialize
  1579 ;;		_TMR1_Initialize
  1580 ;;		_WDT_Initialize
  1581 ;; This function is called by:
  1582 ;;		_main
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586     0695                     _SYSTEM_Initialize:	
  1587                           ;psect for function _SYSTEM_Initialize
  1588                           
  1589                           
  1590                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1591                           
  1592                           ;incstack = 0
  1593                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1594     0695  26F5               	fcall	_PIN_MANAGER_Initialize
  1595                           
  1596                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1597     0696  26A7               	fcall	_OSCILLATOR_Initialize
  1598                           
  1599                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1600     0697  2675               	fcall	_WDT_Initialize
  1601                           
  1602                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1603     0698  26CA               	fcall	_TMR1_Initialize
  1604                           
  1605                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  1606     0699  270B               	fcall	_EUSART_Initialize
  1607     069A  0008               	return
  1608     069B                     __end_of_SYSTEM_Initialize:
  1609                           
  1610                           	psect	text3
  1611     0675                     __ptext3:	
  1612 ;; *************** function _WDT_Initialize *****************
  1613 ;; Defined at:
  1614 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg
  1623 ;; Tracked objects:
  1624 ;;		On entry : B1F/2
  1625 ;;		On exit  : B1F/1
  1626 ;;		Unchanged: B00/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1628 ;;      Params:         0       0       0       0
  1629 ;;      Locals:         0       0       0       0
  1630 ;;      Temps:          0       0       0       0
  1631 ;;      Totals:         0       0       0       0
  1632 ;;Total ram usage:        0 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_SYSTEM_Initialize
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641     0675                     _WDT_Initialize:	
  1642                           ;psect for function _WDT_Initialize
  1643                           
  1644                           
  1645                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  1646                           
  1647                           ;incstack = 0
  1648                           ; Regs used in _WDT_Initialize: [wreg]
  1649     0675  3016               	movlw	22
  1650     0676  0021               	movlb	1	; select bank1
  1651     0677  0097               	movwf	23	;volatile
  1652     0678  0008               	return
  1653     0679                     __end_of_WDT_Initialize:
  1654                           
  1655                           	psect	text4
  1656     06CA                     __ptext4:	
  1657 ;; *************** function _TMR1_Initialize *****************
  1658 ;; Defined at:
  1659 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;		None
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, status,2, status,0, pclath, cstack
  1668 ;; Tracked objects:
  1669 ;;		On entry : 1F/1
  1670 ;;		On exit  : 1F/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1673 ;;      Params:         0       0       0       0
  1674 ;;      Locals:         0       0       0       0
  1675 ;;      Temps:          0       0       0       0
  1676 ;;      Totals:         0       0       0       0
  1677 ;;Total ram usage:        0 bytes
  1678 ;; Hardware stack levels used: 1
  1679 ;; Hardware stack levels required when called: 1
  1680 ;; This function calls:
  1681 ;;		_TMR1_SetInterruptHandler
  1682 ;; This function is called by:
  1683 ;;		_SYSTEM_Initialize
  1684 ;;		_main
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688     06CA                     _TMR1_Initialize:	
  1689                           ;psect for function _TMR1_Initialize
  1690                           
  1691                           
  1692                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1693                           
  1694                           ;incstack = 0
  1695                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1696     06CA  0020               	movlb	0	; select bank0
  1697     06CB  0199               	clrf	25	;volatile
  1698                           
  1699                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xFC;
  1700     06CC  30FC               	movlw	252
  1701     06CD  0097               	movwf	23	;volatile
  1702                           
  1703                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x18;
  1704     06CE  3018               	movlw	24
  1705     06CF  0096               	movwf	22	;volatile
  1706                           
  1707                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1708     06D0  1011               	bcf	17,0	;volatile
  1709                           
  1710                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1711     06D1  0817               	movf	23,w	;volatile
  1712     06D2  00DF               	movwf	_timer1ReloadVal+1	;volatile
  1713     06D3  0816               	movf	22,w	;volatile
  1714     06D4  00DE               	movwf	_timer1ReloadVal	;volatile
  1715                           
  1716                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1717     06D5  0021               	movlb	1	; select bank1
  1718     06D6  1411               	bsf	17,0	;volatile
  1719                           
  1720                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1721     06D7  3000               	movlw	0
  1722     06D8  00F0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1723     06D9  3000               	movlw	0
  1724     06DA  00F1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1725     06DB  268F               	fcall	_TMR1_SetInterruptHandler
  1726                           
  1727                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  1728     06DC  3001               	movlw	1
  1729     06DD  0098               	movwf	24	;volatile
  1730     06DE  0008               	return
  1731     06DF                     __end_of_TMR1_Initialize:
  1732                           
  1733                           	psect	text5
  1734     068F                     __ptext5:	
  1735 ;; *************** function _TMR1_SetInterruptHandler *****************
  1736 ;; Defined at:
  1737 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  1740 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;		None
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg
  1747 ;; Tracked objects:
  1748 ;;		On entry : 1F/1
  1749 ;;		On exit  : 1F/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1752 ;;      Params:         2       0       0       0
  1753 ;;      Locals:         0       0       0       0
  1754 ;;      Temps:          0       0       0       0
  1755 ;;      Totals:         2       0       0       0
  1756 ;;Total ram usage:        2 bytes
  1757 ;; Hardware stack levels used: 1
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_TMR1_Initialize
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765     068F                     _TMR1_SetInterruptHandler:	
  1766                           ;psect for function _TMR1_SetInterruptHandler
  1767                           
  1768                           
  1769                           ;mcc_generated_files/tmr1.c: 178:     TMR1_InterruptHandler = InterruptHandler;
  1770                           
  1771                           ;incstack = 0
  1772                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1773     068F  0871               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1774     0690  0020               	movlb	0	; select bank0
  1775     0691  00ED               	movwf	_TMR1_InterruptHandler+1
  1776     0692  0870               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1777     0693  00EC               	movwf	_TMR1_InterruptHandler
  1778     0694  0008               	return
  1779     0695                     __end_of_TMR1_SetInterruptHandler:
  1780                           
  1781                           	psect	text6
  1782     06F5                     __ptext6:	
  1783 ;; *************** function _PIN_MANAGER_Initialize *****************
  1784 ;; Defined at:
  1785 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, status,2
  1794 ;; Tracked objects:
  1795 ;;		On entry : B1F/0
  1796 ;;		On exit  : B1F/2
  1797 ;;		Unchanged: B00/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1799 ;;      Params:         0       0       0       0
  1800 ;;      Locals:         0       0       0       0
  1801 ;;      Temps:          0       0       0       0
  1802 ;;      Totals:         0       0       0       0
  1803 ;;Total ram usage:        0 bytes
  1804 ;; Hardware stack levels used: 1
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_SYSTEM_Initialize
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812     06F5                     _PIN_MANAGER_Initialize:	
  1813                           ;psect for function _PIN_MANAGER_Initialize
  1814                           
  1815                           
  1816                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x1D;
  1817                           
  1818                           ;incstack = 0
  1819                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1820     06F5  301D               	movlw	29
  1821     06F6  0022               	movlb	2	; select bank2
  1822     06F7  008C               	movwf	12	;volatile
  1823                           
  1824                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1825     06F8  018D               	clrf	13	;volatile
  1826                           
  1827                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xE0;
  1828     06F9  30E0               	movlw	224
  1829     06FA  0021               	movlb	1	; select bank1
  1830     06FB  008C               	movwf	12	;volatile
  1831                           
  1832                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  1833     06FC  30FF               	movlw	255
  1834     06FD  008D               	movwf	13	;volatile
  1835                           
  1836                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF8;
  1837     06FE  30F8               	movlw	248
  1838     06FF  0023               	movlb	3	; select bank3
  1839     0700  008D               	movwf	13	;volatile
  1840                           
  1841                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x00;
  1842     0701  018C               	clrf	12	;volatile
  1843                           
  1844                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  1845     0702  0024               	movlb	4	; select bank4
  1846     0703  018D               	clrf	13	;volatile
  1847                           
  1848                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  1849     0704  018C               	clrf	12	;volatile
  1850                           
  1851                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  1852     0705  0021               	movlb	1	; select bank1
  1853     0706  1795               	bsf	21,7	;volatile
  1854                           
  1855                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  1856     0707  0022               	movlb	2	; select bank2
  1857     0708  019D               	clrf	29	;volatile
  1858                           
  1859                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  1860     0709  019E               	clrf	30	;volatile
  1861     070A  0008               	return
  1862     070B                     __end_of_PIN_MANAGER_Initialize:
  1863                           
  1864                           	psect	text7
  1865     06A7                     __ptext7:	
  1866 ;; *************** function _OSCILLATOR_Initialize *****************
  1867 ;; Defined at:
  1868 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      void 
  1875 ;; Registers used:
  1876 ;;		wreg, status,2
  1877 ;; Tracked objects:
  1878 ;;		On entry : B1F/2
  1879 ;;		On exit  : B1F/2
  1880 ;;		Unchanged: B00/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1882 ;;      Params:         0       0       0       0
  1883 ;;      Locals:         0       0       0       0
  1884 ;;      Temps:          0       0       0       0
  1885 ;;      Totals:         0       0       0       0
  1886 ;;Total ram usage:        0 bytes
  1887 ;; Hardware stack levels used: 1
  1888 ;; This function calls:
  1889 ;;		Nothing
  1890 ;; This function is called by:
  1891 ;;		_SYSTEM_Initialize
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895     06A7                     _OSCILLATOR_Initialize:	
  1896                           ;psect for function _OSCILLATOR_Initialize
  1897                           
  1898                           
  1899                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x48;
  1900                           
  1901                           ;incstack = 0
  1902                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1903     06A7  3048               	movlw	72
  1904     06A8  0021               	movlb	1	; select bank1
  1905     06A9  0099               	movwf	25	;volatile
  1906                           
  1907                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  1908     06AA  0198               	clrf	24	;volatile
  1909                           
  1910                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  1911     06AB  0022               	movlb	2	; select bank2
  1912     06AC  0196               	clrf	22	;volatile
  1913     06AD  0008               	return
  1914     06AE                     __end_of_OSCILLATOR_Initialize:
  1915                           
  1916                           	psect	text8
  1917     070B                     __ptext8:	
  1918 ;; *************** function _EUSART_Initialize *****************
  1919 ;; Defined at:
  1920 ;;		line 81 in file "mcc_generated_files/eusart.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0, pclath, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 1E/1
  1931 ;;		On exit  : 1F/1
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1934 ;;      Params:         0       0       0       0
  1935 ;;      Locals:         0       0       0       0
  1936 ;;      Temps:          0       0       0       0
  1937 ;;      Totals:         0       0       0       0
  1938 ;;Total ram usage:        0 bytes
  1939 ;; Hardware stack levels used: 1
  1940 ;; Hardware stack levels required when called: 1
  1941 ;; This function calls:
  1942 ;;		_EUSART_SetErrorHandler
  1943 ;;		_EUSART_SetFramingErrorHandler
  1944 ;;		_EUSART_SetOverrunErrorHandler
  1945 ;;		_EUSART_SetRxInterruptHandler
  1946 ;; This function is called by:
  1947 ;;		_SYSTEM_Initialize
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952     070B                     _EUSART_Initialize:	
  1953                           ;psect for function _EUSART_Initialize
  1954                           
  1955                           
  1956                           ;mcc_generated_files/eusart.c: 84:     PIE1bits.RCIE = 0;
  1957                           
  1958                           ;incstack = 0
  1959                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1960     070B  0021               	movlb	1	; select bank1
  1961     070C  1291               	bcf	17,5	;volatile
  1962                           
  1963                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  1964     070D  3000               	movlw	0
  1965     070E  00F0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  1966     070F  3000               	movlw	0
  1967     0710  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  1968     0711  2689               	fcall	_EUSART_SetRxInterruptHandler
  1969                           
  1970                           ;mcc_generated_files/eusart.c: 89:     BAUDCON = 0x08;
  1971     0712  3008               	movlw	8
  1972     0713  0023               	movlb	3	; select bank3
  1973     0714  009F               	movwf	31	;volatile
  1974                           
  1975                           ;mcc_generated_files/eusart.c: 92:     RCSTA = 0x80;
  1976     0715  3080               	movlw	128
  1977     0716  009D               	movwf	29	;volatile
  1978                           
  1979                           ;mcc_generated_files/eusart.c: 95:     TXSTA = 0xB4;
  1980     0717  30B4               	movlw	180
  1981     0718  009E               	movwf	30	;volatile
  1982                           
  1983                           ;mcc_generated_files/eusart.c: 98:     SPBRGL = 0x06;
  1984     0719  3006               	movlw	6
  1985     071A  009B               	movwf	27	;volatile
  1986                           
  1987                           ;mcc_generated_files/eusart.c: 101:     SPBRGH = 0x00;
  1988     071B  019C               	clrf	28	;volatile
  1989                           
  1990                           ;mcc_generated_files/eusart.c: 104:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  1991     071C  3000               	movlw	0
  1992     071D  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  1993     071E  3000               	movlw	0
  1994     071F  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  1995     0720  2683               	fcall	_EUSART_SetFramingErrorHandler
  1996                           
  1997                           ;mcc_generated_files/eusart.c: 105:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  1998     0721  3000               	movlw	0
  1999     0722  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  2000     0723  3000               	movlw	0
  2001     0724  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  2002     0725  267E               	fcall	_EUSART_SetOverrunErrorHandler
  2003                           
  2004                           ;mcc_generated_files/eusart.c: 106:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  2005     0726  3000               	movlw	0
  2006     0727  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  2007     0728  3000               	movlw	0
  2008     0729  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  2009     072A  2679               	fcall	_EUSART_SetErrorHandler
  2010                           
  2011                           ;mcc_generated_files/eusart.c: 108:     eusartRxLastError.status = 0;
  2012     072B  01E2               	clrf	_eusartRxLastError	;volatile
  2013                           
  2014                           ;mcc_generated_files/eusart.c: 111:     eusartRxHead = 0;
  2015     072C  01E5               	clrf	_eusartRxHead	;volatile
  2016                           
  2017                           ;mcc_generated_files/eusart.c: 112:     eusartRxTail = 0;
  2018     072D  01E4               	clrf	_eusartRxTail	;volatile
  2019                           
  2020                           ;mcc_generated_files/eusart.c: 113:     eusartRxCount = 0;
  2021     072E  01E3               	clrf	_eusartRxCount	;volatile
  2022                           
  2023                           ;mcc_generated_files/eusart.c: 116:     PIE1bits.RCIE = 1;
  2024     072F  0021               	movlb	1	; select bank1
  2025     0730  1691               	bsf	17,5	;volatile
  2026     0731  0008               	return
  2027     0732                     __end_of_EUSART_Initialize:
  2028                           
  2029                           	psect	text9
  2030     0689                     __ptext9:	
  2031 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  2032 ;; Defined at:
  2033 ;;		line 233 in file "mcc_generated_files/eusart.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2036 ;;		 -> EUSART_Receive_ISR(1), 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg
  2043 ;; Tracked objects:
  2044 ;;		On entry : 1F/1
  2045 ;;		On exit  : 1F/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2048 ;;      Params:         2       0       0       0
  2049 ;;      Locals:         0       0       0       0
  2050 ;;      Temps:          0       0       0       0
  2051 ;;      Totals:         2       0       0       0
  2052 ;;Total ram usage:        2 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; This function calls:
  2055 ;;		Nothing
  2056 ;; This function is called by:
  2057 ;;		_EUSART_Initialize
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061     0689                     _EUSART_SetRxInterruptHandler:	
  2062                           ;psect for function _EUSART_SetRxInterruptHandler
  2063                           
  2064                           
  2065                           ;mcc_generated_files/eusart.c: 234:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  2066                           
  2067                           ;incstack = 0
  2068                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  2069     0689  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  2070     068A  0020               	movlb	0	; select bank0
  2071     068B  00EF               	movwf	_EUSART_RxDefaultInterruptHandler+1
  2072     068C  0870               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  2073     068D  00EE               	movwf	_EUSART_RxDefaultInterruptHandler
  2074     068E  0008               	return
  2075     068F                     __end_of_EUSART_SetRxInterruptHandler:
  2076                           
  2077                           	psect	text10
  2078     067E                     __ptext10:	
  2079 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2080 ;; Defined at:
  2081 ;;		line 224 in file "mcc_generated_files/eusart.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2084 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;		None
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg
  2091 ;; Tracked objects:
  2092 ;;		On entry : 1F/0
  2093 ;;		On exit  : 1F/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2096 ;;      Params:         2       0       0       0
  2097 ;;      Locals:         0       0       0       0
  2098 ;;      Temps:          0       0       0       0
  2099 ;;      Totals:         2       0       0       0
  2100 ;;Total ram usage:        2 bytes
  2101 ;; Hardware stack levels used: 1
  2102 ;; This function calls:
  2103 ;;		Nothing
  2104 ;; This function is called by:
  2105 ;;		_EUSART_Initialize
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109     067E                     _EUSART_SetOverrunErrorHandler:	
  2110                           ;psect for function _EUSART_SetOverrunErrorHandler
  2111                           
  2112                           
  2113                           ;mcc_generated_files/eusart.c: 225:     EUSART_OverrunErrorHandler = interruptHandler;
  2114                           
  2115                           ;incstack = 0
  2116                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  2117     067E  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  2118     067F  00E9               	movwf	_EUSART_OverrunErrorHandler+1
  2119     0680  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  2120     0681  00E8               	movwf	_EUSART_OverrunErrorHandler
  2121     0682  0008               	return
  2122     0683                     __end_of_EUSART_SetOverrunErrorHandler:
  2123                           
  2124                           	psect	text11
  2125     0683                     __ptext11:	
  2126 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2127 ;; Defined at:
  2128 ;;		line 220 in file "mcc_generated_files/eusart.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2131 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg
  2138 ;; Tracked objects:
  2139 ;;		On entry : 1F/3
  2140 ;;		On exit  : 1F/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2143 ;;      Params:         2       0       0       0
  2144 ;;      Locals:         0       0       0       0
  2145 ;;      Temps:          0       0       0       0
  2146 ;;      Totals:         2       0       0       0
  2147 ;;Total ram usage:        2 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_EUSART_Initialize
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156     0683                     _EUSART_SetFramingErrorHandler:	
  2157                           ;psect for function _EUSART_SetFramingErrorHandler
  2158                           
  2159                           
  2160                           ;mcc_generated_files/eusart.c: 221:     EUSART_FramingErrorHandler = interruptHandler;
  2161                           
  2162                           ;incstack = 0
  2163                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2164     0683  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  2165     0684  0020               	movlb	0	; select bank0
  2166     0685  00EB               	movwf	_EUSART_FramingErrorHandler+1
  2167     0686  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  2168     0687  00EA               	movwf	_EUSART_FramingErrorHandler
  2169     0688  0008               	return
  2170     0689                     __end_of_EUSART_SetFramingErrorHandler:
  2171                           
  2172                           	psect	text12
  2173     0679                     __ptext12:	
  2174 ;; *************** function _EUSART_SetErrorHandler *****************
  2175 ;; Defined at:
  2176 ;;		line 228 in file "mcc_generated_files/eusart.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2179 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;		None
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg
  2186 ;; Tracked objects:
  2187 ;;		On entry : 1F/0
  2188 ;;		On exit  : 1F/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2191 ;;      Params:         2       0       0       0
  2192 ;;      Locals:         0       0       0       0
  2193 ;;      Temps:          0       0       0       0
  2194 ;;      Totals:         2       0       0       0
  2195 ;;Total ram usage:        2 bytes
  2196 ;; Hardware stack levels used: 1
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_EUSART_Initialize
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204     0679                     _EUSART_SetErrorHandler:	
  2205                           ;psect for function _EUSART_SetErrorHandler
  2206                           
  2207                           
  2208                           ;mcc_generated_files/eusart.c: 229:     EUSART_ErrorHandler = interruptHandler;
  2209                           
  2210                           ;incstack = 0
  2211                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2212     0679  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  2213     067A  00E7               	movwf	_EUSART_ErrorHandler+1
  2214     067B  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  2215     067C  00E6               	movwf	_EUSART_ErrorHandler
  2216     067D  0008               	return
  2217     067E                     __end_of_EUSART_SetErrorHandler:
  2218                           
  2219                           	psect	text13
  2220     06DF                     __ptext13:	
  2221 ;; *************** function _GrabCol *****************
  2222 ;; Defined at:
  2223 ;;		line 86 in file "main.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  rows            2    4[COMMON] unsigned short 
  2226 ;;  column          1    6[COMMON] unsigned char 
  2227 ;;  matrix          1    7[COMMON] PTR unsigned char [3]
  2228 ;;		 -> TChar(9), 
  2229 ;;  ColData         1    8[COMMON] unsigned char 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  i               1   11[COMMON] unsigned char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2236 ;; Tracked objects:
  2237 ;;		On entry : 1F/2
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2241 ;;      Params:         5       0       0       0
  2242 ;;      Locals:         1       0       0       0
  2243 ;;      Temps:          2       0       0       0
  2244 ;;      Totals:         8       0       0       0
  2245 ;;Total ram usage:        8 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; Hardware stack levels required when called: 1
  2248 ;; This function calls:
  2249 ;;		___bmul
  2250 ;; This function is called by:
  2251 ;;		_main
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255     06DF                     _GrabCol:	
  2256                           ;psect for function _GrabCol
  2257                           
  2258                           
  2259                           ;main.c: 87:     ColData = 0;
  2260                           
  2261                           ;incstack = 0
  2262                           ; Regs used in _GrabCol: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2263     06DF  01F8               	clrf	GrabCol@ColData
  2264                           
  2265                           ;main.c: 88:     for(uint8_t i=(rows-1);i>=0;i--){
  2266     06E0  0874               	movf	GrabCol@rows,w
  2267     06E1  3EFF               	addlw	255
  2268     06E2  00FB               	movwf	GrabCol@i
  2269     06E3                     l1281:
  2270                           
  2271                           ;main.c: 89:         ColData = ColData*(2) + matrix[i][column];
  2272     06E3  3003               	movlw	3
  2273     06E4  00F0               	movwf	___bmul@multiplicand
  2274     06E5  087B               	movf	GrabCol@i,w
  2275     06E6  26B9               	fcall	___bmul
  2276     06E7  0777               	addwf	GrabCol@matrix,w
  2277     06E8  00F9               	movwf	??_GrabCol
  2278     06E9  0876               	movf	GrabCol@column,w
  2279     06EA  0779               	addwf	??_GrabCol,w
  2280     06EB  00FA               	movwf	??_GrabCol+1
  2281     06EC  087A               	movf	??_GrabCol+1,w
  2282     06ED  0086               	movwf	6
  2283     06EE  0187               	clrf	7
  2284     06EF  3578               	lslf	GrabCol@ColData,w
  2285     06F0  0701               	addwf	1,w
  2286     06F1  00F8               	movwf	GrabCol@ColData
  2287                           
  2288                           ;main.c: 90:     }
  2289     06F2  3001               	movlw	1
  2290     06F3  02FB               	subwf	GrabCol@i,f
  2291     06F4  2EE3               	goto	l1281
  2292     06F5                     __end_of_GrabCol:
  2293                           
  2294                           	psect	text14
  2295     06B9                     __ptext14:	
  2296 ;; *************** function ___bmul *****************
  2297 ;; Defined at:
  2298 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  multiplier      1    wreg     unsigned char 
  2301 ;;  multiplicand    1    0[COMMON] unsigned char 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;  multiplier      1    3[COMMON] unsigned char 
  2304 ;;  product         1    2[COMMON] unsigned char 
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  1    wreg      unsigned char 
  2307 ;; Registers used:
  2308 ;;		wreg, status,2, status,0
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/2
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2314 ;;      Params:         1       0       0       0
  2315 ;;      Locals:         2       0       0       0
  2316 ;;      Temps:          1       0       0       0
  2317 ;;      Totals:         4       0       0       0
  2318 ;;Total ram usage:        4 bytes
  2319 ;; Hardware stack levels used: 1
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_GrabCol
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327     06B9                     ___bmul:	
  2328                           ;psect for function ___bmul
  2329                           
  2330                           
  2331                           ;incstack = 0
  2332                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2333                           ;___bmul@multiplier stored from wreg
  2334     06B9  00F3               	movwf	___bmul@multiplier
  2335     06BA  01F2               	clrf	___bmul@product
  2336     06BB                     l1241:
  2337     06BB  1C73               	btfss	___bmul@multiplier,0
  2338     06BC  2EC1               	goto	l1245
  2339     06BD  0870               	movf	___bmul@multiplicand,w
  2340     06BE  00F1               	movwf	??___bmul
  2341     06BF  0871               	movf	??___bmul,w
  2342     06C0  07F2               	addwf	___bmul@product,f
  2343     06C1                     l1245:
  2344     06C1  1003               	clrc
  2345     06C2  0DF0               	rlf	___bmul@multiplicand,f
  2346     06C3  1003               	clrc
  2347     06C4  0CF3               	rrf	___bmul@multiplier,f
  2348     06C5  0873               	movf	___bmul@multiplier,w
  2349     06C6  1D03               	btfss	3,2
  2350     06C7  2EBB               	goto	l1241
  2351     06C8  0872               	movf	___bmul@product,w
  2352     06C9  0008               	return
  2353     06CA                     __end_of___bmul:
  2354                           
  2355                           	psect	text15
  2356     0671                     __ptext15:	
  2357 ;; *************** function _EUSART_is_tx_done *****************
  2358 ;; Defined at:
  2359 ;;		line 129 in file "mcc_generated_files/eusart.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;		None
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      _Bool 
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0
  2368 ;; Tracked objects:
  2369 ;;		On entry : 1C/3
  2370 ;;		On exit  : 1F/3
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2373 ;;      Params:         0       0       0       0
  2374 ;;      Locals:         0       0       0       0
  2375 ;;      Temps:          0       0       0       0
  2376 ;;      Totals:         0       0       0       0
  2377 ;;Total ram usage:        0 bytes
  2378 ;; Hardware stack levels used: 1
  2379 ;; This function calls:
  2380 ;;		Nothing
  2381 ;; This function is called by:
  2382 ;;		_main
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386     0671                     _EUSART_is_tx_done:	
  2387                           ;psect for function _EUSART_is_tx_done
  2388                           
  2389                           
  2390                           ;mcc_generated_files/eusart.c: 131:     return TXSTAbits.TRMT;
  2391                           
  2392                           ;incstack = 0
  2393                           ; Regs used in _EUSART_is_tx_done: [wreg+status,2+status,0]
  2394     0671  0023               	movlb	3	; select bank3
  2395     0672  0C1E               	rrf	30,w	;volatile
  2396     0673  3901               	andlw	1
  2397     0674  0008               	return
  2398     0675                     __end_of_EUSART_is_tx_done:
  2399                           
  2400                           	psect	text16
  2401     06AE                     __ptext16:	
  2402 ;; *************** function _EUSART_Write *****************
  2403 ;; Defined at:
  2404 ;;		line 161 in file "mcc_generated_files/eusart.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  txData          1    wreg     unsigned char 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  txData          1    0[COMMON] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/2
  2415 ;;		On exit  : 1F/3
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2418 ;;      Params:         0       0       0       0
  2419 ;;      Locals:         1       0       0       0
  2420 ;;      Temps:          0       0       0       0
  2421 ;;      Totals:         1       0       0       0
  2422 ;;Total ram usage:        1 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		_main
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431     06AE                     _EUSART_Write:	
  2432                           ;psect for function _EUSART_Write
  2433                           
  2434                           
  2435                           ;incstack = 0
  2436                           ; Regs used in _EUSART_Write: [wreg]
  2437                           ;EUSART_Write@txData stored from wreg
  2438     06AE  00F0               	movwf	EUSART_Write@txData
  2439                           
  2440                           ;mcc_generated_files/eusart.c: 161: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 162: {;mcc_generated_files/eusart.c: 163:     RCSTAbits.SREN = 0;
  2441     06AF  0023               	movlb	3	; select bank3
  2442     06B0  129D               	bcf	29,5	;volatile
  2443                           
  2444                           ;mcc_generated_files/eusart.c: 164:     RCSTAbits.CREN = 0;
  2445     06B1  121D               	bcf	29,4	;volatile
  2446     06B2                     l200:	
  2447                           ;mcc_generated_files/eusart.c: 166:     {;mcc_generated_files/eusart.c: 167:     }
  2448                           
  2449                           
  2450                           ;mcc_generated_files/eusart.c: 165:     while(0 == PIR1bits.TXIF)
  2451     06B2  0020               	movlb	0	; select bank0
  2452     06B3  1E11               	btfss	17,4	;volatile
  2453     06B4  2EB2               	goto	l200
  2454                           
  2455                           ;mcc_generated_files/eusart.c: 169:     TXREG = txData;
  2456     06B5  0870               	movf	EUSART_Write@txData,w
  2457     06B6  0023               	movlb	3	; select bank3
  2458     06B7  009A               	movwf	26	;volatile
  2459     06B8  0008               	return
  2460     06B9                     __end_of_EUSART_Write:
  2461     007E                     btemp	set	126	;btemp
  2462     007E                     wtemp0	set	126
  2463                           
  2464                           	psect	config
  2465                           
  2466                           ;Config register CONFIG1 @ 0x8007
  2467                           ;	Oscillator Selection
  2468                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2469                           ;	Watchdog Timer Enable
  2470                           ;	WDTE = OFF, WDT disabled
  2471                           ;	Power-up Timer Enable
  2472                           ;	PWRTE = OFF, PWRT disabled
  2473                           ;	MCLR Pin Function Select
  2474                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2475                           ;	Flash Program Memory Code Protection
  2476                           ;	CP = OFF, Program memory code protection is disabled
  2477                           ;	Data Memory Code Protection
  2478                           ;	CPD = OFF, Data memory code protection is disabled
  2479                           ;	Brown-out Reset Enable
  2480                           ;	BOREN = ON, Brown-out Reset enabled
  2481                           ;	Clock Out Enable
  2482                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2483                           ;	Internal/External Switchover
  2484                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2485                           ;	Fail-Safe Clock Monitor Enable
  2486                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2487     8007                     	org	32775
  2488     8007  3FE4               	dw	16356
  2489                           
  2490                           ;Config register CONFIG2 @ 0x8008
  2491                           ;	Flash Memory Self-Write Protection
  2492                           ;	WRT = OFF, Write protection off
  2493                           ;	PLL Enable
  2494                           ;	PLLEN = OFF, 4x PLL disabled
  2495                           ;	Stack Overflow/Underflow Reset Enable
  2496                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2497                           ;	Brown-out Reset Voltage Selection
  2498                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2499                           ;	In-Circuit Debugger Mode
  2500                           ;	DEBUG = 0x1, unprogrammed default
  2501                           ;	Low-Voltage Programming Enable
  2502                           ;	LVP = ON, Low-voltage programming enabled
  2503     8008                     	org	32776
  2504     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        46
    BSS         26
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0      80
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    GrabCol@matrix	PTR unsigned char [3] size(1) Largest target is 9
		 -> TChar(BANK0[9]), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_GrabCol
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _GrabCol->___bmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2173
                  _EUSART_Initialize
                       _EUSART_Write
                  _EUSART_is_tx_done
                            _GrabCol
                  _SYSTEM_Initialize
                    _TMR1_Initialize
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     392
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _GrabCol                                              8     3      5    1171
                                              4 COMMON     8     3      5
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     145
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     _EUSART_SetErrorHandler
     _EUSART_SetFramingErrorHandler
     _EUSART_SetOverrunErrorHandler
     _EUSART_SetRxInterruptHandler
   _EUSART_Write
   _EUSART_is_tx_done
   _GrabCol
     ___bmul
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_Initialize
   _TMR1_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      5E      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Nov 24 22:24:32 2023

                ?_EUSART_SetRxInterruptHandler 0070                                     _AccessLine 007C  
                               ___bmul@product 0072                                            l200 06B2  
                                          l320 078F                                            l343 07B4  
                                          l297 076A                                _timer1ReloadVal 005E  
               ?_EUSART_SetFramingErrorHandler 0070                                            wreg 0009  
                                         l1241 06BB                                           l1331 0780  
                                         l1245 06C1                                           l1317 0766  
                                         l1351 07C4                                           l1343 07A5  
                                         l1327 077A                                           l1281 06E3  
                                         l1355 07CA                                           l1339 079F  
                                         l1357 07DA                                           l1359 07EA  
                                         l1397 07DF                                           _LATA 010C  
                                         _LATB 010D                                           _WPUA 020C  
                                         _WPUB 020D                                           _main 0760  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         _rows 0044                                           btemp 007E  
                                         start 0001                     ??_TMR1_SetInterruptHandler 0072  
                            ___bmul@multiplier 0073                                __end_of_GrabCol 06F5  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 06AE  
                                        ?_main 0070                                _TMR1_StartTimer 066F  
                                        _T1CON 0018                                          _CChar 003B  
                                        _RCREG 0199                                          _HChar 0020  
                                        _RCSTA 019D                                          _IChar 0032  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _LChar 0029                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                        _TChar 0045                                          _TXSTA 019E  
                               _WDT_Initialize 0675                        __end_of_TMR1_Initialize 06DF  
                                        status 0003                                          wtemp0 007E  
                              __initialization 07EC                                   __end_of_main 07EC  
                               ??_EUSART_Write 0070                 ??_EUSART_SetRxInterruptHandler 0072  
                                       ??_main 007C                         __end_of_WDT_Initialize 0679  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 0068  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                    ??_GrabCol 0079                   _TMR1_DefaultInterruptHandler 0000  
                                       ___bmul 06B9                        __end_of_TMR1_StartTimer 0671  
                                       _column 0060                                ?_WDT_Initialize 0070  
     TMR1_SetInterruptHandler@InterruptHandler 0070                               ?_TMR1_Initialize 0070  
                            _SYSTEM_Initialize 0695                        __end_of__initialization 07FE  
                                  _NewDataFlag 007D                             ?_SYSTEM_Initialize 0070  
                          ___bmul@multiplicand 0070                                 __pcstackCOMMON 0070  
                                 __pidataBANK0 0732                            ??_SYSTEM_Initialize 0072  
                               _OPTION_REGbits 0095                           _eusartRxStatusBuffer 004E  
              ??_EUSART_SetOverrunErrorHandler 0072                      __end_of_SYSTEM_Initialize 069B  
                                   __pbssBANK0 004E                           __end_of_EUSART_Write 06B9  
                                   __pmaintext 0760                                        ?___bmul 0070  
                             ?_TMR1_StartTimer 0070                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                _eusartRxCount 0063                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 0072                                        _ColData 0061  
                                      _GrabCol 06DF                                 GrabCol@ColData 0078  
                                      __ptext1 066F                                        __ptext2 0695  
                                      __ptext3 0675                                        __ptext4 06CA  
                                      __ptext5 068F                                        __ptext6 06F5  
                                      __ptext7 06A7                                        __ptext8 070B  
                                      __ptext9 0689                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 06A7                       ??_PIN_MANAGER_Initialize 0070  
                    ?_TMR1_SetInterruptHandler 0070                                        clrloop0 069C  
                         end_of_initialization 07FE          __end_of_EUSART_SetOverrunErrorHandler 0683  
                _EUSART_SetOverrunErrorHandler 067E                                        init_ram 06A1  
                                      initloop 06A2                              _EUSART_Initialize 070B  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                          ??_EUSART_Initialize 0072                               ??_WDT_Initialize 0070  
                    __end_of_EUSART_Initialize 0732                                      _TXSTAbits 019E  
                               __end_of___bmul 06CA                     _EUSART_DefaultErrorHandler 0000  
                                 _EUSART_Write 06AE                         ?_OSCILLATOR_Initialize 0070  
                          start_initialization 07EC   EUSART_SetRxInterruptHandler@interruptHandler 0070  
               ?_EUSART_SetOverrunErrorHandler 0070                     _EUSART_FramingErrorHandler 006A  
                                     ??___bmul 0071                         _EUSART_SetErrorHandler 0679  
                                  __pdataBANK0 0020                                    __pbssCOMMON 007C  
                                    ___latbits 0000                                       ?_GrabCol 0074  
             _EUSART_RxDefaultInterruptHandler 006E                                      __pnvBANK0 0066  
                       _PIN_MANAGER_Initialize 06F5               __end_of_TMR1_SetInterruptHandler 0695  
                                 _eusartRxHead 0065                                   _eusartRxTail 0064  
                               _eusartRxBuffer 0056                                       _LATAbits 010C  
                                GrabCol@column 0076         EUSART_SetErrorHandler@interruptHandler 0070  
                                GrabCol@matrix 0077                                      clear_ram0 069B  
                                     _PIE1bits 0091                              _eusartRxLastError 0062  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0072  
                            _EUSART_is_tx_done 0671              _EUSART_DefaultOverrunErrorHandler 0000  
                                     GrabCol@i 007B                             ?_EUSART_is_tx_done 0070  
                            ??_TMR1_Initialize 0072                            ??_EUSART_is_tx_done 0070  
                    __end_of_EUSART_is_tx_done 0675                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 0066                       _TMR1_SetInterruptHandler 068F  
                        _TMR1_InterruptHandler 006C                                       __ptext10 067E  
                                     __ptext11 0683                                       __ptext12 0679  
                                     __ptext13 06DF                                       __ptext14 06B9  
                                     __ptext15 0671                                       __ptext16 06AE  
                            ??_TMR1_StartTimer 0070                        ?_EUSART_SetErrorHandler 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 0070          __end_of_EUSART_SetFramingErrorHandler 0689  
                _EUSART_SetFramingErrorHandler 0683                                     _INTCONbits 000B  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 067E  
         __end_of_EUSART_SetRxInterruptHandler 068F                   _EUSART_SetRxInterruptHandler 0689  
                                  GrabCol@rows 0074                             _EUSART_Receive_ISR 0000  
EUSART_SetFramingErrorHandler@interruptHandler 0070                             EUSART_Write@txData 0070  
               __end_of_PIN_MANAGER_Initialize 070B                                _TMR1_Initialize 06CA  
